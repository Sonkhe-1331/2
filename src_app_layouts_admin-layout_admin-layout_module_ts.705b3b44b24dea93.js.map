{"version":3,"file":"src_app_layouts_admin-layout_admin-layout_module_ts.705b3b44b24dea93.js","mappings":"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","names":["AdminDashboardComponent","selectors","i0","CentreService","http","router","this","centre","id","post","BaseURI","delete","get","CourseCentre","factory","CentreDialogComponent","dialog","fb","dialogRef","data","centreService","edit","console","log","formCentre","group","CentreName","Validators","CentreLocation","populateForm","valid","updateCentre","value","CentreId","subscribe","_this","Close","AddCentre","patchValue","closeAll","MAT_DIALOG_DATA","ctx","ctx_r2","ctx_r4","CentreComponent","getCentres","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteCentre","MatDialogConfig","disableClose","width","height","add","open","afterClosed","_this2","_this3","CourseService","BaseURI2","Course","SubjectsService","Subject","CourseDialogComponent","courseService","subjectsService","getSubjects","CourseDesc","SubjectId","course","updateCourse","CourseId","AddCourse","subjects","res","CourseComponent","CoreServeERD","getCourses","getAllCourses","courses","courseId","deleteCourse","_this4","NotificationsComponent","from","align","color","Math","floor","random","$","notify","message","type","timer","placement","template","RegisteredLearnersComponent","getLearners","learners","SubjectDialogComponent","subjectService","formSubject","SubjectDesc","subject","updateSubject","AddSubject","AdminLayoutRoutes","path","children","component","SubjectComponent","subjectId","deleteSubject","RoomComponent","BookingComponent","UserProfileComponent","AdminLayoutModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatRippleModule","MatFormFieldModule","MatInputModule","MatCardModule","MatSelectModule","MatTooltipModule","MatIconModule","SharedModule","DemoMaterialModule"],"sourceRoot":"webpack:///","sources":["./src/app/layouts/admin-layout/AdminDashboard/AdminDashboard.component.ts","./src/app/layouts/admin-layout/AdminDashboard/AdminDashboard.component.html","./src/app/layouts/admin-layout/services/centre.service.ts","./src/app/layouts/admin-layout/diallogs/centre-dialog/centre-dialog.component.ts","./src/app/layouts/admin-layout/diallogs/centre-dialog/centre-dialog.component.html","./src/app/layouts/admin-layout/centre/centre.component.html","./src/app/layouts/admin-layout/centre/centre.component.ts","./src/app/layouts/admin-layout/services/course.service.ts","./src/app/layouts/admin-layout/services/subjects.service.ts","./src/app/layouts/admin-layout/diallogs/course-dialog/course-dialog.component.html","./src/app/layouts/admin-layout/diallogs/course-dialog/course-dialog.component.ts","./src/app/layouts/admin-layout/course/course.component.html","./src/app/layouts/admin-layout/course/course.component.ts","./src/app/layouts/admin-layout/notifications/notifications.component.ts","./src/app/layouts/admin-layout/notifications/notifications.component.html","./src/app/layouts/admin-layout/registered-learners/registered-learners.component.html","./src/app/layouts/admin-layout/registered-learners/registered-learners.component.ts","./src/app/layouts/admin-layout/diallogs/subject-dialog/subject-dialog.component.ts","./src/app/layouts/admin-layout/diallogs/subject-dialog/subject-dialog.component.html","./src/app/layouts/admin-layout/subject/subject.component.html","./src/app/layouts/admin-layout/subject/subject.component.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/layouts/admin-layout/admin-layout.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-AdminDashboard',\r\n  templateUrl: './AdminDashboard.component.html',\r\n  styleUrls: ['./AdminDashboard.component.scss']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-dashboard></app-dashboard>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CentreService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/Users/';\r\n\r\n\r\n  updateCentre(centre, id: number):  Observable<any> {\r\n    return this.http.post(this.BaseURI + 'EditCentre/'+id, centre);\r\n  }\r\n\r\n  AddCentre(centre):  Observable<any> {\r\n    return this.http.post(this.BaseURI + '/Create/', centre);\r\n  }\r\n  deleteCentre(id) {\r\n    return this.http.delete(this.BaseURI + '/DeleteCentre/'+id);\r\n  }\r\n\r\n  getSpecificCentreStudents(id: number):  Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI  + 'getSpecificCentreStudents/'+id);\r\n  }\r\n\r\n  getLearners():  Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI  + 'getLearners/');\r\n  }\r\n\r\n  Deregister(CourseCentre):  Observable<any> {\r\n    return this.http.post(this.BaseURI + 'Deregister/', CourseCentre);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { CentreService } from \"../../services/centre.service\";\r\n\r\n@Component({\r\n  selector: \"app-centre-dialog\",\r\n  templateUrl: \"./centre-dialog.component.html\",\r\n  styleUrls: [\"./centre-dialog.component.scss\"],\r\n})\r\nexport class CentreDialogComponent implements OnInit {\r\n  formCentre: FormGroup;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CentreDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private centreService: CentreService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const edit = this.data.edit;\r\n    console.log(this.data);\r\n    this.formCentre = this.fb.group({\r\n      CentreName: [\"\", Validators.required],\r\n      CentreLocation: [\"\", Validators.required],\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.centre) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formCentre.valid)\r\n\r\n    if(this.formCentre.valid) {\r\n      if(this.data.edit == true) {\r\n        this.centreService.updateCentre(this.formCentre.value, this.data.centre.CentreId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.centreService.AddCentre(this.formCentre.value).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  populateForm(data) {\r\n    this.formCentre.patchValue({\r\n      CentreLocation: data.CentreLocation,\r\n      CentreName: data.CentreName,\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n","<h3 mat-dialog-title align=\"center\"> Centre </h3>\r\n<form class=\"example-form\" [formGroup]=\"formCentre\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Centre Name</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"CentreName\" >\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Centre Location</mat-label>\r\n            <input matInput placeholder=\"\" formControlName=\"CentreLocation\" >\r\n\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>","<div>\r\n  <img src=\"./assets/logo-only.png\" alt=\"Hello\" class=\"img\">\r\n<div class=\"main-content\">\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header card-header-danger\">\r\n                    <h4 class=\"card-title \">Centres</h4>\r\n                    <p class=\"card-category\"> List ofJohannesbug Hotel centres</p>\r\n\r\n                    <div class=\"align-left float-right\">\r\n                        <button class=\"addbutton\" mat-icon-button style=\"font-size: xx-large\" (click)=\"AddCentre()\"\r\n                        title=\"Add Centre\">\r\n                      </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                      </div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                            <thead class=\" text-primary\">\r\n                                <th>\r\n                                    Centre\r\n                                </th>\r\n                                <th>\r\n                                    Edit\r\n                                </th>\r\n                                <th>\r\n                                    Delete\r\n                                </th>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                <tr *ngFor=\"let center  of centres| filter: query\" >\r\n                                  <td>\r\n                                    {{center.CentreName}}\r\n                                  </td>\r\n                                  <td >\r\n                                    <button mat-icon-button (click)=\"EditCentre(center)\"\r\n                                       title=\"Edit Centre\">\r\n                                        <mat-icon>edit</mat-icon>\r\n                                     </button>\r\n                                  </td>\r\n                                    <td >\r\n                                      <button mat-icon-button (click)=\"RemoveCourse(center.CentreId)\"\r\n                                         title=\"Delete Centre\">\r\n                                          <mat-icon >delete</mat-icon>\r\n                                       </button>\r\n                                  </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2'\r\nimport { CentreDialogComponent } from '../diallogs/centre-dialog/centre-dialog.component';\r\nimport { CentreService } from '../services/centre.service';\r\n\r\n@Component({\r\n  selector: 'app-centre',\r\n  templateUrl: './centre.component.html',\r\n  styleUrls: ['./centre.component.scss']\r\n})\r\nexport class CentreComponent implements OnInit {\r\n\r\n  centres: any[] = [];\r\n  public query: any = '';\r\n\r\n  constructor(public dialog: MatDialog, private centreService: CentreService) { }\r\n\r\n  ngOnInit() {\r\n    this.getCentres();\r\n  }\r\n\r\n  getCentres() {\r\n\r\n  }\r\n\r\n  RemoveCourse(CentreId) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#ff0000',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        this.centreService.deleteCentre(CentreId).subscribe((result) => {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n\r\n        },error => {\r\n\r\n        })\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  EditCentre(centre) {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: true, centre: centre }\r\n    const dialogReference = this.dialog.open(\r\n      CentreDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getCentres();\r\n    })\r\n  }\r\n\r\n  AddCentre() {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: false}\r\n    const dialogReference = this.dialog.open(\r\n      CentreDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getCentres();\r\n    })\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/Courses/';\r\n  readonly BaseURI2= 'https://localhost:44318/api/Users';\r\n\r\n\r\n  getAllCourses():  Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI2  + '/getAllCoursesCrud');\r\n  }\r\n\r\n\r\n  AddCourse(Course):  Observable<any> {\r\n    return this.http.post(this.BaseURI + '/CreateCourse/', Course);\r\n  }\r\n\r\n  updateCourse(Course, id: number):  Observable<any> {\r\n    return this.http.post(this.BaseURI + 'EditCourse/'+id, Course);\r\n  }\r\n\r\n  deleteCourse(id) {\r\n    return this.http.delete(this.BaseURI + '/DeleteCourse/'+id);\r\n  }\r\n  getSpecificCourseStudents(id: number):  Observable<any[]> {\r\n    console.log(id)\r\n    return this.http.get<any[]>('https://localhost:44318/api/Users/getSpecificCourseStudents/'+id);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubjectsService {\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n readonly BaseURI = 'https://localhost:44318/api/Subjects/';\r\n\r\n\r\n getSubjects():  Observable<any[]> {\r\n  return this.http.get<any[]>(this.BaseURI  + 'getSubjects');\r\n}\r\n\r\nupdateSubject(Subject, id: number):  Observable<any> {\r\n  return this.http.post(this.BaseURI + 'EditSubject/'+id, Subject);\r\n}\r\n\r\nAddSubject(Subject):  Observable<any> {\r\n  return this.http.post(this.BaseURI + 'CreateSubject/', Subject);\r\n}\r\ndeleteSubject(id) {\r\n  return this.http.delete(this.BaseURI + 'DeleteSubject/'+id);\r\n}\r\n\r\n}\r\n","<h3 mat-dialog-title align=\"center\"> Centre </h3>\r\n<form class=\"example-form\" [formGroup]=\"formCentre\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" >\r\n            <mat-label>Course Description</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"CourseDesc\" >\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\" >\r\n          <mat-label>Student Type</mat-label>\r\n          <mat-select formControlName=\"SubjectId\">\r\n            <mat-option *ngFor=\"let item of subjects\" [value]=\"item.SubjectId\">\r\n              {{item.SubjectDesc}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { CourseService } from \"../../services/course.service\";\r\nimport { SubjectsService } from \"../../services/subjects.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-course-dialog',\r\n  templateUrl: './course-dialog.component.html',\r\n  styleUrls: ['./course-dialog.component.scss']\r\n})\r\nexport class CourseDialogComponent implements OnInit {\r\n\r\n  formCentre: FormGroup;\r\n  subjects: any[] = [];\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CourseDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private courseService: CourseService,\r\n    private subjectsService: SubjectsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getSubjects()\r\n    const edit = this.data.edit;\r\n    this.formCentre = this.fb.group({\r\n      CourseDesc: [\"\", Validators.required],\r\n      SubjectId: [\"\", Validators.required],\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.course) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formCentre.valid)\r\n\r\n    if(this.formCentre.valid) {\r\n      if(this.data.edit == true) {\r\n        this.courseService.updateCourse(this.formCentre.value, this.data.course.CourseId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.courseService.AddCourse(this.formCentre.value).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  populateForm(data) {\r\n    this.formCentre.patchValue({\r\n      CourseDesc: data.CourseDesc,\r\n      SubjectId: data.SubjectId,\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  getSubjects() {\r\n    this.subjectsService.getSubjects().subscribe(res => {\r\n        this.subjects = res;\r\n    })\r\n  }\r\n\r\n}\r\n","<div>\r\n  <img src=\"./assets/logo-only.png\" alt=\"Hello\" class=\"img\">\r\n<div class=\"main-content\">\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header card-header-danger\">\r\n                    <h4 class=\"card-title \">Courses</h4>\r\n                    <p class=\"card-category\"> List of courses offered atJohannesbug Hotel</p>\r\n                    <button class=\"addbutton\" mat-icon-button style=\"font-size: xx-large\" (click)=\"AddCourse()\"\r\n                    title=\"Add Course\">\r\n                     <mat-icon>add</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control mb-4\" placeholder=\"Search\" [(ngModel)]=\"query\" id=\"listSearch\">\r\n                  </div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                            <thead class=\" text-primary\">\r\n                                <th>\r\n                                    Course\r\n                                </th>\r\n                                <th>\r\n                                  Subject\r\n                              </th>\r\n                                <th>\r\n                                    Edit\r\n                                </th>\r\n                                <th>\r\n                                    Delete\r\n                                </th>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                              <tr *ngFor=\"let course  of courses| filter: query\" >\r\n                                <td>\r\n                                  {{course.CourseDesc}}\r\n                                </td>\r\n                                <td>\r\n                                  {{course.Subject}}\r\n                                </td>\r\n                                <td >\r\n                                  <button mat-icon-button (click)=\"EditCourse(course)\"\r\n                                     title=\"Edit Centre\">\r\n                                      <mat-icon>edit</mat-icon>\r\n                                   </button>\r\n                                </td>\r\n                                  <td >\r\n                                    <button mat-icon-button (click)=\"RemoveCourse(course.CourseId)\"\r\n                                       title=\"Delete Centre\">\r\n                                        <mat-icon >delete</mat-icon>\r\n                                     </button>\r\n                                </td>\r\n                              </tr>\r\n                          </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2'\r\nimport { CourseService as CoreServe} from '../services/course.service';\r\nimport { CourseDialogComponent } from '../diallogs/course-dialog/course-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.scss']\r\n})\r\nexport class CourseComponent implements OnInit {\r\n\r\n  courses: any[] = [];\r\n  public query: any = '';\r\n\r\n  constructor(public dialog: MatDialog, private CoreServeERD: CoreServe) { }\r\n\r\n  ngOnInit() {\r\n    this.getCourses();\r\n  }\r\n\r\n  getCourses() {\r\n    this.CoreServeERD.getAllCourses().subscribe(result => {\r\n        this.courses =  result;\r\n        console.log(this.courses)\r\n    })\r\n  }\r\n\r\n  RemoveCourse(courseId) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#ff0000',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        this.CoreServeERD.deleteCourse(courseId).subscribe((result) => {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n\r\n        },error => {\r\n\r\n        })\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  EditCourse(course) {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: true, course: course }\r\n    const dialogReference = this.dialog.open(\r\n      CourseDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getCourses();\r\n    })\r\n  }\r\n\r\n  AddCourse() {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: false}\r\n    const dialogReference = this.dialog.open(\r\n      CourseDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getCourses();\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  showNotification(from, align){\r\n      const type = ['','info','success','warning','danger'];\r\n\r\n      const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n      $.notify({\r\n          icon: \"notifications\",\r\n          message: \"Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer.\"\r\n\r\n      },{\r\n          type: type[color],\r\n          timer: 4000,\r\n          placement: {\r\n              from: from,\r\n              align: align\r\n          },\r\n          template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n            '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n            '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n            '<span data-notify=\"title\">{1}</span> ' +\r\n            '<span data-notify=\"message\">{2}</span>' +\r\n            '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n              '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n            '</div>' +\r\n            '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n      });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n              <h3 class=\"card-title\">Notifications</h3>\r\n              <p class=\"card-category\">Handcrafted by our friend\r\n                  <a target=\"_blank\" href=\"https://github.com/mouse0270\">Robert McIntosh</a>. Please checkout the\r\n                  <a href=\"http://bootstrap-notify.remabledesigns.com/\" target=\"_blank\">full documentation.</a>\r\n              </p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                      <h4 class=\"card-title\">Notifications Style</h4>\r\n                      <div class=\"alert alert-info\">\r\n                          <span>This is a plain notification</span>\r\n                      </div>\r\n                      <div class=\"alert alert-info\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>This is a notification with close button.</span>\r\n                      </div>\r\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\r\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span data-notify=\"message\">This is a notification with close button and icon.</span>\r\n                      </div>\r\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\r\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span data-notify=\"message\">This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.</span>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                      <h4 class=\"card-title\">Notification states</h4>\r\n                      <div class=\"alert alert-info\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>\r\n                              <b> Info - </b> This is a regular notification made with \".alert-info\"</span>\r\n                      </div>\r\n                      <div class=\"alert alert-success\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>\r\n                              <b> Success - </b> This is a regular notification made with \".alert-success\"</span>\r\n                      </div>\r\n                      <div class=\"alert alert-warning\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>\r\n                              <b> Warning - </b> This is a regular notification made with \".alert-warning\"</span>\r\n                      </div>\r\n                      <div class=\"alert alert-danger\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>\r\n                              <b> Danger - </b> This is a regular notification made with \".alert-danger\"</span>\r\n                      </div>\r\n                      <div class=\"alert alert-primary\">\r\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                              <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                          <span>\r\n                              <b> Primary - </b> This is a regular notification made with \".alert-primary\"</span>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n              <div class=\"places-buttons\">\r\n                  <div class=\"row\">\r\n                      <div class=\"col-md-6 ml-auto mr-auto text-center\">\r\n                          <h4 class=\"card-title\">\r\n                              Notifications Places\r\n                              <p class=\"category\">Click to view notifications</p>\r\n                          </h4>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\r\n                          <div class=\"row\">\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','left')\">Top Left</button>\r\n                              </div>\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','center')\">Top Center</button>\r\n                              </div>\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','right')\">Top Right</button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\r\n                          <div class=\"row\">\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','left')\">Bottom Left</button>\r\n                              </div>\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','center')\">Bottom Center</button>\r\n                              </div>\r\n                              <div class=\"col-md-4\">\r\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','right')\">Bottom Right</button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-header card-header-danger\">\r\n                  <h4 class=\"card-title \">Learners</h4>\r\n                  <p class=\"card-category\"> List of learners offered atJohannesbug Hotel</p>\r\n\r\n\r\n\r\n\r\n              </div>\r\n                  <div class=\"card-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                      <input type=\"text\" class=\"form-control mb-4\" placeholder=\"Search\" [(ngModel)]=\"query\" id=\"listSearch\">\r\n                    </div>\r\n                      <div class=\"table-responsive\">\r\n                          <table class=\"table\">\r\n                              <thead class=\" text-primary\">\r\n                                  <th>\r\n                                    FirstName\r\n                                  </th>\r\n                                  <th>\r\n                                    Surname\r\n                                  </th>\r\n                                  <th>\r\n                                    UserType\r\n                                  </th>\r\n\r\n                              </thead>\r\n                              <tbody>\r\n\r\n                                  <tr *ngFor=\"let user  of learners| filter: query\" >\r\n                                    <td>\r\n                                      {{user.FirstName}}\r\n                                    </td>\r\n                                    <td >\r\n                                      {{user.Surname}}\r\n\r\n                                    </td>\r\n                                      <td >\r\n                                        {{getUserTypeDesc(user.UserTypeId)}}\r\n                                    </td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CentreService } from '../services/centre.service';\r\n\r\n@Component({\r\n  selector: 'app-registered-learners',\r\n  templateUrl: './registered-learners.component.html',\r\n  styleUrls: ['./registered-learners.component.scss']\r\n})\r\nexport class RegisteredLearnersComponent implements OnInit {\r\n\r\n  learners: any[] = [];\r\n  public query: any = '';\r\n  constructor(private centreService: CentreService) { }\r\n\r\n  ngOnInit() {\r\n    this.getLearners();\r\n  }\r\n\r\n  getLearners() {\r\n    this.centreService.getLearners().subscribe(result => {\r\n        this.learners =  result;\r\n        console.log(this.learners)\r\n    })\r\n  }\r\n\r\n\r\n  getUserTypeDesc(value) {\r\n    return value == 1 ?  \"Junior\" : \"Senior\";\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SubjectsService } from '../../services/subjects.service';\r\n\r\n@Component({\r\n  selector: 'app-subject-dialog',\r\n  templateUrl: './subject-dialog.component.html',\r\n  styleUrls: ['./subject-dialog.component.scss']\r\n})\r\nexport class SubjectDialogComponent implements OnInit {\r\n\r\n  formSubject: FormGroup;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<SubjectDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private subjectService: SubjectsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const edit = this.data.edit;\r\n    console.log(this.data);\r\n    this.formSubject = this.fb.group({\r\n      SubjectDesc: [\"\", Validators.required],\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.subject) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formSubject.valid)\r\n\r\n    if(this.formSubject.valid) {\r\n      if(this.data.edit == true) {\r\n        this.subjectService.updateSubject(this.formSubject.value, this.data.subject.SubjectId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.subjectService.AddSubject(this.formSubject.value).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  populateForm(data) {\r\n    this.formSubject.patchValue({\r\n      SubjectDesc: data.SubjectDesc,\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}","<h3 mat-dialog-title align=\"center\"> Subject</h3>\r\n<form class=\"example-form\" [formGroup]=\"formSubject\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Subject Name</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"SubjectDesc\" >\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>","\r\n<div>\r\n  <img src=\"./assets/logo-only.png\" alt=\"Hello\" class=\"img\">\r\n<div class=\"main-content\">\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header card-header-danger\">\r\n                    <h4 class=\"card-title \">Subject</h4>\r\n                    <p class=\"card-category\"> List of subjects offered atJohannesbug Hotel</p>\r\n                    <div class=\"align-left float-right\">\r\n                    <button class=\"addbutton\" mat-icon-button style=\"font-size: xx-large\" (click)=\"AddSubject()\"\r\n                    title=\"Add Subject\">\r\n                     <mat-icon>add</mat-icon>\r\n                  </button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" class=\"form-control mb-4\" placeholder=\"Search\" [(ngModel)]=\"query\" id=\"listSearch\">\r\n                      </div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                            <thead class=\" text-primary\">\r\n                                <th>\r\n                                    Subject\r\n                                </th>\r\n                                <th>\r\n                                    Edit\r\n                                </th>\r\n                                <th>\r\n                                    Delete\r\n                                </th>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n\r\n\r\n                                <tr *ngFor=\"let subject  of subjects| filter: query\" >\r\n                                    <td>\r\n                                      {{subject.SubjectDesc}}\r\n                                    </td>\r\n                                    <td >\r\n                                      <button mat-icon-button (click)=\"EditSubject(subject)\"\r\n                                         title=\"Edit subject\">\r\n                                          <mat-icon>edit</mat-icon>\r\n                                       </button>\r\n                                    </td>\r\n                                      <td >\r\n                                        <button mat-icon-button (click)=\"RemoveSubject(subject.SubjectId)\"\r\n                                           title=\"Delete subject\">\r\n                                            <mat-icon >delete</mat-icon>\r\n                                         </button>\r\n                                    </td>\r\n                                  </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { SubjectDialogComponent } from '../diallogs/subject-dialog/subject-dialog.component';\r\nimport { SubjectsService } from '../services/subjects.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-subject',\r\n  templateUrl: './subject.component.html',\r\n  styleUrls: ['./subject.component.scss']\r\n})\r\nexport class SubjectComponent implements OnInit {\r\n  subjects: any[] = [];\r\n  public query: any = '';\r\n\r\n\r\n  constructor(private subjectService: SubjectsService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.getSubjects();\r\n  }\r\n\r\n  getSubjects() {\r\n    this.subjectService.getSubjects().subscribe(res => {\r\n        console.log(res);\r\n        this.subjects = res;\r\n    })\r\n  }\r\n\r\n  AddSubject() {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: false}\r\n    const dialogReference = this.dialog.open(\r\n      SubjectDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getSubjects();\r\n    })\r\n  }\r\n\r\n  EditSubject(subject) {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: true, subject: subject }\r\n    const dialogReference = this.dialog.open(\r\n      SubjectDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getSubjects();\r\n    })\r\n  }\r\n\r\n\r\n\r\n  RemoveSubject(subjectId) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#ff0000',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        this.subjectService.deleteSubject(subjectId).subscribe((result) => {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n\r\n        },error => {\r\n\r\n        })\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","import { Routes } from \"@angular/router\";\r\n\r\nimport { DashboardComponent } from \"../../dashboard/dashboard.component\";\r\nimport { BookingComponent } from \"../guest-layout/booking/booking.component\";\r\nimport { UserProfileComponent } from \"../guest-layout/user-profile/user-profile.component\";\r\nimport { RoomComponent } from \"../owner-layout/pages/room/room.component\";\r\nimport { AdminDashboardComponent } from \"./AdminDashboard/AdminDashboard.component\";\r\nimport { CentreComponent } from \"./centre/centre.component\";\r\nimport { CourseComponent } from \"./course/course.component\";\r\nimport { NotificationsComponent } from \"./notifications/notifications.component\";\r\nimport { RegisteredLearnersComponent } from \"./registered-learners/registered-learners.component\";\r\nimport { SubjectComponent } from \"./subject/subject.component\";\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"dashboard\",\r\n        component: AdminDashboardComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"notifications\",\r\n        component: NotificationsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { path: \"courses\", component: CourseComponent },\r\n  { path: \"subjects\", component: SubjectComponent },\r\n  { path: \"centres\", component: CentreComponent },\r\n  { path: \"registered-learners\", component: RegisteredLearnersComponent },\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"manage-rooms\",\r\n        component: RoomComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"book-room\",\r\n        component: BookingComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    children: [ {\r\n      path: 'userprofile',\r\n      component: UserProfileComponent\r\n    }]\r\n    },\r\n\r\n];\r\n","import { CourseComponent } from './course/course.component';\r\nimport { SubjectComponent } from './subject/subject.component';\r\nimport { CentreComponent } from './centre/centre.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AdminLayoutRoutes } from './admin-layout.routing';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { AdminDashboardComponent } from './AdminDashboard/AdminDashboard.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CentreDialogComponent } from './diallogs/centre-dialog/centre-dialog.component';\r\nimport { SubjectDialogComponent } from './diallogs/subject-dialog/subject-dialog.component';\r\nimport { CourseDialogComponent } from './diallogs/course-dialog/course-dialog.component';\r\nimport { RegisteredLearnersComponent } from './registered-learners/registered-learners.component';\r\nimport { SearchFilterPipe } from './pipe';\r\nimport { DemoMaterialModule } from 'app/shared/material.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminLayoutRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatRippleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    SharedModule,\r\n    DemoMaterialModule\r\n  ],\r\n  declarations: [\r\n    AdminDashboardComponent,\r\n    NotificationsComponent,\r\n    SubjectComponent,\r\n    CourseComponent,\r\n    CentreDialogComponent,\r\n    SubjectDialogComponent,\r\n    CourseDialogComponent,\r\n    RegisteredLearnersComponent,\r\n\r\n  ]\r\n})\r\n\r\nexport class AdminLayoutModule {}\r\n"],"x_google_ignoreList":[]}