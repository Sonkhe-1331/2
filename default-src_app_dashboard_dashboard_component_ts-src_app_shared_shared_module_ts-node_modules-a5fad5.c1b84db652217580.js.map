{"version":3,"file":"default-src_app_dashboard_dashboard_component_ts-src_app_shared_shared_module_ts-node_modules-a5fad5.c1b84db652217580.js","mappings":"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","names":["DashboardComponent","chart","seq","on","data","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Chartist","opacity","seq2","optionsDailySalesChart","lineSmooth","tension","low","high","chartPadding","top","right","bottom","left","dailySalesChart","labels","series","this","startAnimationForLineChart","optionsCompletedTasksChart","completedTasksChart","websiteViewsChart","axisX","showGrid","seriesBarDistance","labelInterpolationFnc","value","startAnimationForBarChart","selectors","i0","SharedModule","CommonModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatRippleModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatTooltipModule","MatCardModule","MatIconModule","MatDatepickerModule","mediaQueryStyleNode","mediaQueriesForWebkitCompatibility","Set","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","ɵfac","t","ɵngcc0","ɵngcc1","ɵprov","factory","i1","token","providedIn","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","next","complete","splitQueries","coerceArray","some","_this","_registerQuery","mediaQuery","mql","observables","map","_this2","observable","stateObservable","combineLatest","concat","pipe","take","skip","debounceTime","response","breakpoints","breakpointStates","forEach","_ref","get","output","Observable","observer","handler","_this3","run","startWith","_ref2","takeUntil","set","queries","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","_c0","MatCalendarBody_tr_0_Template","rf","ctx","ctx_r0","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","$event","item_r6","$implicit","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","enabled","_isActiveCell","_isRangeStart","compareValue","_isRangeEnd","_isInRange","_isComparisonBridgeStart","_isComparisonBridgeEnd","_isComparisonStart","_isComparisonEnd","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","cssClasses","ariaLabel","_isSelected","_isComparisonIdentical","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","long","narrow","_c1","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","activeDate","_dateSelected","selected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","MatCalendar_mat_year_view_3_Template","_r8","_monthSelectedInYearView","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r12","_yearSelectedInMultiYearView","ctx_r3","MatDatepickerContent_ng_template_2_Template","_c2","MatDatepickerToggle__svg_svg_2_Template","_c3","_c4","_c5","_c6","MatDatepickerActions_ng_template_0_Template","MatDatepickerIntl","changes","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","start","end","MatCalendarCell","arguments","rawValue","MatCalendarBody","_elementRef","_ngZone","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","EventEmitter","previewChange","_enterHandler","event","_skipNextFocus","target","cell","_getCellFromElement","emit","_leaveHandler","isTableCell","runOutsideAngular","nativeElement","addEventListener","startValue","endValue","columnChanges","rows","length","removeEventListener","rowIndex","colIndex","cellNumber","movePreview","onStable","subscribe","querySelector","focus","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","parentNode","row","getAttribute","col","parseInt","ɵcmp","hostAttrs","inputs","outputs","exportAs","features","attrs","decls","vars","consts","template","directives","styles","encapsulation","changeDetection","node","nodeName","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","source","oldValue","date","isDateInstance","isValid","undefined","ɵngcc2","MatSingleDateSelectionModel","adapter","_isValidDateInstance","updateSelection","MatRangeDateSelectionModel","_this$selection","C_Users_sonkh_2_node_modules_babel_runtime_helpers_esm_get_js__WEBPACK_IMPORTED_MODULE_9__","_this$selection2","compareDate","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","provide","deps","Optional","SkipSelf","DateAdapter","useFactory","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_DATE_RANGE_SELECTION_STRATEGY","InjectionToken","DefaultMatCalendarRangeStrategy","_dateAdapter","currentRange","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MatMonthView","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","Subscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_setRanges","_minDate","_maxDate","localeChanges","comparisonChange","firstChange","unsubscribe","rangeStartDate","rangeEndDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_getDateInCurrentMonth","_previewStart","_previewEnd","markForCheck","isRtl","_isRtl","keyCode","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","altKey","addCalendarYears","addCalendarMonths","PAGE_DOWN","ENTER","SPACE","preventDefault","ESCAPE","hasModifierKey","stopPropagation","_focusActiveCell","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","format","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","previewRange","createPreview","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","i","_weekdays","slice","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","MAT_DATE_FORMATS","ɵngcc3","viewQuery","_t","first","_previewChanged","_handleCalendarBodyKeydown","yearsPerPage","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_this4","_todayYear","minYearOfPage","getActiveOffset","_years","_this5","_createCellForYear","Math","min","_yearSelected","yearName","getYearName","_shouldEnableYear","_selectedYear","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","a","b","MatYearView","monthSelected","_setSelectedMonth","_this6","normalizedDate","_monthSelected","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_this7","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","_selectedMonth","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","_isSameView","forwardRef","MatCalendar","ngContentSelectors","currentPeriodClicked","previousClicked","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","ɵngcc4","ɵngcc5","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","_this8","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","ComponentPortal","headerComponent","startAt","focusActiveCell","change","view","_getCurrentViewComponent","sameDate","normalizedYear","normalizedMonth","monthView","yearView","multiYearView","ɵngcc6","matDatepickerAnimations","transformPanel","trigger","transition","keyframes","style","transform","fadeInCalendar","state","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","Overlay","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","_MatDatepickerContentBase","mixinColor","MatDatepickerContent","elementRef","_globalModel","_rangeSelectionStrategy","intl","_this9","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","_model","_animationState","datepicker","touchUi","_this10","_calendar","newSelection","selectionFinished","isComplete","close","hostVars","hostBindings","color","_selectYear","_selectMonth","_viewChanged","_handleUserSelection","_closeButtonFocused","id","panelClass","_getMinDate","_getMaxDate","_getDateFilter","calendarHeaderComponent","_getSelected","animation","MatDatepickerBase","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","datepickerInput","getStartValue","_color","getThemePalette","coerceBooleanProperty","_disabled","disabled","newValue","_panelClass","coerceStringArray","open","max","positionChange","_overlayRef","positionStrategy","getConfig","FlexibleConnectedPositionStrategy","_setConnectedPositions","opened","updatePosition","_destroyOverlay","input","_this11","portal","_getFocusedElementPierceShadowDom","_openOverlay","_componentRef","instance","_startExitAnimation","_this12","completeClose","setTimeout","_a","_b","_applyPendingSelection","isDialog","labelId","getOverlayLabelId","overlayRef","create","OverlayConfig","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","direction","block","overlayElement","_getCloseStream","_this13","attach","_forwardContentValues","dispose","position","global","centerHorizontally","centerVertically","strategy","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","merge","backdropClick","detachments","keydownEvents","filter","_this14","ElementRef","ɵngcc7","DOCUMENT","ɵdir","restoreFocus","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_onTouched","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_this15","_lastValueValid","matDatepickerParse","text","_filterValidator","control","controlValue","_matchesFilter","matDatepickerFilter","_minValidator","matDatepickerMin","actual","_maxValidator","matDatepickerMax","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","model","_assignValue","_this16","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","fn","c","_validator","isDisabled","readOnly","_openPopup","lastValueWasValid","parse","_assignValueToModel","Object","keys","_i","_changes$key","_keys","previousValue","currentValue","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","datepickerStateChanged","of","inputStateChanged","datepickerToggled","_this19","contentQueries","dirIndex","_customIcon","_button","_open","disableRipple","MAT_DATE_RANGE_INPUT_PARENT","_MatDateRangeInputBase","mixinErrorState","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","dateFormats","_this20","ngControl","NgControl","InjectFlags","updateErrorState","placeholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","ɵngcc9","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_this21","_startValidator","matStartDateInvalid","Validators","modelValue","range","_onInput","_onChange","_onKeydown","_onBlur","rangePicker","toIso8601","errorStateMatcher","NG_VALUE_ACCESSOR","useExisting","multi","NG_VALIDATORS","MatEndDate","_this22","_endValidator","matEndDateInvalid","BACKSPACE","nextUniqueId","MatDateRangeInput","_formField","C_Users_sonkh_2_node_modules_babel_runtime_helpers_esm_classCallCheck_js__WEBPACK_IMPORTED_MODULE_1__","_closedSubscription","focused","controlType","_ariaDescribedBy","separator","classList","contains","empty","_getPlaceholder","_rangePicker","registerInput","_this23","_registerModel","_required","_dateFilter","wasMatchingStart","wasMatchingEnd","_min","validValue","_revalidate","_max","errorState","startEmpty","isEmpty","endEmpty","ids","join","_this24","getLabelId","getMirrorValue","_shouldLabelFloat","formField","_hasFloatingLabel","_labelId","origin","MAT_FORM_FIELD","_getAriaLabelledby","_shouldHidePlaceholders","required","MatFormFieldControl","_updateFocus","_getInputMirrorValue","_shouldHideSeparator","MatDateRangePicker","ɵMatDateRangePicker_BaseFactory","MatDatepickerApply","_datepicker","_applySelection","MatDatepickerCancel","MatDatepickerActions","_portal","TemplatePortal","_template","registerActions","removeActions","isAttached","detach","TemplateRef","ɵmod","ɵinj","providers","imports","OverlayModule","A11yModule","PortalModule","MatCommonModule","CdkScrollableModule","matTooltipAnimations","tooltipState","offset","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_scrollDispatcher","_ariaDescriber","_focusMonitor","_defaultOptions","_position","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","touchGestures","_message","_passiveListeners","_destroyed","_handleKeydown","_isTooltipVisible","hide","_updatePosition","_tooltipInstance","show","_setupPointerEnterEventsIfNeeded","removeDescription","String","_updateTooltipMessage","Promise","resolve","then","describe","message","_tooltipClass","_setTooltipClass","monitor","clearTimeout","_touchstartTimeout","stopMonitoring","delay","_showTimeoutId","_hideTimeoutId","_createOverlay","_detach","_tooltipComponent","afterHidden","isVisible","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","hasAttached","_getOrigin","_getOverlayPosition","_addOffset","assign","main","fallback","originPosition","isLtr","_invertPosition","_this$_invertPosition","x","y","overlayPosition","_this$_invertPosition2","_markForCheck","onMicrotaskEmpty","tooltipClass","newPosition","_currentPosition","classPrefix","removePanelClass","addPanelClass","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","_addListeners","exitListeners","_wheelListener","touchendListener","_this$_passiveListene","apply","listeners","_ref4","IOS","ANDROID","elementUnderPointer","elementFromPoint","clientX","clientY","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","MatTooltip","scrollDispatcher","viewContainerRef","ngZone","platform","ariaDescriber","focusMonitor","dir","defaultOptions","TooltipComponent","_TooltipComponentBase","_visibility","_closeOnInteraction","_onHide","_onShow","toState","_breakpointObserver","_isHandset","observe","_handleBodyInteraction","tmp_0_0","_animationStart","pipes","root","__WEBPACK_AMD_DEFINE_RESULT__","version","globalRoot","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","fromCharCode","extend","sourceProp","prop","Array","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","unit","quantity","match","exec","Node","times","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","result","args","roundWithPrecision","digits","precision","pow","round","escapingMap","serialize","JSON","key","createSvg","container","width","className","prototype","call","querySelectorAll","getAttributeNS","removeChild","Svg","attr","addClass","_node","normalizeData","reverse","labelCount","raw","normalized","getDataArray","every","reverseData","safeHasProperty","object","property","hasOwnProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","normalizePadding","padding","getMetaData","meta","orderOfMagnitude","log","abs","LN10","projectLength","axisLength","bounds","getAvailableHeight","options","getHighLow","dimension","highLow","toUpperCase","MAX_VALUE","findHigh","findLow","recursiveHighLow","referenceValue","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","divisor","x1","x2","getBounds","scaleMinSpace","onlyInteger","newMin","newMax","optimizationCounter","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","Error","EPSILON","safeIncrement","increment","values","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","y1","y2","createGrid","axis","group","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","content","innerText","foreignObject","getSeriesOption","name","seriesOptions","optionsProvider","responsiveOptions","currentOptions","baseOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","removeMediaQueryListeners","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","segments","hole","Interpolation","none","Path","currX","currY","currData","move","line","simple","prevX","prevY","prevData","curve","cardinal","paths","segment","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","handlers","addEventHandler","removeEventHandler","splice","indexOf","starHandler","listToArray","list","Class","properties","superProtoOverride","superProto","proto","cloneDefinitions","constr","constructor","super","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","initialize","resizeListener","update","plugins","plugin","createChart","initializeTimeoutId","Base","supportsForeignObject","isSupported","supportsAnimations","__chartist__","override","off","attributes","insertFirst","Element","createElementNS","firstChild","insertBefore","ns","namespacedAttribute","setAttributeNS","SVGElement","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","remove","newElement","replaceChild","append","names","self","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animations","guided","attribute","createAnimate","animationDefinition","timeout","attributeProperties","Easing","calcMode","keySplines","keyTimes","fill","attributeName","beginElement","err","params","feature","implementation","hasFeature","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","SvgList","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","accuracy","command","pathElements","relative","pathElement","toLowerCase","forEachParam","pathElementIndex","paramName","paramIndex","SvgPath","count","arc","rx","ry","xAr","lAf","sf","transformFnc","transformed","chunks","pop","elements","chunk","shift","description","spliceArgs","accuracyMultiplier","splitByCommand","joinedPath","j","axisUnits","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","projectedValue","labelLength","classNames","grid","showLabel","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","showGridBackground","fullWidth","point","area","vertical","horizontal","Line","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","stackBars","stackMode","horizontalBars","distributeSeries","bar","Bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","previousStack","labelAxisValueIndex","positions","metaData","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","toTheRight","Pie","labelsGroup","labelRadius","totalDataSum","seriesGroups","hasSingleValInSeries","val","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","interpolatedValue","dx","dy","module","exports","privateProps","awaitingPromise","WeakMap","promise","innerParams","domCache","prefix","items","swalClasses","iconTypes","consolePrefix","capitalizeFirstLetter","charAt","warn","previousWarnOnceMessages","warnAboutDeprecation","deprecatedParam","useInstead","includes","warnOnce","callIfFunction","arg","hasToPromiseFn","toPromise","asPromise","isPromise","getContainer","body","elementBySelector","selectorString","elementByClass","getPopup","popup","getIcon","icon","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getDenyButton","deny","getLoader","loader","getCancelButton","cancel","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","getFocusableElements","focusableElementsWithTabindex","tabindexA","tabindexB","otherFocusableElements","el","uniqueArray","isModal","hasClass","shown","isToast","toast","states","previousBodyPadding","setInnerHtml","html","textContent","parsed","DOMParser","parseFromString","childNodes","child","applyCustomClass","showClass","removeCustomClasses","customClass","getInput","inputClass","checkbox","radio","focusInput","toggleClass","condition","Boolean","isArray","getDirectChildByClass","children","HTMLElement","applyNumericalStyle","removeProperty","setStyle","toggle","offsetWidth","offsetHeight","getClientRects","isScrollable","scrollHeight","clientHeight","hasCssAnimation","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","globalState","restoreActiveElement","returnFocus","scrollX","scrollY","restoreFocusTimeout","previousActiveElement","scrollTo","isNodeEnv","sweetHTML","file","select","textarea","resetValidationMessage","currentInstance","init","oldContainerExisted","oldContainer","documentElement","resetOldContainer","getTarget","setupAccessibility","rtl","setupRTL","rangeOutput","oninput","onchange","addInputChangeListeners","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","toString","cloneNode","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","renderActions","showConfirmButton","showDenyButton","showCancelButton","renderButtons","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","reverseButtons","loaderHtml","button","buttonType","renderContainer","handleBackdropParam","backdrop","background","handlePositionParam","handleGrowParam","grow","growClass","inputClasses","showInput","renderInputType","inputContainer","getInputContainer","setAttributes","inputAttributes","attrName","removeAttribute","removeAttributes","setCustomClass","setInputPlaceholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","labelClass","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","email","password","number","tel","url","checkboxContainer","checked","initialPopupWidth","MutationObserver","textareaWidth","marginLeft","marginRight","attributeFilter","renderContent","htmlContainer","rerender","renderInput","applyStyles","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","setContent","newContent","oldContent","iconHtml","iconContent","question","warning","info","iconColor","borderColor","_arr","addClasses","modal","createStepElement","stepEl","createLineElement","lineEl","progressStepsDistance","render","renderPopup","progressStepsContainer","progressSteps","currentProgressStep","renderProgressSteps","renderIcon","imageUrl","imageAlt","imageWidth","imageHeight","renderImage","titleText","renderTitle","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderCloseButton","renderFooter","didRender","hideLoading","showRelatedButton","loading","buttonToReplace","getElementsByClassName","clickConfirm","click","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","keydownHandler","capture","keydownListenerCapture","setFocus","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","dismissWith","isComposing","stopKeydownPropagation","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","outerHTML","btnIndex","shiftKey","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","unsetAriaHidden","hasAttribute","addBottomPaddingForTallPopups","ua","navigator","userAgent","iOS","webkit","innerHeight","paddingBottom","lockBodyScroll","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","isStylus","isZoom","tagName","touches","touchType","fixScrollbar","paddingRight","scrollDiv","scrollbarWidth","clientWidth","measureScrollbar","removePopupAndResetState","didClose","triggerDidCloseAndDispose","test","iosfix","scrollTop","undoIOSfix","removeBodyClasses","resolveValue","prepareResolveValue","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","delete","_destroy","isConfirmed","isDenied","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","setButtonsDisabled","buttons","setInputDisabled","radios","defaultParams","heightAuto","allowOutsideClick","preConfirm","preDeny","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","showLoaderOnConfirm","showLoaderOnDeny","inputOptions","inputAutoTrim","inputValidator","returnInputValueOnDeny","validationMessage","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","showWarningsForParams","filterValidParams","validUpdatableParams","disposeSwal","disposeWeakMaps","unsetWeakMaps","obj","instanceMethods","disableLoading","getInput$1","rejectPromise","closePopup","closeModal","closeToast","enableButtons","disableButtons","enableInput","disableInput","showValidationMessage","inputerror","resetValidationMessage$1","getProgressSteps$1","updatedParams","defineProperties","writable","enumerable","showLoading","Swal","replaceButton","getCheckboxValue","getRadioValue","getFileValue","files","handleInputOptions","processInputOptions","populateInputOptions","formatInputOptions","handleInputValue","catch","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","valueFormatted","handleConfirmOrDenyWithInput","getInputValue","handleInputValidator","checkValidity","preDenyValue","rejectWith","error$$1","succeedWith","preConfirmValue","handleToastClick","onclick","isAnyButtonShown","ignoreOutsideClick","handleModalMousedown","onmousedown","onmouseup","handleContainerMousedown","handleModalClick","isElement","isJqueryElement","stopTimer","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarPercent","stop","resumeTimer","remaining","bodyClickListenerAdded","clickHandlers","bodyClickListener","fire","staticMethods","argsToParams","clickDeny","clickCancel","getInputLabel","isLoading","_len","_key","mixin","mixinParams","MixinSwal","priorityMixinParams","enableLoading","getTimerLeft","toggleTimer","running","increaseTimer","increase","isTimerRunning","isRunning","bindClickHandler","Timer","callback","_classCallCheck","started","swalStringParams","getSwalParams","swalParams","templateContent","showWarningsForAttributes","getSwalButtons","swalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","paramNames","tag","showWarningsForElements","allowedElements","allowedAttributes","openPopup","initialBodyOverflow","overflowY","addClasses$1","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","MSStream","maxTouchPoints","iOSfix","setProperty","defaultInputValidators","string","setParameters","setDefaultInputValidators","validateCustomTargetElement","SweetAlert","outerParams","configurable","_main","userParams","prepareParams","populateDomCache","swalPromise","onFulfilled","onFinally","finally","reject","dismiss","handleConfirmButtonClick","handleDenyButtonClick","handleCancelButtonClick","handlePopupClick","addKeydownHandler","handleInputOptionsAndValue","setupTimer","initFocus","templateParams","getTemplateParams","globalState$$1","blurActiveElement","focusButton","language","location","host","random","noWar","video","_currentInstance","default","Sweetalert2","getElementsByTagName","styleSheet","cssText","__webpack_require__","isNativeReflectConstruct","Function","_construct","descriptor","staticProps","Constructor","possibleConstructorReturn","Super","desc","_get","_getPrototypeOf","subClass","superClass","Reflect","assertThisInitialized","_setPrototypeOf"],"sourceRoot":"webpack:///","sources":["./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/shared/shared.module.ts","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","./node_modules/chartist/dist/chartist.js","./node_modules/sweetalert2/dist/sweetalert2.all.js","./node_modules/@babel/runtime/helpers/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/construct.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createSuper.js","./node_modules/@babel/runtime/helpers/get.js","./node_modules/@babel/runtime/helpers/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/inherits.js","./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/superPropBase.js","./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport * as Chartist from 'chartist';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  startAnimationForLineChart(chart){\r\n      let seq: any, delays: any, durations: any;\r\n      seq = 0;\r\n      delays = 80;\r\n      durations = 500;\r\n\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'line' || data.type === 'area') {\r\n          data.element.animate({\r\n            d: {\r\n              begin: 600,\r\n              dur: 700,\r\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n              to: data.path.clone().stringify(),\r\n              easing: Chartist.Svg.Easing.easeOutQuint\r\n            }\r\n          });\r\n        } else if(data.type === 'point') {\r\n              seq++;\r\n              data.element.animate({\r\n                opacity: {\r\n                  begin: seq * delays,\r\n                  dur: durations,\r\n                  from: 0,\r\n                  to: 1,\r\n                  easing: 'ease'\r\n                }\r\n              });\r\n          }\r\n      });\r\n\r\n      seq = 0;\r\n  };\r\n  startAnimationForBarChart(chart){\r\n      let seq2: any, delays2: any, durations2: any;\r\n\r\n      seq2 = 0;\r\n      delays2 = 80;\r\n      durations2 = 500;\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'bar'){\r\n            seq2++;\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq2 * delays2,\r\n                dur: durations2,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n      seq2 = 0;\r\n  };\r\n  ngOnInit() {\r\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\r\n\r\n      const dataDailySalesChart: any = {\r\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\r\n          series: [\r\n              [12, 17, 7, 17, 23, 18, 38]\r\n          ]\r\n      };\r\n\r\n     const optionsDailySalesChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\r\n      }\r\n\r\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\r\n\r\n      this.startAnimationForLineChart(dailySalesChart);\r\n\r\n\r\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\r\n\r\n      const dataCompletedTasksChart: any = {\r\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\r\n          series: [\r\n              [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n      };\r\n\r\n     const optionsCompletedTasksChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\r\n      }\r\n\r\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\r\n\r\n      // start animation for the Completed Tasks Chart - Line Chart\r\n      this.startAnimationForLineChart(completedTasksChart);\r\n\r\n\r\n\r\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\r\n\r\n      var datawebsiteViewsChart = {\r\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\r\n        series: [\r\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n        ]\r\n      };\r\n      var optionswebsiteViewsChart = {\r\n          axisX: {\r\n              showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\r\n      };\r\n      var responsiveOptions: any[] = [\r\n        ['screen and (max-width: 640px)', {\r\n          seriesBarDistance: 5,\r\n          axisX: {\r\n            labelInterpolationFnc: function (value) {\r\n              return value[0];\r\n            }\r\n          }\r\n        }]\r\n      ];\r\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\r\n\r\n      //start animation for the Emails Subscription Chart\r\n      this.startAnimationForBarChart(websiteViewsChart);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <img src=\"https://m.economictimes.com/thumb/msid-89465809,width-1254,height-836,resizemode-4,imgsize-28786/indian-hotels.jpg\" alt=\"Hello\" class=\"img\">\r\n    <br>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <mat-card class=\"card-border-left\">\r\n                    <mat-card-content>\r\n                        <h1 class=\"title\" >\r\n                           Welcome to Johannesbug Hotel\r\n                        </h1>\r\n                        <br>\r\n                        <br>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from 'app/dashboard/dashboard.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TableComponent } from './ui/table/table.component';\r\nimport { SearchFilterPipe } from 'app/layouts/admin-layout/pipe';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatRippleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatDatepickerModule\r\n  ],\r\n  declarations: [DashboardComponent,\r\n  TableComponent,\r\n  SearchFilterPipe],\r\n  exports: [\r\n    DashboardComponent,\r\n    TableComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatRippleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    SearchFilterPipe,\r\n    MatDatepickerModule\r\n\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(i1.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, Directive, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/material/form-field';\nimport * as ɵngcc9 from '@angular/forms';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2)(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = restoredCtx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5)(1, \"abbr\", 6);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n} }\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) { }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], isRange: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], previewStart: [{\n            type: Input\n        }], previewEnd: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], previewChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], startValue: [{\n            type: Input\n        }], endValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }] }); })();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDateSelectionModel, factory: MatDateSelectionModel.ɵfac });\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: undefined }, { type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatSingleDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatRangeDateSelectionModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nDefaultMatCalendarRangeStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatMonthView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 13, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", \"colspan\", \"7\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"], [1, \"mat-calendar-abbr\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 3, 3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }, {\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 11, vars: 10, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [\"viewBox\", \"0 0 10 5\", \"focusable\", \"false\", 1, \"mat-calendar-arrow\"], [\"points\", \"0,0 5,5 10,0\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵelementStart(3, \"span\");\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(5, \"svg\", 3);\n        ɵngcc0.ɵɵelement(6, \"polygon\", 4);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(7, \"div\", 5);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementStart(9, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_9_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 7);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_10_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explict return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' })\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 })\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value && (isRange ||\n            !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl)); };\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 20, consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-calendar\", 1);\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) { return ctx.datepicker._selectMonth($event); })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) { return ctx.datepicker._viewChanged($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) { return ctx._handleUserSelection($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() { return ctx._closeButtonFocused = true; })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() { return ctx._closeButtonFocused = false; })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx._closeButtonText);\n    } }, directives: [ɵngcc5.CdkTrapFocus, MatCalendar, ɵngcc1.NgClass, ɵngcc6.CdkPortalOutlet, ɵngcc4.MatButton], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] },\n    { type: MatDatepickerIntl }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: ɵngcc2.DateAdapter }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }] }, { type: MatDatepickerIntl }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(\n    /**\n     * @deprecated `_dialog` parameter is no longer being used and it will be removed.\n     * @breaking-change 13.0.0\n     */\n    _dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() { return this._restoreFocus; }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() { return this._panelClass; }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._componentRef) {\n            const instance = this._componentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyOverlay());\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus && this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        (_b = (_a = this._componentRef) === null || _a === void 0 ? void 0 : _a.instance) === null || _b === void 0 ? void 0 : _b._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const labelId = this.datepickerInput.getOverlayLabelId();\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        }));\n        const overlayElement = overlayRef.overlayElement;\n        overlayElement.setAttribute('role', 'dialog');\n        if (labelId) {\n            overlayElement.setAttribute('aria-labelledby', labelId);\n        }\n        if (isDialog) {\n            overlayElement.setAttribute('aria-modal', 'true');\n        }\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return (event.keyCode === ESCAPE && !hasModifierKey(event)) || (this.datepickerInput &&\n                hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW);\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel)); };\nMatDatepickerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", restoreFocus: \"restoreFocus\", panelClass: \"panelClass\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    restoreFocus: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    panelClass: [{ type: Input }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc7.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDateSelectionModel }]; }, { startView: [{\n            type: Input\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], restoreFocus: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDatepicker_BaseFactory; return function MatDatepicker_Factory(t) { return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker)))(t || MatDatepicker); }; }();\nMatDatepicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDatepicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDatepickerInputBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    } }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { matDatepicker: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input,\n            args: ['matDatepickerFilter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) { return ctx._open($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                    // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                    // it so that the input doesn't get focused automatically by the form field (See #21836).\n                    '(click)': '_open($event)'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n            this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDateRangeInputPartBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDateRangeInputPartBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start) ? !!change.selection.start :\n                !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatStartDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end) ? !!change.selection.end :\n                !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatEndDate.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc9.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || (this._formField.getLabelId() &&\n            !this._formField._shouldLabelFloat())) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDateRangeInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    } }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx._updateFocus($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    } }, directives: [ɵngcc5.CdkMonitorFocus], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc9.ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { separator: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], rangePicker: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _startInput: [{\n            type: ContentChild,\n            args: [MatStartDate]\n        }], _endInput: [{\n            type: ContentChild,\n            args: [MatEndDate]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = /*@__PURE__*/ function () { let ɵMatDateRangePicker_BaseFactory; return function MatDateRangePicker_Factory(t) { return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker)))(t || MatDateRangePicker); }; }();\nMatDateRangePicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) { return new (t || MatDatepickerApply)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerApply.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerApply, selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]], hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() { return ctx._applySelection(); });\n    } } });\nMatDatepickerApply.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerApply, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                host: { '(click)': '_applySelection()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) { return new (t || MatDatepickerCancel)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerCancel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerCancel, selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]], hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() { return ctx._datepicker.close(); });\n    } } });\nMatDatepickerCancel.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerCancel, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                host: { '(click)': '_datepicker.close()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) { return new (t || MatDatepickerActions)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatDatepickerActions.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerActions, selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]], viewQuery: function MatDatepickerActions_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[1, \"mat-datepicker-actions\"]], template: function MatDatepickerActions_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n    } }, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerActions.ctorParameters = () => [\n    { type: MatDatepickerBase },\n    { type: ViewContainerRef }\n];\nMatDatepickerActions.propDecorators = {\n    _template: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerActions, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n                template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerBase }, { type: ɵngcc0.ViewContainerRef }]; }, { _template: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e };\n\n","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Input, Optional, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = this._defaultOptions.showDelay;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() { return this._position; }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() { return this._message; }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() { return this._tooltipClass; }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor.monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !this._tooltipInstance._showTimeoutId && !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal ||\n            new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback))\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled || !this.message || !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners\n                .push(['mouseenter', () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                }]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners\n                .push(['touchstart', () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                }]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    style.MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = function _MatTooltipBase_Factory(t) { return new (t || _MatTooltipBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\n_MatTooltipBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTooltipBase, inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] } });\n_MatTooltipBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined },\n    { type: Directionality },\n    { type: undefined },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n_MatTooltipBase.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTooltipBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined }, { type: ɵngcc5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTooltip.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], hostAttrs: [1, \"mat-tooltip-trigger\"], exportAs: [\"matTooltip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip',\n                host: {\n                    'class': 'mat-tooltip-trigger'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = undefined;\n            this._onShow();\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = undefined;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n}\n_TooltipComponentBase.ɵfac = function _TooltipComponentBase_Factory(t) { return new (t || _TooltipComponentBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_TooltipComponentBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _TooltipComponentBase });\n_TooltipComponentBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_TooltipComponentBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver) {\n        super(changeDetectorRef);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody)(\"auxclick\", function TooltipComponent_auxclick_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_0_0;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    '(body:auxclick)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); };\nMatTooltipModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ], MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip, TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","/*!\n* sweetalert2 v11.4.35\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Sweetalert2 = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n  var privateProps = {\n    awaitingPromise: new WeakMap(),\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n  /**\n   * @param {string[]} items\n   * @returns {object}\n   */\n\n  const prefix = items => {\n    const result = {};\n\n    for (const i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n\n    return result;\n  };\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error', 'no-war']);\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n  const consolePrefix = 'SweetAlert2:';\n  /**\n   * Filter the unique values into a new array\n   *\n   * @param {Array} arr\n   * @returns {Array}\n   */\n\n  const uniqueArray = arr => {\n    const result = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | Array} message\n   */\n\n  const warn = message => {\n    console.warn(\"\".concat(consolePrefix, \" \").concat(typeof message === 'object' ? message.join(' ') : message));\n  };\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n\n  const error = message => {\n    console.error(\"\".concat(consolePrefix, \" \").concat(message));\n  };\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {Array}\n   * @private\n   */\n\n  const previousWarnOnceMessages = [];\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(\"\\\"\".concat(deprecatedParam, \"\\\" is deprecated and will be removed in the next major release. Please use \\\"\").concat(useInstead, \"\\\" instead.\"));\n  };\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n  /**\n   * @param {any} arg\n   * @returns {Promise}\n   */\n\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n  /**\n   * @param {Array} arr\n   * @returns {any}\n   */\n\n  const getRandomElement = arr => arr[Math.floor(Math.random() * arr.length)];\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n\n  const getContainer = () => document.body.querySelector(\".\".concat(swalClasses.container));\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n\n  const elementByClass = className => {\n    return elementBySelector(\".\".concat(className));\n  };\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n\n  const getPopup = () => elementByClass(swalClasses.popup);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getIcon = () => elementByClass(swalClasses.icon);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getTitle = () => elementByClass(swalClasses.title);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getImage = () => elementByClass(swalClasses.image);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getConfirmButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.confirm));\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getDenyButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.deny));\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getLoader = () => elementBySelector(\".\".concat(swalClasses.loader));\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getCancelButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.cancel));\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getActions = () => elementByClass(swalClasses.actions);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getFooter = () => elementByClass(swalClasses.footer);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n  /**\n   * @returns {HTMLElement | null}\n   */\n\n  const getCloseButton = () => elementByClass(swalClasses.close); // https://github.com/jkup/focusable/blob/master/index.js\n\n  const focusable = \"\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\\\"0\\\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\";\n  /**\n   * @returns {HTMLElement[]}\n   */\n\n  const getFocusableElements = () => {\n    const focusableElementsWithTabindex = Array.from(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')) // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n\n      return 0;\n    });\n    const otherFocusableElements = Array.from(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible(el));\n  };\n  /**\n   * @returns {boolean}\n   */\n\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n  /**\n   * @returns {boolean}\n   */\n\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n  /**\n   * @returns {boolean}\n   */\n\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  const states = {\n    previousBodyPadding: null\n  };\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, \"text/html\");\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n    }\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n\n    const classList = className.split(/\\s+/);\n\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n\n\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        return warn(\"Invalid type of customClass.\".concat(className, \"! Expected string or iterable object, got \\\"\").concat(typeof params.customClass[className], \"\\\"\"));\n      }\n\n      addClass(elem, params.customClass[className]);\n    }\n  };\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n\n  const getInput = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses[inputClass]));\n\n      case 'checkbox':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.checkbox, \" input\"));\n\n      case 'radio':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:checked\")) || popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:first-child\"));\n\n      case 'range':\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.range, \" input\"));\n\n      default:\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.input));\n    }\n  };\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n\n  const focusInput = input => {\n    input.focus(); // place cursor at end of text in text input\n\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === \"\".concat(parseInt(value))) {\n      value = parseInt(value);\n    }\n\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? \"\".concat(value, \"px\") : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} display\n   */\n\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n  /**\n   * @param {HTMLElement} elem\n   */\n\n  const hide = elem => {\n    elem.style.display = 'none';\n  };\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n\n  const isVisible = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n  /**\n   * @returns {boolean}\n   */\n\n  const allButtonsAreHidden = () => !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton());\n  /**\n   * @returns {boolean}\n   */\n\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n\n    if (isVisible(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n\n      setTimeout(() => {\n        timerProgressBar.style.transition = \"width \".concat(timer / 1000, \"s linear\");\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = \"\".concat(timerProgressBarPercent, \"%\");\n  };\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n\n  const globalState = {};\n\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise}\n   */\n\n\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = \"\\n <div aria-labelledby=\\\"\".concat(swalClasses.title, \"\\\" aria-describedby=\\\"\").concat(swalClasses['html-container'], \"\\\" class=\\\"\").concat(swalClasses.popup, \"\\\" tabindex=\\\"-1\\\">\\n   <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.close, \"\\\"></button>\\n   <ul class=\\\"\").concat(swalClasses['progress-steps'], \"\\\"></ul>\\n   <div class=\\\"\").concat(swalClasses.icon, \"\\\"></div>\\n   <img class=\\\"\").concat(swalClasses.image, \"\\\" />\\n   <h2 class=\\\"\").concat(swalClasses.title, \"\\\" id=\\\"\").concat(swalClasses.title, \"\\\"></h2>\\n   <div class=\\\"\").concat(swalClasses['html-container'], \"\\\" id=\\\"\").concat(swalClasses['html-container'], \"\\\"></div>\\n   <input class=\\\"\").concat(swalClasses.input, \"\\\" />\\n   <input type=\\\"file\\\" class=\\\"\").concat(swalClasses.file, \"\\\" />\\n   <div class=\\\"\").concat(swalClasses.range, \"\\\">\\n     <input type=\\\"range\\\" />\\n     <output></output>\\n   </div>\\n   <select class=\\\"\").concat(swalClasses.select, \"\\\"></select>\\n   <div class=\\\"\").concat(swalClasses.radio, \"\\\"></div>\\n   <label for=\\\"\").concat(swalClasses.checkbox, \"\\\" class=\\\"\").concat(swalClasses.checkbox, \"\\\">\\n     <input type=\\\"checkbox\\\" />\\n     <span class=\\\"\").concat(swalClasses.label, \"\\\"></span>\\n   </label>\\n   <textarea class=\\\"\").concat(swalClasses.textarea, \"\\\"></textarea>\\n   <div class=\\\"\").concat(swalClasses['validation-message'], \"\\\" id=\\\"\").concat(swalClasses['validation-message'], \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses.actions, \"\\\">\\n     <div class=\\\"\").concat(swalClasses.loader, \"\\\"></div>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.confirm, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.deny, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.cancel, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.footer, \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses['timer-progress-bar-container'], \"\\\">\\n     <div class=\\\"\").concat(swalClasses['timer-progress-bar'], \"\\\"></div>\\n   </div>\\n </div>\\n\").replace(/(^|\\n)\\s*/g, '');\n  /**\n   * @returns {boolean}\n   */\n\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n\n    if (!oldContainer) {\n      return false;\n    }\n\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n\n  const resetValidationMessage = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n\n    const range = popup.querySelector(\".\".concat(swalClasses.range, \" input\"));\n    /** @type {HTMLOutputElement} */\n\n    const rangeOutput = popup.querySelector(\".\".concat(swalClasses.range, \" output\"));\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n\n    const checkbox = popup.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage;\n    file.onchange = resetValidationMessage;\n    select.onchange = resetValidationMessage;\n    checkbox.onchange = resetValidationMessage;\n    textarea.oninput = resetValidationMessage;\n\n    range.oninput = () => {\n      resetValidationMessage();\n      rangeOutput.value = range.value;\n    };\n\n    range.onchange = () => {\n      resetValidationMessage();\n      rangeOutput.value = range.value;\n    };\n  };\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n\n\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n  /**\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n  /**\n   * @param {HTMLElement} targetElement\n   */\n\n\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n    /* istanbul ignore if */\n\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    } // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    } // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    } // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n\n\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n\n    return false;\n  })();\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader(); // Actions (buttons) wrapper\n\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    } // Custom class\n\n\n    applyCustomClass(actions, params, 'actions'); // Render all the buttons\n\n    renderButtons(actions, loader, params); // Loader\n\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton(); // Render buttons\n\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n\n\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      return removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n    }\n\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled); // Buttons background colors\n\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n\n\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[\"show\".concat(capitalizeFirstLetter(buttonType), \"Button\")], 'inline-block');\n    setInnerHtml(button, params[\"\".concat(buttonType, \"ButtonText\")]); // Set caption text\n\n    button.setAttribute('aria-label', params[\"\".concat(buttonType, \"ButtonAriaLabel\")]); // ARIA label\n    // Add buttons custom classes\n\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, \"\".concat(buttonType, \"Button\"));\n    addClass(button, params[\"\".concat(buttonType, \"ButtonClass\")]);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml); // Custom class\n\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n\n    if (!container) {\n      return;\n    }\n\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow); // Custom class\n\n    applyCustomClass(container, params, 'container');\n  };\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n\n\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n\n\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = \"grow-\".concat(grow);\n\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n  /** @type {InputClass[]} */\n\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]); // set attributes\n\n      setAttributes(inputClass, params.inputAttributes); // set class\n\n      inputContainer.className = swalClasses[inputClass];\n\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      } // set custom class\n\n\n      setCustomClass(params);\n    }\n  };\n  /**\n   * @param {SweetAlertOptions} params\n   */\n\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      return error(\"Unexpected type of input! Expected \\\"text\\\", \\\"email\\\", \\\"password\\\", \\\"number\\\", \\\"tel\\\", \\\"select\\\", \\\"radio\\\", \\\"checkbox\\\", \\\"textarea\\\", \\\"file\\\" or \\\"url\\\", got \\\"\".concat(params.input, \"\\\"\"));\n    }\n\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer); // input autofocus\n\n    setTimeout(() => {\n      focusInput(input);\n    });\n  };\n  /**\n   * @param {HTMLInputElement} input\n   */\n\n\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n\n\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput(getPopup(), inputClass);\n\n    if (!input) {\n      return;\n    }\n\n    removeAttributes(input);\n\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n  /**\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n\n\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n\n\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = \"\".concat(inputValue);\n    } else if (!isPromise(inputValue)) {\n      warn(\"Unexpected type of inputValue! Expected \\\"string\\\", \\\"number\\\" or \\\"Promise\\\", got \\\"\".concat(typeof inputValue, \"\\\"\"));\n    }\n  };\n  /** @type Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input> */\n\n\n  const renderInputType = {};\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n\n\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n\n\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n\n\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n\n    setInputLabel(select, select, params);\n    return select;\n  };\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n\n\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n\n\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n\n\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight); // https://github.com/sweetalert2/sweetalert2/issues/2291\n\n\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = \"\".concat(textareaWidth, \"px\");\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    applyCustomClass(htmlContainer, params, 'htmlContainer'); // Content as HTML\n\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    } // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    } // No content\n    else {\n      hide(htmlContainer);\n    }\n\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    toggle(footer, params.footer);\n\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    } // Custom class\n\n\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon(); // if the given icon already rendered, apply the styling without re-rendering the icon\n\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(\"Unknown icon! Expected \\\"success\\\", \\\"error\\\", \\\"warning\\\", \\\"info\\\" or \\\"question\\\", got \\\"\".concat(params.icon, \"\\\"\"));\n      hide(icon);\n      return;\n    }\n\n    show(icon); // Custom or default content\n\n    setContent(icon, params);\n    applyStyles(icon, params); // Animate icon\n\n    addClass(icon, params.showClass.icon);\n  };\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n\n    addClass(icon, iconTypes[params.icon]); // Icon color\n\n    setColor(icon, params); // Success icon background color\n\n    adjustSuccessIconBackgroundColor(); // Custom class\n\n    applyCustomClass(icon, params, 'icon');\n  }; // Adjust success icon background color to match the popup background color\n\n\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n\n  const successIconHtml = \"\\n  <div class=\\\"swal2-success-circular-line-left\\\"></div>\\n  <span class=\\\"swal2-success-line-tip\\\"></span> <span class=\\\"swal2-success-line-long\\\"></span>\\n  <div class=\\\"swal2-success-ring\\\"></div> <div class=\\\"swal2-success-fix\\\"></div>\\n  <div class=\\\"swal2-success-circular-line-right\\\"></div>\\n\";\n  const errorIconHtml = \"\\n  <span class=\\\"swal2-x-mark\\\">\\n    <span class=\\\"swal2-x-mark-line-left\\\"></span>\\n    <span class=\\\"swal2-x-mark-line-right\\\"></span>\\n  </span>\\n\";\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n\n\n  const iconContent = content => \"<div class=\\\"\".concat(swalClasses['icon-content'], \"\\\">\").concat(content, \"</div>\");\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderImage = (instance, params) => {\n    const image = getImage();\n\n    if (!params.imageUrl) {\n      return hide(image);\n    }\n\n    show(image, ''); // Src, alt\n\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt); // Width, height\n\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight); // Class\n\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup(); // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      popup.insertBefore(getLoader(), getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    } // Padding\n\n\n    applyNumericalStyle(popup, 'padding', params.padding); // Color\n\n    if (params.color) {\n      popup.style.color = params.color;\n    } // Background\n\n\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n\n    hide(getValidationMessage()); // Classes\n\n    addClasses(popup, params);\n  };\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n\n  const addClasses = (popup, params) => {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = \"\".concat(swalClasses.popup, \" \").concat(isVisible(popup) ? params.showClass.popup : '');\n\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    } // Custom class\n\n\n    applyCustomClass(popup, params, 'popup');\n\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    } // Icon class (#1842)\n\n\n    if (params.icon) {\n      addClass(popup, swalClasses[\"icon-\".concat(params.icon)]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      return hide(progressStepsContainer);\n    }\n\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n\n    if (params.currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n\n    params.progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n\n      if (index === params.currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n\n      if (index !== params.progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n\n\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    toggle(title, params.title || params.titleText, 'block');\n\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    } // Custom class\n\n\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n\n    if (!innerParams) {\n      return;\n    }\n\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   * @returns {HTMLElement | null}\n   */\n\n  function getInput$1(instance) {\n    const innerParams = privateProps.innerParams.get(instance || this);\n    const domCache = privateProps.domCache.get(instance || this);\n\n    if (!domCache) {\n      return null;\n    }\n\n    return getInput(domCache.popup, innerParams.input);\n  }\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n\n  const isVisible$1 = () => {\n    return isVisible(getPopup());\n  };\n  /*\n   * Global function to click 'Confirm' button\n   */\n\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n  /*\n   * Global function to click 'Deny' button\n   */\n\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n  /*\n   * Global function to click 'Cancel' button\n   */\n\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {number} index\n   * @param {number} increment\n   */\n\n  const setFocus = (innerParams, index, increment) => {\n    const focusableElements = getFocusableElements(); // search for visible elements and select the next possible match\n\n    if (focusableElements.length) {\n      index = index + increment; // rollover to first item\n\n      if (index === focusableElements.length) {\n        index = 0; // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n\n      return focusableElements[index].focus();\n    } // no visible focusable elements, focus the popup\n\n\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {function} dismissWith\n   */\n\n  const keydownHandler = (instance, e, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    } // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n\n\n    if (e.isComposing || e.keyCode === 229) {\n      return;\n    }\n\n    if (innerParams.stopKeydownPropagation) {\n      e.stopPropagation();\n    } // ENTER\n\n\n    if (e.key === 'Enter') {\n      handleEnter(instance, e, innerParams);\n    } // TAB\n    else if (e.key === 'Tab') {\n      handleTab(e, innerParams);\n    } // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n      handleArrows(e.key);\n    } // ESC\n    else if (e.key === 'Escape') {\n      handleEsc(e, innerParams, dismissWith);\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n\n\n  const handleEnter = (instance, e, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n\n    if (e.target && instance.getInput() && e.target instanceof HTMLElement && e.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      e.preventDefault();\n    }\n  };\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n\n\n  const handleTab = (e, innerParams) => {\n    const targetElement = e.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    } // Cycle to the next button\n\n\n    if (!e.shiftKey) {\n      setFocus(innerParams, btnIndex, 1);\n    } // Cycle to the prev button\n    else {\n      setFocus(innerParams, btnIndex, -1);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  /**\n   * @param {string} key\n   */\n\n\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n      return;\n    }\n\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n\n      if (!buttonToFocus) {\n        return;\n      }\n\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible(buttonToFocus)) {\n        break;\n      }\n    }\n\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   * @param {function} dismissWith\n   */\n\n\n  const handleEsc = (e, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      e.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  const iOSfix = () => {\n    const iOS = // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = \"\".concat(offset * -1, \"px\");\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = \"\".concat(bottomPanelHeight, \"px\");\n      }\n    }\n  };\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n\n\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} e\n     */\n\n    container.ontouchstart = e => {\n      preventTouchMove = shouldPreventTouchMove(e);\n    };\n    /**\n     * @param {TouchEvent} e\n     */\n\n\n    container.ontouchmove = e => {\n      if (preventTouchMove) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n  };\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n\n\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n\n    if (target === container) {\n      return true;\n    }\n\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' && // #1603\n    target.tagName !== 'TEXTAREA' && // #2266\n    !(isScrollable(getHtmlContainer()) && // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n\n\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n\n\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    } // if the body has overflow\n\n\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding + measureScrollbar(), \"px\");\n    }\n  };\n  const undoScrollbar = () => {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding, \"px\");\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /*\n   * Instance method to close sweetAlert\n   */\n\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n\n    removeBodyClasses();\n  }\n\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n\n    if (this.isAwaitingPromise()) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  function isAwaitingPromise() {\n    return !!privateProps.awaitingPromise.get(this);\n  }\n\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n\n    if (!popup) {\n      return false;\n    }\n\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise()) {\n      privateProps.awaitingPromise.delete(instance); // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer(); // If animation is supported, animate\n\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n\n      instance._destroy();\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n\n\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n\n    show(domCache.validationMessage);\n    const input = this.getInput();\n\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  } // Hide block with validation message\n\n  function resetValidationMessage$1() {\n    const domCache = privateProps.domCache.get(this);\n\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n\n    const input = this.getInput();\n\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  function getProgressSteps$1() {\n    const domCache = privateProps.domCache.get(this);\n    return domCache.progressSteps;\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n  /**\n   * @param {string} param\n   */\n\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(\"Unknown parameter \\\"\".concat(param, \"\\\"\"));\n    }\n  };\n  /**\n   * @param {string} param\n   */\n\n\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(\"The parameter \\\"\".concat(param, \"\\\" is incompatible with toasts\"));\n    }\n  };\n  /**\n   * @param {string} param\n   */\n\n\n  const checkIfParamIsDeprecated = param => {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const showWarningsForParams = params => {\n    if (!params.backdrop && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n\n    for (const param in params) {\n      checkIfParamIsValid(param);\n\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   */\n\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      return warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");\n    }\n\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(\"Invalid parameter to update: \".concat(param));\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n\n      return; // This instance has already been destroyed\n    } // Check if there is another Swal closing\n\n\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n\n    disposeSwal(this);\n  }\n  /**\n   * @param {SweetAlert2} instance\n   */\n\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance); // Unset this.params so GC will dispose it (#1569)\n    // @ts-ignore\n\n    delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)\n\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget; // Unset currentInstance\n\n    delete globalState.currentInstance;\n  };\n  /**\n   * @param {SweetAlert2} instance\n   */\n\n\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      unsetWeakMaps(privateProps, instance);\n      privateProps.awaitingPromise.set(instance, true);\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n    }\n  };\n  /**\n   * @param {object} obj\n   * @param {SweetAlert2} instance\n   */\n\n\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    hideLoading: hideLoading,\n    disableLoading: hideLoading,\n    getInput: getInput$1,\n    close: close,\n    isAwaitingPromise: isAwaitingPromise,\n    rejectPromise: rejectPromise,\n    handleAwaitingPromise: handleAwaitingPromise,\n    closePopup: close,\n    closeModal: close,\n    closeToast: close,\n    enableButtons: enableButtons,\n    disableButtons: disableButtons,\n    enableInput: enableInput,\n    disableInput: disableInput,\n    showValidationMessage: showValidationMessage,\n    resetValidationMessage: resetValidationMessage$1,\n    getProgressSteps: getProgressSteps$1,\n    update: update,\n    _destroy: _destroy\n  });\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   */\n\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    if (!buttonToReplace && isVisible(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n\n    show(actions);\n\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n\n    if (!input) {\n      return null;\n    }\n\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n\n      case 'radio':\n        return getRadioValue(input);\n\n      case 'file':\n        return getFileValue(input);\n\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n\n\n  const getRadioValue = input => input.checked ? input.value : null;\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n\n\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(typeof params.inputOptions));\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? \"\".concat(parseFloat(inputValue) || 0) : \"\".concat(inputValue);\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(\"Error in inputValue promise: \".concat(err));\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1]; // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n\n  const formatInputOptions = inputOptions => {\n    const result = [];\n\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n\n        result.push([key, valueFormatted]);\n      });\n    }\n\n    return result;\n  };\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n\n\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   */\n\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} dismissWith\n   */\n\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {'confirm' | 'deny'} type\n   */\n\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (!innerParams.input) {\n      error(\"The \\\"input\\\" parameter is needed to be set when using returnInputValueOn\".concat(capitalizeFirstLetter(type)));\n      return;\n    }\n\n    const inputValue = getInputValue(instance, innerParams);\n\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n\n\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n\n\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n\n    if (innerParams.preDeny) {\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error$$1 => rejectWith(instance || undefined, error$$1));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n\n\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {string} error\n   */\n\n\n  const rejectWith = (instance, error$$1) => {\n    // @ts-ignore\n    instance.rejectPromise(error$$1);\n  };\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n\n\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error$$1 => rejectWith(instance || undefined, error$$1));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\n\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n\n      dismissWith(DismissReason.close);\n    };\n  };\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n\n\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n\n  let ignoreOutsideClick = false;\n\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\n\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n\n  const argsToParams = args => {\n    const params = {};\n\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(\"Unexpected type of \".concat(name, \"! Expected \\\"string\\\" or \\\"Element\\\", got \").concat(typeof arg));\n        }\n      });\n    }\n\n    return params;\n  };\n\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n\n    }\n\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   */\n\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   */\n\n  const isTimerRunning = () => {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    isValidParameter: isValidParameter,\n    isUpdatableParameter: isUpdatableParameter,\n    isDeprecatedParameter: isDeprecatedParameter,\n    argsToParams: argsToParams,\n    isVisible: isVisible$1,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    clickCancel: clickCancel,\n    getContainer: getContainer,\n    getPopup: getPopup,\n    getTitle: getTitle,\n    getHtmlContainer: getHtmlContainer,\n    getImage: getImage,\n    getIcon: getIcon,\n    getInputLabel: getInputLabel,\n    getCloseButton: getCloseButton,\n    getActions: getActions,\n    getConfirmButton: getConfirmButton,\n    getDenyButton: getDenyButton,\n    getCancelButton: getCancelButton,\n    getLoader: getLoader,\n    getFooter: getFooter,\n    getTimerProgressBar: getTimerProgressBar,\n    getFocusableElements: getFocusableElements,\n    getValidationMessage: getValidationMessage,\n    isLoading: isLoading,\n    fire: fire,\n    mixin: mixin,\n    showLoading: showLoading,\n    enableLoading: showLoading,\n    getTimerLeft: getTimerLeft,\n    stopTimer: stopTimer,\n    resumeTimer: resumeTimer,\n    toggleTimer: toggleTimer,\n    increaseTimer: increaseTimer,\n    isTimerRunning: isTimerRunning,\n    bindClickHandler: bindClickHandler\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n\n      return this.remaining;\n    }\n\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n\n      return this.remaining;\n    }\n\n    increase(n) {\n      const running = this.running;\n\n      if (running) {\n        this.stop();\n      }\n\n      this.remaining += n;\n\n      if (running) {\n        this.start();\n      }\n\n      return this.remaining;\n    }\n\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n\n      return this.remaining;\n    }\n\n    isRunning() {\n      return this.running;\n    }\n\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n\n\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      }\n\n      if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      }\n    });\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[\"\".concat(type, \"ButtonText\")] = button.innerHTML;\n      result[\"show\".concat(capitalizeFirstLetter(type), \"Button\")] = true;\n\n      if (button.hasAttribute('color')) {\n        result[\"\".concat(type, \"ButtonColor\")] = button.getAttribute('color');\n      }\n\n      if (button.hasAttribute('aria-label')) {\n        result[\"\".concat(type, \"ButtonAriaLabel\")] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n\n    const image = templateContent.querySelector('swal-image');\n\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n\n    const icon = templateContent.querySelector('swal-icon');\n\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n\n      result.iconHtml = icon.innerHTML;\n    }\n\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n\n    const input = templateContent.querySelector('swal-input');\n\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n\n      result.input = input.getAttribute('type') || 'text';\n\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n\n\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n\n      const tag = templateContent.querySelector(paramName);\n\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n\n    return result;\n  };\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n\n\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n\n      if (!allowedElements.includes(tagName)) {\n        warn(\"Unrecognized element <\".concat(tagName, \">\"));\n      }\n    });\n  };\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n\n\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([\"Unrecognized attribute \\\"\".concat(attribute.name, \"\\\" on <\").concat(el.tagName.toLowerCase(), \">.\"), \"\".concat(allowedAttributes.length ? \"Allowed attributes are: \".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'\n\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n\n    removeClass(container, swalClasses['no-transition']);\n  };\n  /**\n   * @param {AnimationEvent} event\n   */\n\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n\n    if (event.target !== popup) {\n      return;\n    }\n\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n\n\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n\n\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    } // sweetalert2/issues/1247\n\n\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n\n\n  const addClasses$1 = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop); // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup); // and remove the opacity workaround\n\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n  /**\n   * @param {SweetAlertOptions} params\n   */\n\n\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n\n\n  function setParameters(params) {\n    setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm\n\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n\n    validateCustomTargetElement(params); // Replace newlines with <br> in title\n\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n\n    init(params);\n  }\n\n  let currentInstance;\n\n  class SweetAlert {\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n\n      currentInstance = this; // @ts-ignore\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      }); // @ts-ignore\n\n      const promise = currentInstance._main(currentInstance.params);\n\n      privateProps.promise.set(this, promise);\n    }\n\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n\n      if (globalState.currentInstance) {\n        // @ts-ignore\n        globalState.currentInstance._destroy();\n\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams); // clear the previous timer\n\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      } // clear the restore focus timeout\n\n\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    } // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n\n\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n\n  }\n  /**\n   * @param {SweetAlert2} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n\n\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        // @ts-ignore\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n\n      domCache.closeButton.onclick = () => {\n        // @ts-ignore\n        dismissWith(DismissReason.close);\n      };\n\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)\n\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n\n\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n  /**\n   * @param {SweetAlert2} instance\n   * @returns {DomCache}\n   */\n\n\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n\n\n  const setupTimer = (globalState$$1, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n\n    if (innerParams.timer) {\n      globalState$$1.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState$$1.timeout;\n      }, innerParams.timer);\n\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState$$1.timeout && globalState$$1.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n\n\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(innerParams, -1, 1);\n    }\n  };\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n\n\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n\n    if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n\n    if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  }; // This anti-war message will only be shown to Russian users visiting Russian sites\n\n\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\n    if (Math.random() < 0.1) {\n      const noWar = document.createElement('div');\n      noWar.className = 'leave-russia-now-and-apply-your-skills-to-the-world';\n      const video = getRandomElement([{\n        text: \"\\u0412 \\u043D\\u0438\\u0436\\u0435\\u043F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0451\\u043D\\u043D\\u043E\\u043C \\u0432\\u0438\\u0434\\u0435\\u043E \\u043E\\u0431\\u044A\\u044F\\u0441\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \\u043A\\u0430\\u0436\\u0434\\u044B\\u0439 \\u0438\\u0437 \\u043D\\u0430\\u0441 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C \\u0432 \\u0442\\u043E\\u043C,\\n        <strong>\\u0447\\u0442\\u043E\\u0431\\u044B \\u044D\\u0442\\u0430 \\u0431\\u0435\\u0441\\u0441\\u043C\\u044B\\u0441\\u043B\\u0435\\u043D\\u043D\\u0430\\u044F \\u0438 \\u0431\\u0435\\u0441\\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u0447\\u043D\\u0430\\u044F \\u0432\\u043E\\u0439\\u043D\\u0430 \\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u043B\\u0430\\u0441\\u044C</strong>:\",\n        id: '4CfDhaRkw7I'\n      }, {\n        text: 'Эмпатия - главное <strong>человеческое</strong> чувство. Способность сопереживать. <strong>Способность поставить себя на место другого.</strong>',\n        id: 's-GLAIY4DXA'\n      }]);\n      setInnerHtml(noWar, \"\\n      <div>\\n        \\u0415\\u0441\\u043B\\u0438 \\u043C\\u044B \\u043D\\u0435 \\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u043C \\u0432\\u043E\\u0439\\u043D\\u0443, \\u043E\\u043D\\u0430 \\u043F\\u0440\\u0438\\u0434\\u0435\\u0442 \\u0432 \\u0434\\u043E\\u043C <strong>\\u043A\\u0430\\u0436\\u0434\\u043E\\u0433\\u043E \\u0438\\u0437 \\u043D\\u0430\\u0441</strong> \\u0438 \\u0435\\u0451 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u0441\\u0442\\u0432\\u0438\\u044F \\u0431\\u0443\\u0434\\u0443\\u0442 <strong>\\u0443\\u0436\\u0430\\u0441\\u0430\\u044E\\u0449\\u0438\\u043C\\u0438</strong>.\\n      </div>\\n      <div>\\n        \\u041F\\u0443\\u0442\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C \\u0437\\u0430 20 \\u0441 \\u043B\\u0438\\u0448\\u043D\\u0438\\u043C \\u043B\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0432\\u0434\\u043E\\u043B\\u0431\\u0438\\u043B \\u043D\\u0430\\u043C, \\u0447\\u0442\\u043E \\u043C\\u044B \\u0431\\u0435\\u0441\\u0441\\u0438\\u043B\\u044C\\u043D\\u044B \\u0438 \\u043E\\u0434\\u0438\\u043D \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u0441\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C. <strong>\\u042D\\u0442\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!</strong>\\n      </div>\\n      <div>\\n        \".concat(video.text, \"\\n      </div>\\n      <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/\").concat(video.id, \"\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n      <div>\\n        \\u041D\\u0435\\u0442 \\u0432\\u043E\\u0439\\u043D\\u0435!\\n      </div>\\n      \"));\n      const closeButton = document.createElement('button');\n      closeButton.innerHTML = '&times;';\n\n      closeButton.onclick = () => noWar.remove();\n\n      noWar.appendChild(closeButton);\n      window.addEventListener('load', () => {\n        setTimeout(() => {\n          document.body.appendChild(noWar);\n        }, 1000);\n      });\n    }\n  } // Assign instance methods from src/instanceMethods/*.js to prototype\n\n\n  Object.assign(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\n\n  Object.assign(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\n\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        return currentInstance[key](...arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.4.35';\n\n  const Swal = SweetAlert; // @ts-ignore\n\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.leave-russia-now-and-apply-your-skills-to-the-world{display:flex;position:fixed;z-index:1939;top:0;right:0;bottom:0;left:0;flex-direction:column;align-items:center;justify-content:center;padding:25px 0 20px;background:#20232a;color:#fff;text-align:center}.leave-russia-now-and-apply-your-skills-to-the-world div{max-width:560px;margin:10px;line-height:146%}.leave-russia-now-and-apply-your-skills-to-the-world iframe{max-width:100%;max-height:55.5555555556vmin;margin:16px auto}.leave-russia-now-and-apply-your-skills-to-the-world strong{border-bottom:2px dashed #fff}.leave-russia-now-and-apply-your-skills-to-the-world button{display:flex;position:fixed;z-index:1940;top:0;right:0;align-items:center;justify-content:center;width:48px;height:48px;margin-right:10px;margin-bottom:-10px;border:none;background:0 0;color:#aaa;font-size:48px;font-weight:700;cursor:pointer}.leave-russia-now-and-apply-your-skills-to-the-world button:hover{color:#fff}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}