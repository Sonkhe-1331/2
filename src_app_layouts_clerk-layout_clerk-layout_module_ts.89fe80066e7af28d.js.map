{"version":3,"file":"src_app_layouts_clerk-layout_clerk-layout_module_ts.89fe80066e7af28d.js","mappings":"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","names":["DashboardComponent","selectors","i0","styles","ClerkService","http","router","this","id","action","post","BaseURI","get","factory","ctx_r6","user_r1","ctx_r9","ClerkLayoutRoutes","path","component","ProcessCIOComponent","clerkService","fb","getBookedUsers","room","isCheckin","user","label","Swal","title","FirstName","Surname","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","_this","checkIn","bookId","subscribe","roomsBooked","error","getUsersBooked","roomsUsers","console","log","_this2","ClerkLayoutModule","CommonModule","SharedModule","MatInputModule","RouterModule","MatCardModule"],"sourceRoot":"webpack:///","sources":["./src/app/layouts/guest-layout/dashboard/dashboard.component.ts","./src/app/layouts/guest-layout/dashboard/dashboard.component.html","./src/app/services/clerk.service.ts","./src/app/layouts/clerk-layout/pages/processCIO/processCIO.component.html","./src/app/layouts/clerk-layout/pages/processCIO/processCIO.component.ts","./src/app/layouts/clerk-layout/clerk-layout.routing.ts","./src/app/layouts/clerk-layout/clerk-layout.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-dashboard></app-dashboard>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClerkService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/clerk/';\r\n\r\n  checkIn(id: number, action): Observable<unknown> {\r\n    return this.http.post<unknown>(this.BaseURI + action+'/'+id,{});\r\n  }\r\n\r\n  checkOut(id: number): Observable<unknown> {\r\n    return this.http.post<unknown>(this.BaseURI + 'checkin/'+id,{});\r\n  }\r\n  getUsersBooked(): Observable<unknown[]> {\r\n    return this.http.get<unknown[]>(this.BaseURI + 'GetUsersBooked');\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n\r\n              <div class=\"jumbotron\">\r\n                <div class=\"row\" *ngFor=\"let user of roomsBooked\">\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card\" >\r\n                      <div class=\"card-header card-header-primary\">\r\n                        <h4 class=\"card-title\">Number of Rooms Booked {{user.BookedRooms.length}}</h4>\r\n                        <p class=\"card-category\">\r\n                          <i class=\"material-icons text-danger\">house</i>\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"card-body\">\r\n\r\n                        <p>\r\n                          <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\".multi-collapse\" aria-expanded=\"false\" aria-controls=\"multiCollapseE\">View Customer Rooms</button>\r\n                        </p>\r\n                        <div class=\"row\" *ngFor=\"let room of user.BookedRooms \">\r\n                          <div class=\"col\">\r\n                            <div class=\"collapse multi-collapse\" id=\"multiCollapseE\">\r\n                              <div class=\"card card-body\">\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col\">\r\n                                    <span class=\"badge rounded-pill text-bg-warning\">{{room.startDate | date}}</span> -\r\n                                    <span class=\"badge rounded-pill text-bg-warning\">{{room.endDate | date }}</span>\r\n                                    <hr>\r\n                                    <h5 class=\"card-title\">Amenities\r\n                                    </h5>\r\n                                    <ul *ngFor=\"let amenity of room.amenities \">\r\n                                      <li>{{amenity.Name}}</li>\r\n                                    </ul>\r\n                                  </div>\r\n                                  <div class=\"col align-middle\">\r\n                                    <span class=\"badge badge-pill badge-info\" style=\"font-size: 16px; font-weight: bold;\">{{room.status ? 'checked in': 'booked'}}</span>\r\n                                    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                      <button mat-raised-button (click)=\"Check(room,true, user)\" [disabled]=\"room.status\" class=\"btn btn-warning\">Check In</button>\r\n                                      <button mat-raised-button (click)=\"Check(room, false, user)\" [disabled]=\"!room.status\" class=\"btn orange\">Check Out</button>\r\n\r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"card card-profile\">\r\n                        <div class=\"card-body\">\r\n                            <h6 class=\"card-category text-gray\">Customer info</h6>\r\n                            <h4 class=\"card-title\">{{user.FirstName}} {{user.Surname}}</h4>\r\n                            <p class=\"card-description\">\r\n                                Username: {{user.Username}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n          </div>\r\n\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AuthService } from \"app/auth/auth.service\";\r\nimport { ClerkService } from \"app/services/clerk.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-processCIO\",\r\n  templateUrl: \"./processCIO.component.html\",\r\n  styleUrls: [\"./processCIO.component.scss\"],\r\n})\r\nexport class ProcessCIOComponent implements OnInit {\r\n  roomsBooked: unknown[] = [];\r\n\r\n  constructor(private clerkService: ClerkService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.getBookedUsers();\r\n  }\r\n\r\n  Check(room: any, isCheckin: boolean, user) {\r\n    let action = isCheckin ? \"checkin\" : \"checkOut\";\r\n    let label = isCheckin ? \"check in\" : \"check out\";\r\n\r\n    Swal.fire({\r\n      title: `Are you sure you want to ${\r\n        isCheckin ? \"check in\" : \"check out\"\r\n      } the ${user.FirstName} ${user.Surname}?`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#ff0000\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, book it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.clerkService.checkIn(room.bookId, action).subscribe(\r\n          (result) => {\r\n            Swal.fire(\"Chec!\", label + \" successfully \", \"success\");\r\n            this.roomsBooked = [];\r\n            this.getBookedUsers();\r\n          },\r\n          (error) => {}\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getBookedUsers() {\r\n    this.clerkService.getUsersBooked().subscribe((roomsUsers: any) => {\r\n      console.log(roomsUsers);\r\n      this.roomsBooked = roomsUsers;\r\n    });\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from '../guest-layout/dashboard/dashboard.component';\r\nimport { ProcessCIOComponent } from './pages/processCIO/processCIO.component';\r\n\r\nexport const ClerkLayoutRoutes: Routes = [\r\n  { path: \"checkIn-process\", component: ProcessCIOComponent },\r\n  { path: \"dashboard\", component: DashboardComponent },\r\n\r\n];\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ClerkLayoutComponent } from './clerk-layout.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ProcessCIOComponent } from './pages/processCIO/processCIO.component';\r\nimport { ClerkLayoutRoutes } from './clerk-layout.routing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatInputModule,\r\n    RouterModule.forChild(ClerkLayoutRoutes),\r\n    MatCardModule\r\n  ],\r\n  declarations: [ClerkLayoutComponent, ProcessCIOComponent,DashboardComponent]\r\n})\r\nexport class ClerkLayoutModule { }\r\n"],"x_google_ignoreList":[]}