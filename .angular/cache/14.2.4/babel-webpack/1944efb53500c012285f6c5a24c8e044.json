{"ast":null,"code":"import _toConsumableArray from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var RoomService = /*#__PURE__*/(function () {\n  var RoomService = /*#__PURE__*/function () {\n    function RoomService(http, router) {\n      _classCallCheck(this, RoomService);\n\n      this.http = http;\n      this.router = router;\n      this.BaseURI = 'https://localhost:44318/api/rooms/';\n    }\n\n    _createClass(RoomService, [{\n      key: \"getRooms\",\n      value: function getRooms() {\n        return this.http.get(this.BaseURI);\n      }\n    }, {\n      key: \"getRoomsTypes\",\n      value: function getRoomsTypes() {\n        return this.http.get(this.BaseURI + 'GetRoomsTypes');\n      }\n    }, {\n      key: \"updateRoom\",\n      value: function updateRoom(Room, id) {\n        return this.http.post(this.BaseURI + id, Room);\n      }\n    }, {\n      key: \"AddRoom\",\n      value: function AddRoom(Room) {\n        return this.http.post(this.BaseURI, Room);\n      }\n    }, {\n      key: \"deleteRoom\",\n      value: function deleteRoom(id) {\n        return this.http.delete(this.BaseURI + id);\n      }\n    }, {\n      key: \"checkRoomAvailability\",\n      value: function checkRoomAvailability(typeId, range, Amenities) {\n        var httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n          })\n        };\n        var data = Object.assign(Object.assign({\n          typeId: typeId\n        }, range), {\n          amenities: _toConsumableArray(Amenities)\n        });\n        console.log(data);\n        return this.http.post('https://localhost:44318/api/booking/check-availability/' + typeId, data, httpOptions);\n      }\n    }, {\n      key: \"bookRoom\",\n      value: function bookRoom(booking) {\n        var httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n          })\n        };\n        return this.http.post('https://localhost:44318/api/booking/book', booking, httpOptions);\n      }\n    }, {\n      key: \"cancelBooking\",\n      value: function cancelBooking(booking) {\n        var httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n          })\n        };\n        return this.http.post('https://localhost:44318/api/booking/cancelbooking', booking, httpOptions);\n      }\n    }, {\n      key: \"getAmenities\",\n      value: function getAmenities() {\n        return this.http.get('https://localhost:44318/api/booking/GetAmenities');\n      }\n    }, {\n      key: \"getProfile\",\n      value: function getProfile(id) {\n        return this.http.get('https://localhost:44318/api/booking/GetProfile/' + id);\n      }\n    }]);\n\n    return RoomService;\n  }();\n\n  RoomService.ɵfac = function RoomService_Factory(t) {\n    return new (t || RoomService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  RoomService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoomService,\n    factory: RoomService.ɵfac,\n    providedIn: 'root'\n  });\n  return RoomService;\n})();","map":{"version":3,"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;AAEA,SAASC,MAAT,QAAuB,iBAAvB;;;;AAMA,WAAaC,WAAb;EAAA,IAAaA,WAAb;IAGE,qBAAoBC,IAApB,EAA8CC,MAA9C,EAA4D;MAAA;;MAAxC;MAA0B;MAErC,eAAU,oCAAV;IAFwD;;IAHnE;MAAA;MAAA,OAQE,oBAAQ;QACN,OAAO,KAAKD,IAAL,CAAUE,GAAV,CAAqB,KAAKC,OAA1B,CAAP;MACD;IAVH;MAAA;MAAA,OAYE,yBAAa;QACX,OAAO,KAAKH,IAAL,CAAUE,GAAV,CAAqB,KAAKC,OAAL,GAAe,eAApC,CAAP;MACD;IAdH;MAAA;MAAA,OAgBE,oBAAWC,IAAX,EAAiBC,EAAjB,EAA2B;QACzB,OAAO,KAAKL,IAAL,CAAUM,IAAV,CAAe,KAAKH,OAAL,GAAeE,EAA9B,EAAkCD,IAAlC,CAAP;MACD;IAlBH;MAAA;MAAA,OAoBE,iBAAQA,IAAR,EAAY;QACV,OAAO,KAAKJ,IAAL,CAAUM,IAAV,CAAe,KAAKH,OAApB,EAA6BC,IAA7B,CAAP;MACD;IAtBH;MAAA;MAAA,OAuBE,oBAAWC,EAAX,EAAa;QACX,OAAO,KAAKL,IAAL,CAAUO,MAAV,CAAiB,KAAKJ,OAAL,GAAeE,EAAhC,CAAP;MACD;IAzBH;MAAA;MAAA,OA2BE,+BAAsBG,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,EAA8C;QAC5C,IAAMC,WAAW,GAAG;UAAEC,OAAO,EAAE,IAAIf,WAAJ,CAAgB;YAAE,gBAAgB;UAAlB,CAAhB;QAAX,CAApB;QACA,IAAIgB,IAAI;UACNL,MAAM,EAANA;QADM,GACKC,KADL,GACU;UAAEK,SAAS,qBAAMJ,SAAN;QAAX,CADV,CAAR;QAGAK,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACA,OAAO,KAAKb,IAAL,CAAUM,IAAV,CAAe,4DAA4DE,MAA3E,EAAmFK,IAAnF,EAAyFF,WAAzF,CAAP;MACD;IAlCH;MAAA;MAAA,OAoCE,kBAASM,OAAT,EAAgB;QACd,IAAMN,WAAW,GAAG;UAAEC,OAAO,EAAE,IAAIf,WAAJ,CAAgB;YAAE,gBAAgB;UAAlB,CAAhB;QAAX,CAApB;QACA,OAAO,KAAKG,IAAL,CAAUM,IAAV,CAAe,0CAAf,EAA2DW,OAA3D,EAAoEN,WAApE,CAAP;MACD;IAvCH;MAAA;MAAA,OAyCE,uBAAcM,OAAd,EAAqB;QACnB,IAAMN,WAAW,GAAG;UAAEC,OAAO,EAAE,IAAIf,WAAJ,CAAgB;YAAE,gBAAgB;UAAlB,CAAhB;QAAX,CAApB;QACA,OAAO,KAAKG,IAAL,CAAUM,IAAV,CAAe,mDAAf,EAAoEW,OAApE,EAA6EN,WAA7E,CAAP;MACD;IA5CH;MAAA;MAAA,OA6CE,wBAAY;QACV,OAAO,KAAKX,IAAL,CAAUE,GAAV,CAAqB,kDAArB,CAAP;MACD;IA/CH;MAAA;MAAA,OAiDE,oBAAWG,EAAX,EAAqB;QACnB,OAAO,KAAKL,IAAL,CAAUE,GAAV,CAAmB,oDAAmDG,EAAtE,CAAP;MACD;IAnDH;;IAAA;EAAA;;;qBAAaN,aAAWmB;EAAA;;;WAAXnB;IAAWoB,SAAXpB,WAAW;IAAAqB,YAFV;;EAEd,OAAarB,WAAb;AAAA","names":["HttpClient","HttpHeaders","Router","RoomService","http","router","get","BaseURI","Room","id","post","delete","typeId","range","Amenities","httpOptions","headers","data","amenities","console","log","booking","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sonkh\\2\\src\\app\\services\\room.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoomService {\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/rooms/';\r\n\r\n\r\n  getRooms(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI);\r\n  }\r\n\r\n  getRoomsTypes(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI + 'GetRoomsTypes');\r\n  }\r\n\r\n  updateRoom(Room, id: number): Observable<any> {\r\n    return this.http.post(this.BaseURI + id, Room);\r\n  }\r\n\r\n  AddRoom(Room): Observable<any> {\r\n    return this.http.post(this.BaseURI, Room);\r\n  }\r\n  deleteRoom(id) {\r\n    return this.http.delete(this.BaseURI + id);\r\n  }\r\n\r\n  checkRoomAvailability(typeId, range, Amenities): Observable<any> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    let data = {\r\n      typeId, ...range, amenities: [...Amenities]\r\n    }\r\n    console.log(data);\r\n    return this.http.post('https://localhost:44318/api/booking/check-availability/' + typeId, data, httpOptions);\r\n  }\r\n\r\n  bookRoom(booking) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.post('https://localhost:44318/api/booking/book', booking, httpOptions)\r\n  }\r\n\r\n  cancelBooking(booking) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.post('https://localhost:44318/api/booking/cancelbooking', booking, httpOptions)\r\n  }\r\n  getAmenities(): Observable<any[]> {\r\n    return this.http.get<any[]>('https://localhost:44318/api/booking/GetAmenities');\r\n  }\r\n\r\n  getProfile(id: number):  Observable<any[]> {\r\n    return this.http.get<any>('https://localhost:44318/api/booking/GetProfile/'+ id);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}