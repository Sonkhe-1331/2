{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DocumentService } from 'app/shared/Document.service';\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"app/shared/Document.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction RegisterComponent_label_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵtext(1, \"Field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_label_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵtext(1, \"Minimum 4 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_label_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵtext(1, \"Field is mandatory.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_label_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵtext(1, \"Confirm Password does not match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var RegisterComponent = /*#__PURE__*/(function () {\n  var RegisterComponent = /*#__PURE__*/function () {\n    function RegisterComponent(fb, router, auth, DocumentService) {\n      _classCallCheck(this, RegisterComponent);\n\n      this.fb = fb;\n      this.router = router;\n      this.auth = auth;\n      this.DocumentService = DocumentService;\n    }\n\n    _createClass(RegisterComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.formModel = this.fb.group({\n          FirstName: ['', Validators.required],\n          Surname: ['', Validators.required],\n          Email: ['', Validators.required],\n          IdNumber: ['', Validators.required],\n          Passwords: this.fb.group({\n            Password: ['', [Validators.required, Validators.minLength(4)]],\n            ConfirmPassword: ['', Validators.required]\n          }, {\n            validator: this.comparePasswords\n          })\n        });\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        var _this = this;\n\n        console.log(this.formModel.valid);\n        console.log(this.formModel.value);\n\n        if (this.formModel.valid) {\n          this.auth.register(this.formModel.value).subscribe(function (res) {\n            _this.formModel.reset();\n\n            _this.router.navigate(['/login']);\n\n            alert(res.innerData.message);\n          }, function (error) {\n            alert(error);\n          });\n        }\n      }\n    }, {\n      key: \"comparePasswords\",\n      value: function comparePasswords(fb) {\n        var confirmPswrdCtrl = fb.get('ConfirmPassword');\n\n        if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n          if (fb.get('Password').value !== confirmPswrdCtrl.value) {\n            confirmPswrdCtrl.setErrors({\n              passwordMismatch: true\n            });\n          } else {\n            confirmPswrdCtrl.setErrors(null);\n          }\n        }\n      }\n    }]);\n\n    return RegisterComponent;\n  }();\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.DocumentService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 48,\n    vars: 5,\n    consts: [[\"src\", \"https://www.premierhotels.co.za/wp-content/uploads/2018/07/ph_elicc_pool_2000.jpg\", \"alt\", \"Hello\", 1, \"img\"], [1, \"example-card\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"submit\"], [\"mat-card-avatar\", \"\"], [1, \"row\"], [1, \"col\"], [\"appearance\", \"outline\"], [\"for\", \"inputSmall\", 1, \"col-form-label\", \"col-form-label-sm\", \"mt-2\"], [\"matInput\", \"\", \"placeholder\", \"ex. 'Tristan'\", \"formControlName\", \"FirstName\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"ex. 'Ogle'\", \"formControlName\", \"Surname\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"ex. 'user1234'\", \"formControlName\", \"Email\"], [\"appearance\", \"fill\", 1, \"m-2\"], [\"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"ex. 'ID Number'\", \"formControlName\", \"IdNumber\"], [\"formGroupName\", \"Passwords\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"ex. 'Tristan'\", \"formControlName\", \"Password\", \"required\", \"\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Confirm  Password\", \"formControlName\", \"ConfirmPassword\", \"required\", \"\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-end\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\"], [1, \"text-danger\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"img\", 0);\n        i0.ɵɵelementStart(2, \"mat-card\", 1)(3, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"mat-card-header\")(5, \"mat-icon\", 3);\n        i0.ɵɵtext(6, \"person_add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-title\");\n        i0.ɵɵtext(8, \"Guest Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-card-subtitle\");\n        i0.ɵɵtext(10, \"Please fill in the following input fields\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-card-content\")(12, \"div\", 4)(13, \"div\", 5)(14, \"mat-form-field\", 6)(15, \"mat-label\", 7);\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\", 7);\n        i0.ɵɵtext(20, \"Surname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"mat-form-field\", 6)(24, \"mat-label\", 7);\n        i0.ɵɵtext(25, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-form-field\", 11)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Id Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 13)(32, \"mat-form-field\", 6)(33, \"mat-label\", 7);\n        i0.ɵɵtext(34, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 14);\n        i0.ɵɵtemplate(36, RegisterComponent_label_36_Template, 2, 0, \"label\", 15);\n        i0.ɵɵtemplate(37, RegisterComponent_label_37_Template, 2, 0, \"label\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-form-field\", 6)(39, \"mat-label\", 7);\n        i0.ɵɵtext(40, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 16);\n        i0.ɵɵtemplate(42, RegisterComponent_label_42_Template, 2, 0, \"label\", 15);\n        i0.ɵɵtemplate(43, RegisterComponent_label_43_Template, 2, 0, \"label\", 15);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(44, \"mat-card-actions\")(45, \"div\", 17)(46, \"button\", 18);\n        i0.ɵɵtext(47, \"Register\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.formModel);\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"ngIf\", ctx.formModel.get(\"Passwords.Password\").touched && (ctx.formModel.get(\"Passwords.Password\").errors == null ? null : ctx.formModel.get(\"Passwords.Password\").errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formModel.get(\"Passwords.Password\").touched && (ctx.formModel.get(\"Passwords.Password\").errors == null ? null : ctx.formModel.get(\"Passwords.Password\").errors.minlength));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formModel.get(\"Passwords.ConfirmPassword\").touched && (ctx.formModel.get(\"Passwords.ConfirmPassword\").errors == null ? null : ctx.formModel.get(\"Passwords.ConfirmPassword\").errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formModel.get(\"Passwords.ConfirmPassword\").touched && (ctx.formModel.get(\"Passwords.ConfirmPassword\").errors == null ? null : ctx.formModel.get(\"Passwords.ConfirmPassword\").errors.passwordMismatch));\n      }\n    },\n    directives: [i5.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatCardHeader, i6.MatIcon, i5.MatCardAvatar, i5.MatCardTitle, i5.MatCardSubtitle, i5.MatCardContent, i7.MatFormField, i7.MatLabel, i8.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.NumberValueAccessor, i1.FormGroupName, i9.NgIf, i5.MatCardActions, i10.MatButton],\n    styles: [\".img[_ngcontent-%COMP%] {\\n  min-height: 100%;\\n  min-width: 1024px;\\n  \\n  width: 100%;\\n  height: 70%;\\n  \\n  position: fixed;\\n  top: 4em;\\n  left: 0;\\n}\\n\\n.example-card[_ngcontent-%COMP%] {\\n  max-width: 900px;\\n  padding: 50px;\\n  margin: 20px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center;\\n}\\n\\nmat-icon.mat-card-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUVBLGlDQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFFQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtBQUZGOztBQUlBO0VBRUUsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQUZGOztBQU1BO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FBSEYiLCJmaWxlIjoicmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmltZ3tcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gIG1pbi13aWR0aDogMTAyNHB4O1xyXG5cclxuICAvKiBTZXQgdXAgcHJvcG9ydGlvbmF0ZSBzY2FsaW5nICovXHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA3MCU7XHJcblxyXG4gIC8qIFNldCB1cCBwb3NpdGlvbmluZyAqL1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDRlbTtcclxuICBsZWZ0OiAwO1xyXG59XHJcbi5leGFtcGxlLWNhcmQge1xyXG5cclxuICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gIHBhZGRpbmc6IDUwcHg7XHJcbiAgbWFyZ2luOiAyMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG5tYXQtaWNvbi5tYXQtY2FyZC1hdmF0YXIge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbn1cclxuIl19 */\"]\n  });\n  return RegisterComponent;\n})();","map":{"version":3,"mappings":"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","names":["FormBuilder","Validators","Router","DocumentService","AuthService","i0","RegisterComponent","fb","router","auth","formModel","group","FirstName","required","Surname","Email","IdNumber","Passwords","Password","minLength","ConfirmPassword","validator","comparePasswords","console","log","valid","value","register","subscribe","res","reset","navigate","alert","innerData","message","error","confirmPswrdCtrl","get","errors","setErrors","passwordMismatch","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sonkh\\2\\src\\app\\auth\\register\\register.component.ts","C:\\Users\\sonkh\\2\\src\\app\\auth\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DocumentService } from 'app/shared/Document.service';\r\nimport { Document, DocumentList } from 'app/shared/models/Document.model';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { AuthService } from '../auth.service';\r\n\r\ninterface company {\r\n  value: any;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n\r\n  Yes: Boolean | undefined;\r\n\r\n\r\n  formModel: FormGroup;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private auth: AuthService, private DocumentService: DocumentService) { }\r\n\r\n  ngOnInit() {\r\n    this.formModel = this.fb.group({\r\n      FirstName: ['', Validators.required],\r\n      Surname: ['', Validators.required],\r\n      Email: ['', Validators.required],\r\n      IdNumber: ['', Validators.required],\r\n      Passwords: this.fb.group({\r\n        Password: ['', [Validators.required, Validators.minLength(4)]],\r\n        ConfirmPassword: ['', Validators.required]\r\n      }, { validator: this.comparePasswords })\r\n\r\n    });\r\n  }\r\n  onSubmit() {\r\n\r\n    console.log(this.formModel.valid)\r\n    console.log(this.formModel.value)\r\n    if (this.formModel.valid) {\r\n        this.auth.register(this.formModel.value).subscribe(\r\n          (res: any) => {\r\n            this.formModel.reset();\r\n            this.router.navigate(['/login']);\r\n            alert(res.innerData.message);\r\n          },\r\n          error => {\r\n            alert(error);\r\n          }\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    const confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n      if (fb.get('Password').value !== confirmPswrdCtrl.value) {\r\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n      } else {\r\n        confirmPswrdCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div>\r\n  <img src=\"https://www.premierhotels.co.za/wp-content/uploads/2018/07/ph_elicc_pool_2000.jpg\" alt=\"Hello\" class=\"img\">\r\n  <mat-card class=\"example-card\">\r\n    <form [formGroup]=\"formModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n      <mat-card-header>\r\n        <mat-icon mat-card-avatar>person_add</mat-icon>\r\n        <mat-card-title>Guest Registration</mat-card-title>\r\n        <mat-card-subtitle>Please fill in the following input fields</mat-card-subtitle>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label class=\"col-form-label col-form-label-sm mt-2\" for=\"inputSmall\">Name</mat-label>\r\n              <input matInput placeholder=\"ex. 'Tristan'\" formControlName=\"FirstName\" required>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label class=\"col-form-label col-form-label-sm mt-2\" for=\"inputSmall\">Surname</mat-label>\r\n              <input matInput placeholder=\"ex. 'Ogle'\" formControlName=\"Surname\" required>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n          </div>\r\n          <div class=\"col\">\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label class=\"col-form-label col-form-label-sm mt-2\" for=\"inputSmall\">Username</mat-label>\r\n              <input matInput placeholder=\"ex. 'user1234'\" formControlName=\"Email\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"m-2\">\r\n              <mat-label>Id Number</mat-label>\r\n              <input type=\"number\" matInput placeholder=\"ex. 'ID Number'\" formControlName=\"IdNumber\">\r\n            </mat-form-field>\r\n            <div formGroupName=\"Passwords\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label class=\"col-form-label col-form-label-sm mt-2\" for=\"inputSmall\">Password</mat-label>\r\n                <input matInput type=\"password\" placeholder=\"ex. 'Tristan'\" formControlName=\"Password\" required>\r\n                <label class=\"text-danger\"\r\n                  *ngIf=\"formModel.get('Passwords.Password').touched && formModel.get('Passwords.Password').errors?.required\">Field\r\n                  is mandatory.</label>\r\n                <label class=\"text-danger\"\r\n                  *ngIf=\"formModel.get('Passwords.Password').touched && formModel.get('Passwords.Password').errors?.minlength\">Minimum\r\n                  4 characters.</label>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label class=\"col-form-label col-form-label-sm mt-2\" for=\"inputSmall\">Confirm Password</mat-label>\r\n                <input matInput type=\"password\" placeholder=\"Confirm  Password\" formControlName=\"ConfirmPassword\"\r\n                  required>\r\n                <label class=\"text-danger\"\r\n                  *ngIf=\"formModel.get('Passwords.ConfirmPassword').touched && formModel.get('Passwords.ConfirmPassword').errors?.required\">Field\r\n                  is mandatory.</label>\r\n                <label class=\"text-danger\"\r\n                  *ngIf=\"formModel.get('Passwords.ConfirmPassword').touched && formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">Confirm\r\n                  Password does not match</label>\r\n\r\n              </mat-form-field>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n          <button mat-stroked-button type=\"submit\">Register</button>\r\n\r\n        </div>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n\r\n</div>"]},"metadata":{},"sourceType":"module"}