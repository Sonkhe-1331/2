{"ast":null,"code":"import _inherits from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n\n/** @docs-private */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"primaryValueBar\"];\n\nvar _MatProgressBarBase = /*#__PURE__*/mixinColor( /*#__PURE__*/function () {\n  function _class(_elementRef) {\n    _classCallCheck(this, _class);\n\n    this._elementRef = _elementRef;\n  }\n\n  return _createClass(_class);\n}(), 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\n\n\nvar MAT_PROGRESS_BAR_LOCATION = /*#__PURE__*/new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  var _document = inject(DOCUMENT);\n\n  var _location = _document ? _document.location : null;\n\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: function getPathname() {\n      return _location ? _location.pathname + _location.search : '';\n    }\n  };\n}\n/** Counter used to generate unique IDs for progress bars. */\n\n\nvar progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\n\nvar MatProgressBar = /*#__PURE__*/(function () {\n  var MatProgressBar = /*#__PURE__*/function (_MatProgressBarBase2) {\n    _inherits(MatProgressBar, _MatProgressBarBase2);\n\n    var _super = _createSuper(MatProgressBar);\n\n    function MatProgressBar(elementRef, _ngZone, _animationMode,\n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n      var _this;\n\n      _classCallCheck(this, MatProgressBar);\n\n      _this = _super.call(this, elementRef);\n      _this._ngZone = _ngZone;\n      _this._animationMode = _animationMode;\n      /** Flag that indicates whether NoopAnimations mode is set to true. */\n\n      _this._isNoopAnimation = false;\n      _this._value = 0;\n      _this._bufferValue = 0;\n      /**\n       * Event emitted when animation of the primary progress bar completes. This event will not\n       * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n       * animations (indeterminate and query).\n       */\n\n      _this.animationEnd = new EventEmitter();\n      /** Reference to animation end subscription to be unsubscribed on destroy. */\n\n      _this._animationEndSubscription = Subscription.EMPTY;\n      /**\n       * Mode of the progress bar.\n       *\n       * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n       * 'determinate'.\n       * Mirrored to mode attribute.\n       */\n\n      _this.mode = 'determinate';\n      /** ID of the progress bar. */\n\n      _this.progressbarId = \"mat-progress-bar-\".concat(progressbarId++); // We need to prefix the SVG reference with the current path, otherwise they won't work\n      // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n      // because named route URLs can contain parentheses (see #12338). Also we don't use since\n      // we can't tell the difference between whether\n      // the consumer is using the hash location strategy or not, because `Location` normalizes\n      // both `/#/foo/bar` and `/foo/bar` to the same thing.\n\n      var path = location ? location.getPathname().split('#')[0] : '';\n      _this._rectangleFillValue = \"url('\".concat(path, \"#\").concat(_this.progressbarId, \"')\");\n      _this._isNoopAnimation = _animationMode === 'NoopAnimations';\n      return _this;\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n\n\n    _createClass(MatProgressBar, [{\n      key: \"value\",\n      get: function get() {\n        return this._value;\n      },\n      set: function set(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n      }\n      /** Buffer value of the progress bar. Defaults to zero. */\n\n    }, {\n      key: \"bufferValue\",\n      get: function get() {\n        return this._bufferValue;\n      },\n      set: function set(v) {\n        this._bufferValue = clamp(v || 0);\n      }\n      /** Gets the current transform value for the progress bar's primary indicator. */\n\n    }, {\n      key: \"_primaryTransform\",\n      value: function _primaryTransform() {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        var scale = this.value / 100;\n        return {\n          transform: \"scale3d(\".concat(scale, \", 1, 1)\")\n        };\n      }\n      /**\n       * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n       * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n       */\n\n    }, {\n      key: \"_bufferTransform\",\n      value: function _bufferTransform() {\n        if (this.mode === 'buffer') {\n          // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n          var scale = this.bufferValue / 100;\n          return {\n            transform: \"scale3d(\".concat(scale, \", 1, 1)\")\n          };\n        }\n\n        return null;\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this2 = this;\n\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(function () {\n          var element = _this2._primaryValueBar.nativeElement;\n          _this2._animationEndSubscription = fromEvent(element, 'transitionend').pipe(filter(function (e) {\n            return e.target === element;\n          })).subscribe(function () {\n            if (_this2.mode === 'determinate' || _this2.mode === 'buffer') {\n              _this2._ngZone.run(function () {\n                return _this2.animationEnd.next({\n                  value: _this2.value\n                });\n              });\n            }\n          });\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n      }\n    }]);\n\n    return MatProgressBar;\n  }(_MatProgressBarBase);\n\n  MatProgressBar.ɵfac = function MatProgressBar_Factory(t) {\n    return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8));\n  };\n\n  MatProgressBar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatProgressBar,\n    selectors: [[\"mat-progress-bar\"]],\n    viewQuery: function MatProgressBar_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-progress-bar\"],\n    hostVars: 4,\n    hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n      }\n    },\n    inputs: {\n      color: \"color\",\n      mode: \"mode\",\n      value: \"value\",\n      bufferValue: \"bufferValue\"\n    },\n    outputs: {\n      animationEnd: \"animationEnd\"\n    },\n    exportAs: [\"matProgressBar\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 4,\n    consts: [[\"aria-hidden\", \"true\"], [\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]],\n    template: function MatProgressBar_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1)(2, \"defs\")(3, \"pattern\", 2);\n        ɵngcc0.ɵɵelement(4, \"circle\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelement(5, \"rect\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(6, \"div\", 5)(7, \"div\", 6, 7)(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n      }\n    },\n    directives: [ɵngcc1.NgStyle],\n    styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatProgressBar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\n\n\nfunction clamp(v) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  return Math.max(min, Math.min(max, v));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatProgressBarModule = /*#__PURE__*/(function () {\n  var MatProgressBarModule = /*#__PURE__*/_createClass(function MatProgressBarModule() {\n    _classCallCheck(this, MatProgressBarModule);\n  });\n\n  MatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) {\n    return new (t || MatProgressBarModule)();\n  };\n\n  MatProgressBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatProgressBarModule\n  });\n  MatProgressBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule], MatCommonModule]\n  });\n  return MatProgressBarModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, {\n    declarations: function declarations() {\n      return [MatProgressBar];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatProgressBar, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };","map":{"version":3,"names":["InjectionToken","inject","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","Optional","Inject","Input","ViewChild","Output","NgModule","DOCUMENT","CommonModule","mixinColor","MatCommonModule","coerceNumberProperty","ANIMATION_MODULE_TYPE","Subscription","fromEvent","filter","ɵngcc0","ɵngcc1","_c0","_MatProgressBarBase","_elementRef","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","MAT_PROGRESS_BAR_LOCATION_FACTORY","_document","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","elementRef","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","_rectangleFillValue","v","clamp","scale","value","transform","bufferValue","runOutsideAngular","element","_primaryValueBar","nativeElement","pipe","e","target","subscribe","run","next","unsubscribe","ɵfac","MatProgressBar_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatProgressBar_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatProgressBar_HostBindings","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatProgressBar_Template","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵadvance","ɵɵproperty","_bufferTransform","_primaryTransform","directives","NgStyle","styles","encapsulation","changeDetection","ngDevMode","min","max","Math","MatProgressBarModule","MatProgressBarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"sources":["C:/Users/sonkh/2/node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js"],"sourcesContent":["import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nconst _MatProgressBarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** Counter used to generate unique IDs for progress bars. */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarBase {\n    constructor(elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /** Flag that indicates whether NoopAnimations mode is set to true. */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /** Reference to animation end subscription to be unsubscribed on destroy. */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /** ID of the progress bar. */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() { return this._value; }\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() { return this._bufferValue; }\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        const scale = this.value / 100;\n        return { transform: `scale3d(${scale}, 1, 1)` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n            const scale = this.bufferValue / 100;\n            return { transform: `scale3d(${scale}, 1, 1)` };\n        }\n        return null;\n    }\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular((() => {\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                fromEvent(element, 'transitionend')\n                    .pipe(filter(((e) => e.target === element)))\n                    .subscribe(() => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n                    }\n                });\n        }));\n    }\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 4, consts: [[\"aria-hidden\", \"true\"], [\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(1, \"svg\", 1)(2, \"defs\")(3, \"pattern\", 2);\n        ɵngcc0.ɵɵelement(4, \"circle\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelement(5, \"rect\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(6, \"div\", 5)(7, \"div\", 6, 7)(9, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    // set tab index to -1 so screen readers will read the aria-label\n                    // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                    'tabindex': '-1',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div aria-hidden=\\\"true\\\">\\n  <svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n    <defs>\\n      <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n        <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n      </pattern>\\n    </defs>\\n    <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n  </svg>\\n  <!--\\n    The background div is named as such because it appears below the other divs and is not sized based\\n    on values.\\n  -->\\n  <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n  <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n  <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵfac = function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); };\nMatProgressBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}