{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ReplaySubject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport var LazyLoadScriptService = /*#__PURE__*/function () {\n  function LazyLoadScriptService(document) {\n    _classCallCheck(this, LazyLoadScriptService);\n\n    this.document = document;\n    this.loadedLibraries = {};\n  }\n\n  _createClass(LazyLoadScriptService, [{\n    key: \"loadScript\",\n    value: function loadScript(url) {\n      var _this = this;\n\n      if (this.loadedLibraries[url]) {\n        return this.loadedLibraries[url].asObservable();\n      }\n\n      this.loadedLibraries[url] = new ReplaySubject();\n      var script = this.document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n\n      script.onload = function () {\n        _this.loadedLibraries[url].next();\n\n        _this.loadedLibraries[url].complete();\n      };\n\n      this.document.body.appendChild(script);\n      return this.loadedLibraries[url].asObservable();\n    }\n  }]);\n\n  return LazyLoadScriptService;\n}();\n\nLazyLoadScriptService.ɵfac = function LazyLoadScriptService_Factory(t) {\n  return new (t || LazyLoadScriptService)(i0.ɵɵinject(DOCUMENT));\n};\n\nLazyLoadScriptService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LazyLoadScriptService,\n  factory: LazyLoadScriptService.ɵfac\n});","map":null,"metadata":{},"sourceType":"module"}