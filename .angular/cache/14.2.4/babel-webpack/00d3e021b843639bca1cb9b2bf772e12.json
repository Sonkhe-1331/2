{"ast":null,"code":"import _toConsumableArray from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _inherits from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Attribute, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\nvar _c0 = [\"underline\"];\nvar _c1 = [\"connectionContainer\"];\nvar _c2 = [\"inputContainer\"];\nvar _c3 = [\"label\"];\n\nfunction MatFormField_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15)(7, \"div\", 16)(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction MatFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n  }\n}\n\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction MatFormField_label_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.updateOutlineGap();\n    });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n  }\n}\n\nfunction MatFormField_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction MatFormField_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n  }\n}\n\nfunction MatFormField_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n  }\n}\n\nfunction MatFormField_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n  }\n}\n\nfunction MatFormField_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n  }\n}\n\nvar _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nvar _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nvar nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nvar MAT_ERROR = /*#__PURE__*/new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\n\nvar MatError = /*#__PURE__*/(function () {\n  var MatError = /*#__PURE__*/_createClass(function MatError(ariaLive, elementRef) {\n    _classCallCheck(this, MatError);\n\n    this.id = \"mat-error-\".concat(nextUniqueId$2++); // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n    // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n\n    if (!ariaLive) {\n      elementRef.nativeElement.setAttribute('aria-live', 'polite');\n    }\n  });\n\n  MatError.ɵfac = function MatError_Factory(t) {\n    return new (t || MatError)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatError.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatError,\n    selectors: [[\"mat-error\"]],\n    hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"],\n    hostVars: 1,\n    hostBindings: function MatError_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_ERROR,\n      useExisting: MatError\n    }])]\n  });\n  return MatError;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\n\n\nvar matFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: /*#__PURE__*/trigger('transitionMessages', [\n  /*#__PURE__*/\n  // TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), /*#__PURE__*/transition('void => enter', [/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'translateY(-5px)'\n  }), /*#__PURE__*/animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\n\nvar MatFormFieldControl = /*#__PURE__*/(function () {\n  var MatFormFieldControl = /*#__PURE__*/_createClass(function MatFormFieldControl() {\n    _classCallCheck(this, MatFormFieldControl);\n  });\n\n  MatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) {\n    return new (t || MatFormFieldControl)();\n  };\n\n  MatFormFieldControl.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatFormFieldControl\n  });\n  return MatFormFieldControl;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\n\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\n\n\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(\"A hint was already declared for 'align=\\\"\".concat(align, \"\\\"'.\"));\n}\n/** @docs-private */\n\n\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\n\nvar _MAT_HINT = /*#__PURE__*/new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\n\n\nvar MatHint = /*#__PURE__*/(function () {\n  var MatHint = /*#__PURE__*/_createClass(function MatHint() {\n    _classCallCheck(this, MatHint);\n\n    /** Whether to align the hint label at the start or end of the line. */\n    this.align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n\n    this.id = \"mat-hint-\".concat(nextUniqueId$1++);\n  });\n\n  MatHint.ɵfac = function MatHint_Factory(t) {\n    return new (t || MatHint)();\n  };\n\n  MatHint.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatHint,\n    selectors: [[\"mat-hint\"]],\n    hostAttrs: [1, \"mat-hint\"],\n    hostVars: 4,\n    hostBindings: function MatHint_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\",\n      id: \"id\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: _MAT_HINT,\n      useExisting: MatHint\n    }])]\n  });\n  return MatHint;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The floating label for a `mat-form-field`. */\n\n\nvar MatLabel = /*#__PURE__*/(function () {\n  var MatLabel = /*#__PURE__*/_createClass(function MatLabel() {\n    _classCallCheck(this, MatLabel);\n  });\n\n  MatLabel.ɵfac = function MatLabel_Factory(t) {\n    return new (t || MatLabel)();\n  };\n\n  MatLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatLabel,\n    selectors: [[\"mat-label\"]]\n  });\n  return MatLabel;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n\n\nvar MatPlaceholder = /*#__PURE__*/(function () {\n  var MatPlaceholder = /*#__PURE__*/_createClass(function MatPlaceholder() {\n    _classCallCheck(this, MatPlaceholder);\n  });\n\n  MatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) {\n    return new (t || MatPlaceholder)();\n  };\n\n  MatPlaceholder.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatPlaceholder,\n    selectors: [[\"mat-placeholder\"]]\n  });\n  return MatPlaceholder;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_PREFIX = /*#__PURE__*/new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\n\nvar MatPrefix = /*#__PURE__*/(function () {\n  var MatPrefix = /*#__PURE__*/_createClass(function MatPrefix() {\n    _classCallCheck(this, MatPrefix);\n  });\n\n  MatPrefix.ɵfac = function MatPrefix_Factory(t) {\n    return new (t || MatPrefix)();\n  };\n\n  MatPrefix.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatPrefix,\n    selectors: [[\"\", \"matPrefix\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_PREFIX,\n      useExisting: MatPrefix\n    }])]\n  });\n  return MatPrefix;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_SUFFIX = /*#__PURE__*/new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\n\nvar MatSuffix = /*#__PURE__*/(function () {\n  var MatSuffix = /*#__PURE__*/_createClass(function MatSuffix() {\n    _classCallCheck(this, MatSuffix);\n  });\n\n  MatSuffix.ɵfac = function MatSuffix_Factory(t) {\n    return new (t || MatSuffix)();\n  };\n\n  MatSuffix.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatSuffix,\n    selectors: [[\"\", \"matSuffix\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_SUFFIX,\n      useExisting: MatSuffix\n    }])]\n  });\n  return MatSuffix;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar nextUniqueId = 0;\nvar floatingLabelScale = 0.75;\nvar outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\n\nvar _MatFormFieldBase = /*#__PURE__*/mixinColor( /*#__PURE__*/function () {\n  function _class(_elementRef) {\n    _classCallCheck(this, _class);\n\n    this._elementRef = _elementRef;\n  }\n\n  return _createClass(_class);\n}(), 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\n\n\nvar MAT_FORM_FIELD_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\n\nvar MAT_FORM_FIELD = /*#__PURE__*/new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\n\nvar MatFormField = /*#__PURE__*/(function () {\n  var MatFormField = /*#__PURE__*/function (_MatFormFieldBase2) {\n    _inherits(MatFormField, _MatFormFieldBase2);\n\n    var _super = _createSuper(MatFormField);\n\n    function MatFormField(elementRef, _changeDetectorRef,\n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n      var _this;\n\n      _classCallCheck(this, MatFormField);\n\n      _this = _super.call(this, elementRef);\n      _this._changeDetectorRef = _changeDetectorRef;\n      _this._dir = _dir;\n      _this._defaults = _defaults;\n      _this._platform = _platform;\n      _this._ngZone = _ngZone;\n      /**\n       * Whether the outline gap needs to be calculated\n       * immediately on the next change detection run.\n       */\n\n      _this._outlineGapCalculationNeededImmediately = false;\n      /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n\n      _this._outlineGapCalculationNeededOnStable = false;\n      _this._destroyed = new Subject();\n      /** Override for the logic that disables the label animation in certain cases. */\n\n      _this._showAlwaysAnimate = false;\n      /** State of the mat-hint and mat-error animations. */\n\n      _this._subscriptAnimationState = '';\n      _this._hintLabel = ''; // Unique id for the hint label.\n\n      _this._hintLabelId = \"mat-hint-\".concat(nextUniqueId++); // Unique id for the label element.\n\n      _this._labelId = \"mat-form-field-label-\".concat(nextUniqueId++);\n      _this.floatLabel = _this._getDefaultFloatLabelState();\n      _this._animationsEnabled = _animationMode !== 'NoopAnimations'; // Set the default through here so we invoke the setter on the first run.\n\n      _this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n      _this._hideRequiredMarker = _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n      return _this;\n    }\n    /** The form-field appearance style. */\n\n\n    _createClass(MatFormField, [{\n      key: \"appearance\",\n      get: function get() {\n        return this._appearance;\n      },\n      set: function set(value) {\n        var oldValue = this._appearance;\n        this._appearance = value || this._defaults && this._defaults.appearance || 'legacy';\n\n        if (this._appearance === 'outline' && oldValue !== value) {\n          this._outlineGapCalculationNeededOnStable = true;\n        }\n      }\n      /** Whether the required marker should be hidden. */\n\n    }, {\n      key: \"hideRequiredMarker\",\n      get: function get() {\n        return this._hideRequiredMarker;\n      },\n      set: function set(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n      }\n      /** Whether the floating label should always float or not. */\n\n    }, {\n      key: \"_shouldAlwaysFloat\",\n      value: function _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n      }\n      /** Whether the label can float or not. */\n\n    }, {\n      key: \"_canLabelFloat\",\n      value: function _canLabelFloat() {\n        return this.floatLabel !== 'never';\n      }\n      /** Text for the form field hint. */\n\n    }, {\n      key: \"hintLabel\",\n      get: function get() {\n        return this._hintLabel;\n      },\n      set: function set(value) {\n        this._hintLabel = value;\n\n        this._processHints();\n      }\n      /**\n       * Whether the label should always float, never float or float as the user types.\n       *\n       * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n       * way to make the floating label emulate the behavior of a standard input placeholder. However\n       * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n       * appearances the `never` option has been disabled in favor of just using the placeholder.\n       */\n\n    }, {\n      key: \"floatLabel\",\n      get: function get() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n      },\n      set: function set(value) {\n        if (value !== this._floatLabel) {\n          this._floatLabel = value || this._getDefaultFloatLabelState();\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }, {\n      key: \"_control\",\n      get: function get() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n      },\n      set: function set(value) {\n        this._explicitFormFieldControl = value;\n      }\n      /**\n       * Gets the id of the label element. If no label is present, returns `null`.\n       */\n\n    }, {\n      key: \"getLabelId\",\n      value: function getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n      }\n      /**\n       * Gets an ElementRef for the element that a overlay attached to the form-field should be\n       * positioned relative to.\n       */\n\n    }, {\n      key: \"getConnectedOverlayOrigin\",\n      value: function getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this2 = this;\n\n        this._validateControlChild();\n\n        var control = this._control;\n\n        if (control.controlType) {\n          this._elementRef.nativeElement.classList.add(\"mat-form-field-type-\".concat(control.controlType));\n        } // Subscribe to changes in the child control state in order to update the form field UI.\n\n\n        control.stateChanges.pipe(startWith(null)).subscribe(function () {\n          _this2._validatePlaceholders();\n\n          _this2._syncDescribedByIds();\n\n          _this2._changeDetectorRef.markForCheck();\n        }); // Run change detection if the value changes.\n\n        if (control.ngControl && control.ngControl.valueChanges) {\n          control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(function () {\n            return _this2._changeDetectorRef.markForCheck();\n          });\n        } // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n\n\n        this._ngZone.runOutsideAngular(function () {\n          _this2._ngZone.onStable.pipe(takeUntil(_this2._destroyed)).subscribe(function () {\n            if (_this2._outlineGapCalculationNeededOnStable) {\n              _this2.updateOutlineGap();\n            }\n          });\n        }); // Run change detection and update the outline if the suffix or prefix changes.\n\n\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(function () {\n          _this2._outlineGapCalculationNeededOnStable = true;\n\n          _this2._changeDetectorRef.markForCheck();\n        }); // Re-validate when the number of hints changes.\n\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n          _this2._processHints();\n\n          _this2._changeDetectorRef.markForCheck();\n        }); // Update the aria-described by when the number of errors changes.\n\n\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n          _this2._syncDescribedByIds();\n\n          _this2._changeDetectorRef.markForCheck();\n        });\n\n        if (this._dir) {\n          this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(function () {\n            if (typeof requestAnimationFrame === 'function') {\n              _this2._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () {\n                  return _this2.updateOutlineGap();\n                });\n              });\n            } else {\n              _this2.updateOutlineGap();\n            }\n          });\n        }\n      }\n    }, {\n      key: \"ngAfterContentChecked\",\n      value: function ngAfterContentChecked() {\n        this._validateControlChild();\n\n        if (this._outlineGapCalculationNeededImmediately) {\n          this.updateOutlineGap();\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n\n        this._changeDetectorRef.detectChanges();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyed.next();\n\n        this._destroyed.complete();\n      }\n      /** Determines whether a class from the NgControl should be forwarded to the host element. */\n\n    }, {\n      key: \"_shouldForward\",\n      value: function _shouldForward(prop) {\n        var ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n      }\n    }, {\n      key: \"_hasPlaceholder\",\n      value: function _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n      }\n    }, {\n      key: \"_hasLabel\",\n      value: function _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n      }\n    }, {\n      key: \"_shouldLabelFloat\",\n      value: function _shouldLabelFloat() {\n        return this._canLabelFloat() && (this._control && this._control.shouldLabelFloat || this._shouldAlwaysFloat());\n      }\n    }, {\n      key: \"_hideControlPlaceholder\",\n      value: function _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();\n      }\n    }, {\n      key: \"_hasFloatingLabel\",\n      value: function _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n      }\n      /** Determines whether to display hints or errors. */\n\n    }, {\n      key: \"_getDisplayedMessages\",\n      value: function _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n      }\n      /** Animates the placeholder up and locks it in position. */\n\n    }, {\n      key: \"_animateAndLockLabel\",\n      value: function _animateAndLockLabel() {\n        var _this3 = this;\n\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n          // If animations are disabled, we shouldn't go in here,\n          // because the `transitionend` will never fire.\n          if (this._animationsEnabled && this._label) {\n            this._showAlwaysAnimate = true;\n            fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\n              _this3._showAlwaysAnimate = false;\n            });\n          }\n\n          this.floatLabel = 'always';\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n      /**\n       * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n       * or child element with the `mat-placeholder` directive).\n       */\n\n    }, {\n      key: \"_validatePlaceholders\",\n      value: function _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getMatFormFieldPlaceholderConflictError();\n        }\n      }\n      /** Does any extra processing that is required when handling the hints. */\n\n    }, {\n      key: \"_processHints\",\n      value: function _processHints() {\n        this._validateHints();\n\n        this._syncDescribedByIds();\n      }\n      /**\n       * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n       * attribute being considered as `align=\"start\"`.\n       */\n\n    }, {\n      key: \"_validateHints\",\n      value: function _validateHints() {\n        var _this4 = this;\n\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          var startHint;\n          var endHint;\n\n          this._hintChildren.forEach(function (hint) {\n            if (hint.align === 'start') {\n              if (startHint || _this4.hintLabel) {\n                throw getMatFormFieldDuplicatedHintError('start');\n              }\n\n              startHint = hint;\n            } else if (hint.align === 'end') {\n              if (endHint) {\n                throw getMatFormFieldDuplicatedHintError('end');\n              }\n\n              endHint = hint;\n            }\n          });\n        }\n      }\n      /** Gets the default float label state. */\n\n    }, {\n      key: \"_getDefaultFloatLabelState\",\n      value: function _getDefaultFloatLabelState() {\n        return this._defaults && this._defaults.floatLabel || 'auto';\n      }\n      /**\n       * Sets the list of element IDs that describe the child control. This allows the control to update\n       * its `aria-describedby` attribute accordingly.\n       */\n\n    }, {\n      key: \"_syncDescribedByIds\",\n      value: function _syncDescribedByIds() {\n        if (this._control) {\n          var ids = []; // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n\n          if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n            ids.push.apply(ids, _toConsumableArray(this._control.userAriaDescribedBy.split(' ')));\n          }\n\n          if (this._getDisplayedMessages() === 'hint') {\n            var startHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n              return hint.align === 'start';\n            }) : null;\n            var endHint = this._hintChildren ? this._hintChildren.find(function (hint) {\n              return hint.align === 'end';\n            }) : null;\n\n            if (startHint) {\n              ids.push(startHint.id);\n            } else if (this._hintLabel) {\n              ids.push(this._hintLabelId);\n            }\n\n            if (endHint) {\n              ids.push(endHint.id);\n            }\n          } else if (this._errorChildren) {\n            ids.push.apply(ids, _toConsumableArray(this._errorChildren.map(function (error) {\n              return error.id;\n            })));\n          }\n\n          this._control.setDescribedByIds(ids);\n        }\n      }\n      /** Throws an error if the form field's control is missing. */\n\n    }, {\n      key: \"_validateControlChild\",\n      value: function _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getMatFormFieldMissingControlError();\n        }\n      }\n      /**\n       * Updates the width and position of the gap in the outline. Only relevant for the outline\n       * appearance.\n       */\n\n    }, {\n      key: \"updateOutlineGap\",\n      value: function updateOutlineGap() {\n        var labelEl = this._label ? this._label.nativeElement : null;\n\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n          return;\n        }\n\n        if (!this._platform.isBrowser) {\n          // getBoundingClientRect isn't available on the server.\n          return;\n        } // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n\n\n        if (!this._isAttachedToDOM()) {\n          this._outlineGapCalculationNeededImmediately = true;\n          return;\n        }\n\n        var startWidth = 0;\n        var gapWidth = 0;\n        var container = this._connectionContainerRef.nativeElement;\n        var startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        var gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n        if (this._label && this._label.nativeElement.children.length) {\n          var containerRect = container.getBoundingClientRect(); // If the container's width and height are zero, it means that the element is\n          // invisible and we can't calculate the outline gap. Mark the element as needing\n          // to be checked the next time the zone stabilizes. We can't do this immediately\n          // on the next change detection, because even if the element becomes visible,\n          // the `ClientRect` won't be reclaculated immediately. We reset the\n          // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n\n          if (containerRect.width === 0 && containerRect.height === 0) {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._outlineGapCalculationNeededImmediately = false;\n            return;\n          }\n\n          var containerStart = this._getStartEnd(containerRect);\n\n          var labelChildren = labelEl.children;\n\n          var labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n\n          var labelWidth = 0;\n\n          for (var i = 0; i < labelChildren.length; i++) {\n            labelWidth += labelChildren[i].offsetWidth;\n          }\n\n          startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n          gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n\n        for (var _i = 0; _i < startEls.length; _i++) {\n          startEls[_i].style.width = \"\".concat(startWidth, \"px\");\n        }\n\n        for (var _i2 = 0; _i2 < gapEls.length; _i2++) {\n          gapEls[_i2].style.width = \"\".concat(gapWidth, \"px\");\n        }\n\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = false;\n      }\n      /** Gets the start end of the rect considering the current directionality. */\n\n    }, {\n      key: \"_getStartEnd\",\n      value: function _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n      }\n      /** Checks whether the form field is attached to the DOM. */\n\n    }, {\n      key: \"_isAttachedToDOM\",\n      value: function _isAttachedToDOM() {\n        var element = this._elementRef.nativeElement;\n\n        if (element.getRootNode) {\n          var rootNode = element.getRootNode(); // If the element is inside the DOM the root node will be either the document\n          // or the closest shadow root, otherwise it'll be the element itself.\n\n          return rootNode && rootNode !== element;\n        } // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n\n\n        return document.documentElement.contains(element);\n      }\n    }]);\n\n    return MatFormField;\n  }(_MatFormFieldBase);\n\n  MatFormField.ɵfac = function MatFormField_Factory(t) {\n    return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatFormField.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatFormField,\n    selectors: [[\"mat-form-field\"]],\n    contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n      }\n    },\n    viewQuery: function MatFormField_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-form-field\"],\n    hostVars: 40,\n    hostBindings: function MatFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n      }\n    },\n    inputs: {\n      color: \"color\",\n      floatLabel: \"floatLabel\",\n      appearance: \"appearance\",\n      hideRequiredMarker: \"hideRequiredMarker\",\n      hintLabel: \"hintLabel\"\n    },\n    exportAs: [\"matFormField\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_FORM_FIELD,\n      useExisting: MatFormField\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 15,\n    vars: 8,\n    consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]],\n    template: function MatFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) {\n          return ctx._control.onContainerClick && ctx._control.onContainerClick($event);\n        });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc4.CdkObserveContent, ɵngcc3.NgSwitchCase],\n    styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [matFormFieldAnimations.transitionMessages]\n    },\n    changeDetection: 0\n  });\n  return MatFormField;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatFormFieldModule = /*#__PURE__*/(function () {\n  var MatFormFieldModule = /*#__PURE__*/_createClass(function MatFormFieldModule() {\n    _classCallCheck(this, MatFormFieldModule);\n  });\n\n  MatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) {\n    return new (t || MatFormFieldModule)();\n  };\n\n  MatFormFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatFormFieldModule\n  });\n  MatFormFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule]\n  });\n  return MatFormFieldModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, {\n    declarations: function declarations() {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, ObserversModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };","map":{"version":3,"names":["ObserversModule","CommonModule","InjectionToken","Directive","Attribute","ElementRef","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Inject","Optional","NgZone","ViewChild","ContentChild","ContentChildren","NgModule","mixinColor","MatCommonModule","Directionality","coerceBooleanProperty","Subject","merge","fromEvent","startWith","takeUntil","take","trigger","state","style","transition","animate","Platform","ANIMATION_MODULE_TYPE","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","MatFormField_div_4_Template","ɵɵprojection","MatFormField_label_9_ng_container_2_Template","ɵɵtext","ctx_r10","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","ɵɵgetCurrentView","ɵɵlistener","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ɵɵrestoreView","ctx_r13","updateOutlineGap","ɵɵtemplate","ctx_r4","ɵɵclassProp","empty","_shouldAlwaysFloat","color","ɵɵproperty","appearance","_labelId","_hasLabel","ɵɵattribute","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","elementRef","nativeElement","setAttribute","ɵfac","MatError_Factory","t","ɵɵinjectAttribute","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatError_HostBindings","inputs","features","ɵɵProvidersFeature","provide","useExisting","ngDevMode","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","_elementRef","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_labelOptions","_dir","_defaults","_platform","_ngZone","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","value","oldValue","_processHints","_floatLabel","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","control","controlType","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","runOutsideAngular","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","requestAnimationFrame","detectChanges","next","complete","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_label","_validateHints","startHint","endHint","forEach","hint","ids","userAriaDescribedBy","push","split","_getDisplayedMessages","find","map","error","setDescribedByIds","labelEl","children","textContent","trim","isBrowser","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","height","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","i","offsetWidth","Math","abs","rect","right","left","element","getRootNode","rootNode","document","documentElement","contains","MatFormField_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatFormField_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatFormField_Query","ɵɵviewQuery","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","exportAs","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","ɵɵprojectionDef","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","NgIf","NgSwitch","CdkObserveContent","NgSwitchCase","styles","encapsulation","data","animation","changeDetection","MatFormFieldModule","MatFormFieldModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"sources":["C:/Users/sonkh/2/node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js"],"sourcesContent":["import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Attribute, ElementRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15)(7, \"div\", 16)(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n    { type: ElementRef }\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    '[attr.id]': 'id',\n                    'aria-atomic': 'true'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-live']\n            }] }, { type: ɵngcc0.ElementRef }]; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 40, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc4.CdkObserveContent, ɵngcc3.NgSwitchCase], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}