{"ast":null,"code":"import _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nvar LayoutModule = /*#__PURE__*/(function () {\n  var LayoutModule = /*#__PURE__*/_createClass(function LayoutModule() {\n    _classCallCheck(this, LayoutModule);\n  });\n\n  LayoutModule.ɵfac = function LayoutModule_Factory(t) {\n    return new (t || LayoutModule)();\n  };\n\n  LayoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LayoutModule\n  });\n  LayoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return LayoutModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Global registry for all dynamically-created, injected media queries. */\n\n\nvar mediaQueriesForWebkitCompatibility = /*#__PURE__*/new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\n\nvar mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\n\nvar MediaMatcher = /*#__PURE__*/(function () {\n  var MediaMatcher = /*#__PURE__*/function () {\n    function MediaMatcher(_platform) {\n      _classCallCheck(this, MediaMatcher);\n\n      this._platform = _platform;\n      this._matchMedia = this._platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n\n\n    _createClass(MediaMatcher, [{\n      key: \"matchMedia\",\n      value: function matchMedia(query) {\n        if (this._platform.WEBKIT) {\n          createEmptyStyleRule(query);\n        }\n\n        return this._matchMedia(query);\n      }\n    }]);\n\n    return MediaMatcher;\n  }();\n\n  MediaMatcher.ɵfac = function MediaMatcher_Factory(t) {\n    return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n  };\n\n  MediaMatcher.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MediaMatcher_Factory() {\n      return new MediaMatcher(i0.ɵɵinject(i1.Platform));\n    },\n    token: MediaMatcher,\n    providedIn: \"root\"\n  });\n  return MediaMatcher;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\n\n\nfunction createEmptyStyleRule(query) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(\"@media \".concat(query, \" {.fx-query-test{ }}\"), 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\n\n\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: function addListener() {},\n    removeListener: function removeListener() {}\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Utility for checking the matching state of @media queries. */\n\n\nvar BreakpointObserver = /*#__PURE__*/(function () {\n  var BreakpointObserver = /*#__PURE__*/function () {\n    function BreakpointObserver(_mediaMatcher, _zone) {\n      _classCallCheck(this, BreakpointObserver);\n\n      this._mediaMatcher = _mediaMatcher;\n      this._zone = _zone;\n      /**  A map of all media queries currently being listened for. */\n\n      this._queries = new Map();\n      /** A subject for all other observables to takeUntil based on. */\n\n      this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n\n\n    _createClass(BreakpointObserver, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroySubject.next();\n\n        this._destroySubject.complete();\n      }\n      /**\n       * Whether one or more media queries match the current viewport size.\n       * @param value One or more media queries to check.\n       * @returns Whether any of the media queries match.\n       */\n\n    }, {\n      key: \"isMatched\",\n      value: function isMatched(value) {\n        var _this = this;\n\n        var queries = splitQueries(coerceArray(value));\n        return queries.some(function (mediaQuery) {\n          return _this._registerQuery(mediaQuery).mql.matches;\n        });\n      }\n      /**\n       * Gets an observable of results for the given queries that will emit new results for any changes\n       * in matching of the given queries.\n       * @param value One or more media queries to check.\n       * @returns A stream of matches for the given queries.\n       */\n\n    }, {\n      key: \"observe\",\n      value: function observe(value) {\n        var _this2 = this;\n\n        var queries = splitQueries(coerceArray(value));\n        var observables = queries.map(function (query) {\n          return _this2._registerQuery(query).observable;\n        });\n        var stateObservable = combineLatest(observables); // Emit the first state immediately, and then debounce the subsequent emissions.\n\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(function (breakpointStates) {\n          var response = {\n            matches: false,\n            breakpoints: {}\n          };\n          breakpointStates.forEach(function (_ref) {\n            var matches = _ref.matches,\n                query = _ref.query;\n            response.matches = response.matches || matches;\n            response.breakpoints[query] = matches;\n          });\n          return response;\n        }));\n      }\n      /** Registers a specific query to be listened for. */\n\n    }, {\n      key: \"_registerQuery\",\n      value: function _registerQuery(query) {\n        var _this3 = this;\n\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n          return this._queries.get(query);\n        }\n\n        var mql = this._mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.\n\n\n        var queryObservable = new Observable(function (observer) {\n          // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n          // back into the zone because matchMedia is only included in Zone.js by loading the\n          // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n          // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n          // patches it.\n          var handler = function handler(e) {\n            return _this3._zone.run(function () {\n              return observer.next(e);\n            });\n          };\n\n          mql.addListener(handler);\n          return function () {\n            mql.removeListener(handler);\n          };\n        }).pipe(startWith(mql), map(function (_ref2) {\n          var matches = _ref2.matches;\n          return {\n            query: query,\n            matches: matches\n          };\n        }), takeUntil(this._destroySubject)); // Add the MediaQueryList to the set of queries.\n\n        var output = {\n          observable: queryObservable,\n          mql: mql\n        };\n\n        this._queries.set(query, output);\n\n        return output;\n      }\n    }]);\n\n    return BreakpointObserver;\n  }();\n\n  BreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {\n    return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  BreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BreakpointObserver_Factory() {\n      return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n    },\n    token: BreakpointObserver,\n    providedIn: \"root\"\n  });\n  return BreakpointObserver;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(function (query) {\n    return query.split(',');\n  }).reduce(function (a1, a2) {\n    return a1.concat(a2);\n  }).map(function (query) {\n    return query.trim();\n  });\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n\n\nvar Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };","map":{"version":3,"names":["i0","NgModule","Injectable","NgZone","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","i1","Platform","ɵngcc0","ɵngcc1","LayoutModule","ɵfac","LayoutModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"sources":["C:/Users/sonkh/2/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵfac = function LayoutModule_Factory(t) { return new (t || LayoutModule)(); };\nLayoutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(i1.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}