{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each accordion. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nvar nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nvar CDK_ACCORDION = /*#__PURE__*/new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n\nvar CdkAccordion = /*#__PURE__*/(function () {\n  var CdkAccordion = /*#__PURE__*/function () {\n    function CdkAccordion() {\n      _classCallCheck(this, CdkAccordion);\n\n      /** Emits when the state of the accordion changes */\n      this._stateChanges = new Subject();\n      /** Stream that emits true/false when openAll/closeAll is triggered. */\n\n      this._openCloseAllActions = new Subject();\n      /** A readonly id value to use for unique selection coordination. */\n\n      this.id = \"cdk-accordion-\".concat(nextId$1++);\n      this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n\n\n    _createClass(CdkAccordion, [{\n      key: \"multi\",\n      get: function get() {\n        return this._multi;\n      },\n      set: function set(multi) {\n        this._multi = coerceBooleanProperty(multi);\n      }\n      /** Opens all enabled accordion items in an accordion where multi is enabled. */\n\n    }, {\n      key: \"openAll\",\n      value: function openAll() {\n        if (this._multi) {\n          this._openCloseAllActions.next(true);\n        }\n      }\n      /** Closes all enabled accordion items in an accordion where multi is enabled. */\n\n    }, {\n      key: \"closeAll\",\n      value: function closeAll() {\n        this._openCloseAllActions.next(false);\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._stateChanges.complete();\n\n        this._openCloseAllActions.complete();\n      }\n    }]);\n\n    return CdkAccordion;\n  }();\n\n  CdkAccordion.ɵfac = function CdkAccordion_Factory(t) {\n    return new (t || CdkAccordion)();\n  };\n\n  CdkAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CdkAccordion,\n    selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n    inputs: {\n      multi: \"multi\"\n    },\n    exportAs: [\"cdkAccordion\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CDK_ACCORDION,\n      useExisting: CdkAccordion\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return CdkAccordion;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each accordion item. */\n\n\nvar nextId = 0;\nvar ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n\nvar CdkAccordionItem = /*#__PURE__*/(function () {\n  var CdkAccordionItem = /*#__PURE__*/function () {\n    function CdkAccordionItem(accordion, _changeDetectorRef, _expansionDispatcher) {\n      var _this = this;\n\n      _classCallCheck(this, CdkAccordionItem);\n\n      this.accordion = accordion;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._expansionDispatcher = _expansionDispatcher;\n      /** Subscription to openAll/closeAll events. */\n\n      this._openCloseAllSubscription = Subscription.EMPTY;\n      /** Event emitted every time the AccordionItem is closed. */\n\n      this.closed = new EventEmitter();\n      /** Event emitted every time the AccordionItem is opened. */\n\n      this.opened = new EventEmitter();\n      /** Event emitted when the AccordionItem is destroyed. */\n\n      this.destroyed = new EventEmitter();\n      /**\n       * Emits whenever the expanded state of the accordion changes.\n       * Primarily used to facilitate two-way binding.\n       * @docs-private\n       */\n\n      this.expandedChange = new EventEmitter();\n      /** The unique AccordionItem id. */\n\n      this.id = \"cdk-accordion-child-\".concat(nextId++);\n      this._expanded = false;\n      this._disabled = false;\n      /** Unregister function for _expansionDispatcher. */\n\n      this._removeUniqueSelectionListener = function () {};\n\n      this._removeUniqueSelectionListener = _expansionDispatcher.listen(function (id, accordionId) {\n        if (_this.accordion && !_this.accordion.multi && _this.accordion.id === accordionId && _this.id !== id) {\n          _this.expanded = false;\n        }\n      }); // When an accordion item is hosted in an accordion, subscribe to open/close events.\n\n      if (this.accordion) {\n        this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n      }\n    }\n    /** Whether the AccordionItem is expanded. */\n\n\n    _createClass(CdkAccordionItem, [{\n      key: \"expanded\",\n      get: function get() {\n        return this._expanded;\n      },\n      set: function set(expanded) {\n        expanded = coerceBooleanProperty(expanded); // Only emit events and update the internal value if the value changes.\n\n        if (this._expanded !== expanded) {\n          this._expanded = expanded;\n          this.expandedChange.emit(expanded);\n\n          if (expanded) {\n            this.opened.emit();\n            /**\n             * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n             * the name value is the id of the accordion.\n             */\n\n            var accordionId = this.accordion ? this.accordion.id : this.id;\n\n            this._expansionDispatcher.notify(this.id, accordionId);\n          } else {\n            this.closed.emit();\n          } // Ensures that the animation will run when the value is set outside of an `@Input`.\n          // This includes cases like the open, close and toggle methods.\n\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n      /** Whether the AccordionItem is disabled. */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n      }\n      /** Emits an event for the accordion item being destroyed. */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n\n        this._removeUniqueSelectionListener();\n\n        this._openCloseAllSubscription.unsubscribe();\n      }\n      /** Toggles the expanded state of the accordion item. */\n\n    }, {\n      key: \"toggle\",\n      value: function toggle() {\n        if (!this.disabled) {\n          this.expanded = !this.expanded;\n        }\n      }\n      /** Sets the expanded state of the accordion item to false. */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        if (!this.disabled) {\n          this.expanded = false;\n        }\n      }\n      /** Sets the expanded state of the accordion item to true. */\n\n    }, {\n      key: \"open\",\n      value: function open() {\n        if (!this.disabled) {\n          this.expanded = true;\n        }\n      }\n    }, {\n      key: \"_subscribeToOpenCloseAllActions\",\n      value: function _subscribeToOpenCloseAllActions() {\n        var _this2 = this;\n\n        return this.accordion._openCloseAllActions.subscribe(function (expanded) {\n          // Only change expanded state if item is enabled\n          if (!_this2.disabled) {\n            _this2.expanded = expanded;\n          }\n        });\n      }\n    }]);\n\n    return CdkAccordionItem;\n  }();\n\n  CdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) {\n    return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher));\n  };\n\n  CdkAccordionItem.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CdkAccordionItem,\n    selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n    inputs: {\n      expanded: \"expanded\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      closed: \"closed\",\n      opened: \"opened\",\n      destroyed: \"destroyed\",\n      expandedChange: \"expandedChange\"\n    },\n    exportAs: [\"cdkAccordionItem\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([// Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n    // registering to the same accordion.\n    {\n      provide: CDK_ACCORDION,\n      useValue: ɵ0\n    }])]\n  });\n  return CdkAccordionItem;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CdkAccordionModule = /*#__PURE__*/(function () {\n  var CdkAccordionModule = /*#__PURE__*/_createClass(function CdkAccordionModule() {\n    _classCallCheck(this, CdkAccordionModule);\n  });\n\n  CdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) {\n    return new (t || CdkAccordionModule)();\n  };\n\n  CdkAccordionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CdkAccordionModule\n  });\n  CdkAccordionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return CdkAccordionModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, {\n    declarations: [CdkAccordion, CdkAccordionItem],\n    exports: [CdkAccordion, CdkAccordionItem]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };","map":{"version":3,"names":["InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","ChangeDetectorRef","Output","NgModule","UniqueSelectionDispatcher","coerceBooleanProperty","Subject","Subscription","ɵngcc0","ɵngcc1","nextId$1","CDK_ACCORDION","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","multi","next","changes","complete","ɵfac","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","ngDevMode","nextId","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","subscribe","CdkAccordionItem_Factory","ɵɵdirectiveInject","outputs","useValue","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵangular_material_src_cdk_accordion_accordion_a"],"sources":["C:/Users/sonkh/2/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js"],"sourcesContent":["import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}