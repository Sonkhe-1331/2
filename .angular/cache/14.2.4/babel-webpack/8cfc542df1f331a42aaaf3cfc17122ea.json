{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _toConsumableArray from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token for the MatInkBar's Positioner. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nvar _c3 = [\"tabBodyWrapper\"];\nvar _c4 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      var restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      var tab_r4 = restoredCtx.$implicit;\n      var i_r5 = restoredCtx.index;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r11._handleClick(tab_r4, _r0, i_r5);\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      var restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      var i_r5 = restoredCtx.index;\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13._tabFocusChanged($event, i_r5);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ctx.$implicit;\n    var i_r5 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      var ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18._setTabBodyWrapperHeight($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r14 = ctx.$implicit;\n    var i_r15 = ctx.index;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n  }\n}\n\nvar _c5 = [\"tabListContainer\"];\nvar _c6 = [\"tabList\"];\nvar _c7 = [\"nextPaginator\"];\nvar _c8 = [\"previousPaginator\"];\nvar _c9 = [\"mat-tab-nav-bar\", \"\"];\n\nvar _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  var method = function method(element) {\n    return {\n      left: element ? (element.offsetLeft || 0) + 'px' : '0',\n      width: element ? (element.offsetWidth || 0) + 'px' : '0'\n    };\n  };\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n\n\nvar MatInkBar = /*#__PURE__*/(function () {\n  var MatInkBar = /*#__PURE__*/function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n      _classCallCheck(this, MatInkBar);\n\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._inkBarPositioner = _inkBarPositioner;\n      this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n\n\n    _createClass(MatInkBar, [{\n      key: \"alignToElement\",\n      value: function alignToElement(element) {\n        var _this = this;\n\n        this.show();\n\n        if (typeof requestAnimationFrame !== 'undefined') {\n          this._ngZone.runOutsideAngular(function () {\n            requestAnimationFrame(function () {\n              return _this._setStyles(element);\n            });\n          });\n        } else {\n          this._setStyles(element);\n        }\n      }\n      /** Shows the ink bar. */\n\n    }, {\n      key: \"show\",\n      value: function show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n      }\n      /** Hides the ink bar. */\n\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n      }\n      /**\n       * Sets the proper styles to the ink bar element.\n       * @param element\n       */\n\n    }, {\n      key: \"_setStyles\",\n      value: function _setStyles(element) {\n        var positions = this._inkBarPositioner(element);\n\n        var inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n      }\n    }]);\n\n    return MatInkBar;\n  }();\n\n  MatInkBar.ɵfac = function MatInkBar_Factory(t) {\n    return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatInkBar.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatInkBar,\n    selectors: [[\"mat-ink-bar\"]],\n    hostAttrs: [1, \"mat-ink-bar\"],\n    hostVars: 2,\n    hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    }\n  });\n  return MatInkBar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\nvar MatTabContent = /*#__PURE__*/(function () {\n  var MatTabContent = /*#__PURE__*/_createClass(function MatTabContent(\n  /** Content for the tab. */\n  template) {\n    _classCallCheck(this, MatTabContent);\n\n    this.template = template;\n  });\n\n  MatTabContent.ɵfac = function MatTabContent_Factory(t) {\n    return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  MatTabContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabContent,\n    selectors: [[\"\", \"matTabContent\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_CONTENT,\n      useExisting: MatTabContent\n    }])]\n  });\n  return MatTabContent;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nvar MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\n\nvar MatTabLabel = /*#__PURE__*/(function () {\n  var MatTabLabel = /*#__PURE__*/function (_CdkPortal) {\n    _inherits(MatTabLabel, _CdkPortal);\n\n    var _super = _createSuper(MatTabLabel);\n\n    function MatTabLabel() {\n      _classCallCheck(this, MatTabLabel);\n\n      return _super.apply(this, arguments);\n    }\n\n    return _createClass(MatTabLabel);\n  }(CdkPortal);\n\n  MatTabLabel.ɵfac = /*@__PURE__*/function () {\n    var ɵMatTabLabel_BaseFactory;\n    return function MatTabLabel_Factory(t) {\n      return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel);\n    };\n  }();\n\n  MatTabLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLabel,\n    selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_LABEL,\n      useExisting: MatTabLabel\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLabel;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n\n/** @docs-private */\n\n\nvar _MatTabBase = /*#__PURE__*/mixinDisabled( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  return _createClass(_class);\n}());\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\n\n\nvar MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nvar MatTab = /*#__PURE__*/(function () {\n  var MatTab = /*#__PURE__*/function (_MatTabBase2) {\n    _inherits(MatTab, _MatTabBase2);\n\n    var _super2 = _createSuper(MatTab);\n\n    function MatTab(_viewContainerRef, _closestTabGroup) {\n      var _this2;\n\n      _classCallCheck(this, MatTab);\n\n      _this2 = _super2.call(this);\n      _this2._viewContainerRef = _viewContainerRef;\n      _this2._closestTabGroup = _closestTabGroup;\n      /** Plain text label for the tab, used when there is no template label. */\n\n      _this2.textLabel = '';\n      /** Portal that will be the hosted content of the tab */\n\n      _this2._contentPortal = null;\n      /** Emits whenever the internal state of the tab changes. */\n\n      _this2._stateChanges = new Subject();\n      /**\n       * The relatively indexed position where 0 represents the center, negative is left, and positive\n       * represents the right.\n       */\n\n      _this2.position = null;\n      /**\n       * The initial relatively index origin of the tab if it was created and selected after there\n       * was already a selected tab. Provides context of what position the tab should originate from.\n       */\n\n      _this2.origin = null;\n      /**\n       * Whether the tab is currently active.\n       */\n\n      _this2.isActive = false;\n      return _this2;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n\n\n    _createClass(MatTab, [{\n      key: \"templateLabel\",\n      get: function get() {\n        return this._templateLabel;\n      },\n      set: function set(value) {\n        this._setTemplateLabelInput(value);\n      }\n      /** @docs-private */\n\n    }, {\n      key: \"content\",\n      get: function get() {\n        return this._contentPortal;\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n          this._stateChanges.next();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._stateChanges.complete();\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n      }\n      /**\n       * This has been extracted to a util because of TS 4 and VE.\n       * View Engine doesn't support property rename inheritance.\n       * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n       * @docs-private\n       */\n\n    }, {\n      key: \"_setTemplateLabelInput\",\n      value: function _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n          this._templateLabel = value;\n        }\n      }\n    }]);\n\n    return MatTab;\n  }(_MatTabBase);\n\n  MatTab.ɵfac = function MatTab_Factory(t) {\n    return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n  };\n\n  MatTab.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTab,\n    selectors: [[\"mat-tab\"]],\n    contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n      }\n    },\n    viewQuery: function MatTab_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      textLabel: [\"label\", \"textLabel\"],\n      ariaLabel: [\"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"]\n    },\n    exportAs: [\"matTab\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatTab_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2\n  });\n  return MatTab;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\n\n\nvar matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: /*#__PURE__*/trigger('translateTab', [\n  /*#__PURE__*/\n  // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', /*#__PURE__*/style({\n    transform: 'none'\n  })),\n  /*#__PURE__*/\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', /*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), /*#__PURE__*/state('right', /*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), /*#__PURE__*/transition('* => left, * => right, left => center, right => center', /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), /*#__PURE__*/transition('void => left-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), /*#__PURE__*/transition('void => right-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n\nvar MatTabBodyPortal = /*#__PURE__*/(function () {\n  var MatTabBodyPortal = /*#__PURE__*/function (_CdkPortalOutlet) {\n    _inherits(MatTabBodyPortal, _CdkPortalOutlet);\n\n    var _super3 = _createSuper(MatTabBodyPortal);\n\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host, _document) {\n      var _this3;\n\n      _classCallCheck(this, MatTabBodyPortal);\n\n      _this3 = _super3.call(this, componentFactoryResolver, viewContainerRef, _document);\n      _this3._host = _host;\n      /** Subscription to events for when the tab body begins centering. */\n\n      _this3._centeringSub = Subscription.EMPTY;\n      /** Subscription to events for when the tab body finishes leaving from center position. */\n\n      _this3._leavingSub = Subscription.EMPTY;\n      return _this3;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n\n\n    _createClass(MatTabBodyPortal, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this4 = this;\n\n        _get(_getPrototypeOf(MatTabBodyPortal.prototype), \"ngOnInit\", this).call(this);\n\n        this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(function (isCentering) {\n          if (isCentering && !_this4.hasAttached()) {\n            _this4.attach(_this4._host._content);\n          }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n          _this4.detach();\n        });\n      }\n      /** Clean up centering subscription. */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        _get(_getPrototypeOf(MatTabBodyPortal.prototype), \"ngOnDestroy\", this).call(this);\n\n        this._centeringSub.unsubscribe();\n\n        this._leavingSub.unsubscribe();\n      }\n    }]);\n\n    return MatTabBodyPortal;\n  }(CdkPortalOutlet);\n\n  MatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n    return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n      return MatTabBody;\n    })), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  MatTabBodyPortal.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabBodyPortal,\n    selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabBodyPortal;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n\n\nvar _MatTabBodyBase = /*#__PURE__*/(function () {\n  var _MatTabBodyBase = /*#__PURE__*/function () {\n    function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n      var _this5 = this;\n\n      _classCallCheck(this, _MatTabBodyBase);\n\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      /** Subscription to the directionality change observable. */\n\n      this._dirChangeSubscription = Subscription.EMPTY;\n      /** Emits when an animation on the tab is complete. */\n\n      this._translateTabComplete = new Subject();\n      /** Event emitted when the tab begins to animate towards the center as the active tab. */\n\n      this._onCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n\n      this._beforeCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n\n      this._afterLeavingCenter = new EventEmitter();\n      /** Event emitted when the tab completes its animation towards the center. */\n\n      this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n      // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n      /** Duration for the tab's animation. */\n\n      this.animationDuration = '500ms';\n\n      if (_dir) {\n        this._dirChangeSubscription = _dir.change.subscribe(function (dir) {\n          _this5._computePositionAnimationState(dir);\n\n          changeDetectorRef.markForCheck();\n        });\n      } // Ensure that we get unique animation events, because the `.done` callback can get\n      // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n      this._translateTabComplete.pipe(distinctUntilChanged(function (x, y) {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      })).subscribe(function (event) {\n        // If the transition to the center is complete, emit an event.\n        if (_this5._isCenterPosition(event.toState) && _this5._isCenterPosition(_this5._position)) {\n          _this5._onCentered.emit();\n        }\n\n        if (_this5._isCenterPosition(event.fromState) && !_this5._isCenterPosition(_this5._position)) {\n          _this5._afterLeavingCenter.emit();\n        }\n      });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n\n\n    _createClass(_MatTabBodyBase, [{\n      key: \"position\",\n      set: function set(position) {\n        this._positionIndex = position;\n\n        this._computePositionAnimationState();\n      }\n      /**\n       * After initialized, check if the content is centered and has an origin. If so, set the\n       * special position states that transition the tab from the left or right before centering.\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n          this._position = this._computePositionFromOrigin(this.origin);\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n\n        this._translateTabComplete.complete();\n      }\n    }, {\n      key: \"_onTranslateTabStarted\",\n      value: function _onTranslateTabStarted(event) {\n        var isCentering = this._isCenterPosition(event.toState);\n\n        this._beforeCentering.emit(isCentering);\n\n        if (isCentering) {\n          this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n      }\n      /** The text direction of the containing app. */\n\n    }, {\n      key: \"_getLayoutDirection\",\n      value: function _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n      }\n      /** Whether the provided position state is considered center, regardless of origin. */\n\n    }, {\n      key: \"_isCenterPosition\",\n      value: function _isCenterPosition(position) {\n        return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n      }\n      /** Computes the position state that will be used for the tab-body animation trigger. */\n\n    }, {\n      key: \"_computePositionAnimationState\",\n      value: function _computePositionAnimationState() {\n        var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._getLayoutDirection();\n\n        if (this._positionIndex < 0) {\n          this._position = dir == 'ltr' ? 'left' : 'right';\n        } else if (this._positionIndex > 0) {\n          this._position = dir == 'ltr' ? 'right' : 'left';\n        } else {\n          this._position = 'center';\n        }\n      }\n      /**\n       * Computes the position state based on the specified origin position. This is used if the\n       * tab is becoming visible immediately after creation.\n       */\n\n    }, {\n      key: \"_computePositionFromOrigin\",\n      value: function _computePositionFromOrigin(origin) {\n        var dir = this._getLayoutDirection();\n\n        if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n          return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n      }\n    }]);\n\n    return _MatTabBodyBase;\n  }();\n\n  _MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n    return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  _MatTabBodyBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabBodyBase,\n    inputs: {\n      animationDuration: \"animationDuration\",\n      position: \"position\",\n      _content: [\"content\", \"_content\"],\n      origin: \"origin\"\n    },\n    outputs: {\n      _onCentering: \"_onCentering\",\n      _beforeCentering: \"_beforeCentering\",\n      _afterLeavingCenter: \"_afterLeavingCenter\",\n      _onCentered: \"_onCentered\"\n    }\n  });\n  return _MatTabBodyBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n\n\nvar MatTabBody = /*#__PURE__*/(function () {\n  var MatTabBody = /*#__PURE__*/function (_MatTabBodyBase2) {\n    _inherits(MatTabBody, _MatTabBodyBase2);\n\n    var _super4 = _createSuper(MatTabBody);\n\n    function MatTabBody(elementRef, dir, changeDetectorRef) {\n      _classCallCheck(this, MatTabBody);\n\n      return _super4.call(this, elementRef, dir, changeDetectorRef);\n    }\n\n    return _createClass(MatTabBody);\n  }(_MatTabBodyBase);\n\n  MatTabBody.ɵfac = function MatTabBody_Factory(t) {\n    return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  MatTabBody.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabBody,\n    selectors: [[\"mat-tab-body\"]],\n    viewQuery: function MatTabBody_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-body\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n    template: function MatTabBody_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n          return ctx._onTranslateTabStarted($event);\n        })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n          return ctx._translateTabComplete.next($event);\n        });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n      }\n    },\n    directives: [MatTabBodyPortal],\n    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [matTabsAnimations.translateTab]\n    }\n  });\n  return MatTabBody;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to provide the default options the tabs module. */\n\n\nvar MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID's for each tab component */\n\nvar nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\n\nvar MatTabChangeEvent = /*#__PURE__*/_createClass(function MatTabChangeEvent() {\n  _classCallCheck(this, MatTabChangeEvent);\n}); // Boilerplate for applying mixins to MatTabGroup.\n\n/** @docs-private */\n\n\nvar _MatTabGroupMixinBase = /*#__PURE__*/mixinColor( /*#__PURE__*/mixinDisableRipple( /*#__PURE__*/function () {\n  function _class2(_elementRef) {\n    _classCallCheck(this, _class2);\n\n    this._elementRef = _elementRef;\n  }\n\n  return _createClass(_class2);\n}()), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n\n\nvar _MatTabGroupBase = /*#__PURE__*/(function () {\n  var _MatTabGroupBase = /*#__PURE__*/function (_MatTabGroupMixinBase2) {\n    _inherits(_MatTabGroupBase, _MatTabGroupMixinBase2);\n\n    var _super5 = _createSuper(_MatTabGroupBase);\n\n    function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n      var _this6;\n\n      _classCallCheck(this, _MatTabGroupBase);\n\n      var _a;\n\n      _this6 = _super5.call(this, elementRef);\n      _this6._changeDetectorRef = _changeDetectorRef;\n      _this6._animationMode = _animationMode;\n      /** All of the tabs that belong to the group. */\n\n      _this6._tabs = new QueryList();\n      /** The tab index that should be selected after the content has been checked. */\n\n      _this6._indexToSelect = 0;\n      /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n\n      _this6._tabBodyWrapperHeight = 0;\n      /** Subscription to tabs being added/removed. */\n\n      _this6._tabsSubscription = Subscription.EMPTY;\n      /** Subscription to changes in the tab labels. */\n\n      _this6._tabLabelSubscription = Subscription.EMPTY;\n      _this6._selectedIndex = null;\n      /** Position of the tab header. */\n\n      _this6.headerPosition = 'above';\n      /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n\n      _this6.selectedIndexChange = new EventEmitter();\n      /** Event emitted when focus has changed within a tab group. */\n\n      _this6.focusChange = new EventEmitter();\n      /** Event emitted when the body animation has completed */\n\n      _this6.animationDone = new EventEmitter();\n      /** Event emitted when the tab selection has changed. */\n\n      _this6.selectedTabChange = new EventEmitter(true);\n      _this6._groupId = nextId++;\n      _this6.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      _this6.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      _this6.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      _this6.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n      return _this6;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n\n\n    _createClass(_MatTabGroupBase, [{\n      key: \"dynamicHeight\",\n      get: function get() {\n        return this._dynamicHeight;\n      },\n      set: function set(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n      }\n      /** The index of the active tab. */\n\n    }, {\n      key: \"selectedIndex\",\n      get: function get() {\n        return this._selectedIndex;\n      },\n      set: function set(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n      }\n      /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n\n    }, {\n      key: \"animationDuration\",\n      get: function get() {\n        return this._animationDuration;\n      },\n      set: function set(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n      }\n      /**\n       * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n       * accessibility when the tab does not have focusable elements or if it has scrollable content.\n       * The `tabindex` will be removed automatically for inactive tabs.\n       * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n       */\n\n    }, {\n      key: \"contentTabIndex\",\n      get: function get() {\n        return this._contentTabIndex;\n      },\n      set: function set(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n      }\n      /** Background color of the tab group. */\n\n    }, {\n      key: \"backgroundColor\",\n      get: function get() {\n        return this._backgroundColor;\n      },\n      set: function set(value) {\n        var nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(\"mat-background-\".concat(this.backgroundColor));\n\n        if (value) {\n          nativeElement.classList.add(\"mat-background-\".concat(value));\n        }\n\n        this._backgroundColor = value;\n      }\n      /**\n       * After the content is checked, this component knows what tabs have been defined\n       * and what the selected index should be. This is where we can know exactly what position\n       * each tab should be in according to the new selected index, and additionally we know how\n       * a new selected tab should transition in (from the left or right).\n       */\n\n    }, {\n      key: \"ngAfterContentChecked\",\n      value: function ngAfterContentChecked() {\n        var _this7 = this;\n\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n\n\n        if (this._selectedIndex != indexToSelect) {\n          var isFirstRun = this._selectedIndex == null;\n\n          if (!isFirstRun) {\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect)); // Preserve the height so page doesn't scroll up during tab change.\n            // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n\n            var wrapper = this._tabBodyWrapper.nativeElement;\n            wrapper.style.minHeight = wrapper.clientHeight + 'px';\n          } // Changing these values after change detection has run\n          // since the checked content may contain references to them.\n\n\n          Promise.resolve().then(function () {\n            _this7._tabs.forEach(function (tab, index) {\n              return tab.isActive = index === indexToSelect;\n            });\n\n            if (!isFirstRun) {\n              _this7.selectedIndexChange.emit(indexToSelect); // Clear the min-height, this was needed during tab change to avoid\n              // unnecessary scrolling.\n\n\n              _this7._tabBodyWrapper.nativeElement.style.minHeight = '';\n            }\n          });\n        } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n        this._tabs.forEach(function (tab, index) {\n          tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n          // if it doesn't have one already.\n\n          if (_this7._selectedIndex != null && tab.position == 0 && !tab.origin) {\n            tab.origin = indexToSelect - _this7._selectedIndex;\n          }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n          this._selectedIndex = indexToSelect;\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this8 = this;\n\n        this._subscribeToAllTabChanges();\n\n        this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n\n\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n          var indexToSelect = _this8._clampTabIndex(_this8._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n          // explicit change that selects a different tab.\n\n\n          if (indexToSelect === _this8._selectedIndex) {\n            var tabs = _this8._tabs.toArray();\n\n            for (var i = 0; i < tabs.length; i++) {\n              if (tabs[i].isActive) {\n                // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                // adding a tab within the `selectedIndexChange` event.\n                _this8._indexToSelect = _this8._selectedIndex = i;\n                break;\n              }\n            }\n          }\n\n          _this8._changeDetectorRef.markForCheck();\n        });\n      }\n      /** Listens to changes in all of the tabs. */\n\n    }, {\n      key: \"_subscribeToAllTabChanges\",\n      value: function _subscribeToAllTabChanges() {\n        var _this9 = this;\n\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(function (tabs) {\n          _this9._tabs.reset(tabs.filter(function (tab) {\n            return tab._closestTabGroup === _this9 || !tab._closestTabGroup;\n          }));\n\n          _this9._tabs.notifyOnChanges();\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._tabs.destroy();\n\n        this._tabsSubscription.unsubscribe();\n\n        this._tabLabelSubscription.unsubscribe();\n      }\n      /** Re-aligns the ink bar to the selected tab element. */\n\n    }, {\n      key: \"realignInkBar\",\n      value: function realignInkBar() {\n        if (this._tabHeader) {\n          this._tabHeader._alignInkBarToSelectedTab();\n        }\n      }\n      /**\n       * Sets focus to a particular tab.\n       * @param index Index of the tab to be focused.\n       */\n\n    }, {\n      key: \"focusTab\",\n      value: function focusTab(index) {\n        var header = this._tabHeader;\n\n        if (header) {\n          header.focusIndex = index;\n        }\n      }\n    }, {\n      key: \"_focusChanged\",\n      value: function _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n      }\n    }, {\n      key: \"_createChangeEvent\",\n      value: function _createChangeEvent(index) {\n        var event = new MatTabChangeEvent();\n        event.index = index;\n\n        if (this._tabs && this._tabs.length) {\n          event.tab = this._tabs.toArray()[index];\n        }\n\n        return event;\n      }\n      /**\n       * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n       * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n       * binding to be updated, we need to subscribe to changes in it and trigger change detection\n       * manually.\n       */\n\n    }, {\n      key: \"_subscribeToTabLabels\",\n      value: function _subscribeToTabLabels() {\n        var _this10 = this;\n\n        if (this._tabLabelSubscription) {\n          this._tabLabelSubscription.unsubscribe();\n        }\n\n        this._tabLabelSubscription = merge.apply(void 0, _toConsumableArray(this._tabs.map(function (tab) {\n          return tab._stateChanges;\n        }))).subscribe(function () {\n          return _this10._changeDetectorRef.markForCheck();\n        });\n      }\n      /** Clamps the given index to the bounds of 0 and the tabs length. */\n\n    }, {\n      key: \"_clampTabIndex\",\n      value: function _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n      }\n      /** Returns a unique id for each tab label element */\n\n    }, {\n      key: \"_getTabLabelId\",\n      value: function _getTabLabelId(i) {\n        return \"mat-tab-label-\".concat(this._groupId, \"-\").concat(i);\n      }\n      /** Returns a unique id for each tab content element */\n\n    }, {\n      key: \"_getTabContentId\",\n      value: function _getTabContentId(i) {\n        return \"mat-tab-content-\".concat(this._groupId, \"-\").concat(i);\n      }\n      /**\n       * Sets the height of the body wrapper to the height of the activating tab if dynamic\n       * height property is true.\n       */\n\n    }, {\n      key: \"_setTabBodyWrapperHeight\",\n      value: function _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n          return;\n        }\n\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n          wrapper.style.height = tabHeight + 'px';\n        }\n      }\n      /** Removes the height of the tab body wrapper. */\n\n    }, {\n      key: \"_removeTabBodyWrapperHeight\",\n      value: function _removeTabBodyWrapperHeight() {\n        var wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n      }\n      /** Handle click events, setting new selected index if appropriate. */\n\n    }, {\n      key: \"_handleClick\",\n      value: function _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n          this.selectedIndex = tabHeader.focusIndex = index;\n        }\n      }\n      /** Retrieves the tabindex for the tab. */\n\n    }, {\n      key: \"_getTabIndex\",\n      value: function _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n          return null;\n        }\n\n        return this.selectedIndex === idx ? 0 : -1;\n      }\n      /** Callback for when the focused state of a tab has changed. */\n\n    }, {\n      key: \"_tabFocusChanged\",\n      value: function _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n          this._tabHeader.focusIndex = index;\n        }\n      }\n    }]);\n\n    return _MatTabGroupBase;\n  }(_MatTabGroupMixinBase);\n\n  _MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n    return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabGroupBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabGroupBase,\n    inputs: {\n      headerPosition: \"headerPosition\",\n      animationDuration: \"animationDuration\",\n      disablePagination: \"disablePagination\",\n      dynamicHeight: \"dynamicHeight\",\n      contentTabIndex: \"contentTabIndex\",\n      selectedIndex: \"selectedIndex\",\n      backgroundColor: \"backgroundColor\"\n    },\n    outputs: {\n      selectedIndexChange: \"selectedIndexChange\",\n      focusChange: \"focusChange\",\n      animationDone: \"animationDone\",\n      selectedTabChange: \"selectedTabChange\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabGroupBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nvar MatTabGroup = /*#__PURE__*/(function () {\n  var MatTabGroup = /*#__PURE__*/function (_MatTabGroupBase2) {\n    _inherits(MatTabGroup, _MatTabGroupBase2);\n\n    var _super6 = _createSuper(MatTabGroup);\n\n    function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n      _classCallCheck(this, MatTabGroup);\n\n      return _super6.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n\n    return _createClass(MatTabGroup);\n  }(_MatTabGroupBase);\n\n  MatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n    return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabGroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabGroup,\n    selectors: [[\"mat-tab-group\"]],\n    contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n      }\n    },\n    viewQuery: function MatTabGroup_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-group\"],\n    hostVars: 4,\n    hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n      }\n    },\n    inputs: {\n      color: \"color\",\n      disableRipple: \"disableRipple\"\n    },\n    exportAs: [\"matTabGroup\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MAT_TAB_GROUP,\n      useExisting: MatTabGroup\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 7,\n    consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n    template: function MatTabGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n          return ctx._focusChanged($event);\n        })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n          return ctx.selectedIndex = $event;\n        });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      }\n    },\n    directives: function directives() {\n      return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody];\n    },\n    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabGroup;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/** @docs-private */\n\n\nvar _MatTabLabelWrapperBase = /*#__PURE__*/mixinDisabled( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _createClass(_class3);\n}());\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n\n\nvar MatTabLabelWrapper = /*#__PURE__*/(function () {\n  var MatTabLabelWrapper = /*#__PURE__*/function (_MatTabLabelWrapperBa) {\n    _inherits(MatTabLabelWrapper, _MatTabLabelWrapperBa);\n\n    var _super7 = _createSuper(MatTabLabelWrapper);\n\n    function MatTabLabelWrapper(elementRef) {\n      var _this11;\n\n      _classCallCheck(this, MatTabLabelWrapper);\n\n      _this11 = _super7.call(this);\n      _this11.elementRef = elementRef;\n      return _this11;\n    }\n    /** Sets focus on the wrapper element */\n\n\n    _createClass(MatTabLabelWrapper, [{\n      key: \"focus\",\n      value: function focus() {\n        this.elementRef.nativeElement.focus();\n      }\n    }, {\n      key: \"getOffsetLeft\",\n      value: function getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n      }\n    }, {\n      key: \"getOffsetWidth\",\n      value: function getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n      }\n    }]);\n\n    return MatTabLabelWrapper;\n  }(_MatTabLabelWrapperBase);\n\n  MatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n    return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MatTabLabelWrapper.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLabelWrapper,\n    selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n    hostVars: 3,\n    hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLabelWrapper;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Config used to bind passive event listeners */\n\n\nvar passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\n\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\n\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\n\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n\nvar MatPaginatedTabHeader = /*#__PURE__*/(function () {\n  var MatPaginatedTabHeader = /*#__PURE__*/function () {\n    function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n      var _this12 = this;\n\n      _classCallCheck(this, MatPaginatedTabHeader);\n\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._viewportRuler = _viewportRuler;\n      this._dir = _dir;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._animationMode = _animationMode;\n      /** The distance in pixels that the tab labels should be translated to the left. */\n\n      this._scrollDistance = 0;\n      /** Whether the header should scroll to the selected index after the view has been checked. */\n\n      this._selectedIndexChanged = false;\n      /** Emits when the component is destroyed. */\n\n      this._destroyed = new Subject();\n      /** Whether the controls for pagination should be displayed */\n\n      this._showPaginationControls = false;\n      /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\n      this._disableScrollAfter = true;\n      /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\n      this._disableScrollBefore = true;\n      /** Stream that will stop the automated scrolling. */\n\n      this._stopScrolling = new Subject();\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n\n      this.disablePagination = false;\n      this._selectedIndex = 0;\n      /** Event emitted when the option is selected. */\n\n      this.selectFocusedIndex = new EventEmitter();\n      /** Event emitted when a label is focused. */\n\n      this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n      _ngZone.runOutsideAngular(function () {\n        fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(_this12._destroyed)).subscribe(function () {\n          _this12._stopInterval();\n        });\n      });\n    }\n    /** The index of the active tab. */\n\n\n    _createClass(MatPaginatedTabHeader, [{\n      key: \"selectedIndex\",\n      get: function get() {\n        return this._selectedIndex;\n      },\n      set: function set(value) {\n        value = coerceNumberProperty(value);\n\n        if (this._selectedIndex != value) {\n          this._selectedIndexChanged = true;\n          this._selectedIndex = value;\n\n          if (this._keyManager) {\n            this._keyManager.updateActiveItem(value);\n          }\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this13 = this;\n\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(function () {\n          _this13._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(function () {\n          _this13._handlePaginatorPress('after');\n        });\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this14 = this;\n\n        var dirChange = this._dir ? this._dir.change : of('ltr');\n\n        var resize = this._viewportRuler.change(150);\n\n        var realign = function realign() {\n          _this14.updatePagination();\n\n          _this14._alignInkBarToSelectedTab();\n        };\n\n        this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n\n        this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n\n\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(function () {\n          // We need to defer this to give the browser some time to recalculate\n          // the element dimensions. The call has to be wrapped in `NgZone.run`,\n          // because the viewport change handler runs outside of Angular.\n          _this14._ngZone.run(function () {\n            return Promise.resolve().then(realign);\n          });\n\n          _this14._keyManager.withHorizontalOrientation(_this14._getLayoutDirection());\n        }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n          _this14.indexFocused.emit(newFocusIndex);\n\n          _this14._setTabFocus(newFocusIndex);\n        });\n      }\n    }, {\n      key: \"ngAfterContentChecked\",\n      value: function ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n          this.updatePagination();\n          this._tabLabelCount = this._items.length;\n\n          this._changeDetectorRef.markForCheck();\n        } // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n\n\n        if (this._selectedIndexChanged) {\n          this._scrollToLabel(this._selectedIndex);\n\n          this._checkScrollingControls();\n\n          this._alignInkBarToSelectedTab();\n\n          this._selectedIndexChanged = false;\n\n          this._changeDetectorRef.markForCheck();\n        } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n\n\n        if (this._scrollDistanceChanged) {\n          this._updateTabScrollPosition();\n\n          this._scrollDistanceChanged = false;\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyed.next();\n\n        this._destroyed.complete();\n\n        this._stopScrolling.complete();\n      }\n      /** Handles keyboard events on the header. */\n\n    }, {\n      key: \"_handleKeydown\",\n      value: function _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n          return;\n        }\n\n        switch (event.keyCode) {\n          case ENTER:\n          case SPACE:\n            if (this.focusIndex !== this.selectedIndex) {\n              this.selectFocusedIndex.emit(this.focusIndex);\n\n              this._itemSelected(event);\n            }\n\n            break;\n\n          default:\n            this._keyManager.onKeydown(event);\n\n        }\n      }\n      /**\n       * Callback for when the MutationObserver detects that the content has changed.\n       */\n\n    }, {\n      key: \"_onContentChanges\",\n      value: function _onContentChanges() {\n        var _this15 = this;\n\n        var textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n        if (textContent !== this._currentTextContent) {\n          this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n          // means that we need to bring the callback back in ourselves.\n\n          this._ngZone.run(function () {\n            _this15.updatePagination();\n\n            _this15._alignInkBarToSelectedTab();\n\n            _this15._changeDetectorRef.markForCheck();\n          });\n        }\n      }\n      /**\n       * Updates the view whether pagination should be enabled or not.\n       *\n       * WARNING: Calling this method can be very costly in terms of performance. It should be called\n       * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n       * page.\n       */\n\n    }, {\n      key: \"updatePagination\",\n      value: function updatePagination() {\n        this._checkPaginationEnabled();\n\n        this._checkScrollingControls();\n\n        this._updateTabScrollPosition();\n      }\n      /** Tracks which element has focus; used for keyboard navigation */\n\n    }, {\n      key: \"focusIndex\",\n      get: function get() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n      }\n      /** When the focus index is set, we must manually send focus to the correct label */\n      ,\n      set: function set(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n          return;\n        }\n\n        this._keyManager.setActiveItem(value);\n      }\n      /**\n       * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n       * providing a valid index and return true.\n       */\n\n    }, {\n      key: \"_isValidIndex\",\n      value: function _isValidIndex(index) {\n        if (!this._items) {\n          return true;\n        }\n\n        var tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n      }\n      /**\n       * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n       * scrolling is enabled.\n       */\n\n    }, {\n      key: \"_setTabFocus\",\n      value: function _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n          this._scrollToLabel(tabIndex);\n        }\n\n        if (this._items && this._items.length) {\n          this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n          // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n          // should be the full width minus the offset width.\n\n\n          var containerEl = this._tabListContainer.nativeElement;\n\n          var dir = this._getLayoutDirection();\n\n          if (dir == 'ltr') {\n            containerEl.scrollLeft = 0;\n          } else {\n            containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n          }\n        }\n      }\n      /** The layout direction of the containing app. */\n\n    }, {\n      key: \"_getLayoutDirection\",\n      value: function _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n      }\n      /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\n    }, {\n      key: \"_updateTabScrollPosition\",\n      value: function _updateTabScrollPosition() {\n        if (this.disablePagination) {\n          return;\n        }\n\n        var scrollDistance = this.scrollDistance;\n        var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n\n        this._tabList.nativeElement.style.transform = \"translateX(\".concat(Math.round(translateX), \"px)\"); // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n          this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n      }\n      /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\n    }, {\n      key: \"scrollDistance\",\n      get: function get() {\n        return this._scrollDistance;\n      },\n      set: function set(value) {\n        this._scrollTo(value);\n      }\n      /**\n       * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n       * the end of the list, respectively). The distance to scroll is computed to be a third of the\n       * length of the tab list view window.\n       *\n       * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n       * should be called sparingly.\n       */\n\n    }, {\n      key: \"_scrollHeader\",\n      value: function _scrollHeader(direction) {\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n        var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n      }\n      /** Handles click events on the pagination arrows. */\n\n    }, {\n      key: \"_handlePaginatorClick\",\n      value: function _handlePaginatorClick(direction) {\n        this._stopInterval();\n\n        this._scrollHeader(direction);\n      }\n      /**\n       * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n       *\n       * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n       * should be called sparingly.\n       */\n\n    }, {\n      key: \"_scrollToLabel\",\n      value: function _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n          return;\n        }\n\n        var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n        if (!selectedLabel) {\n          return;\n        } // The view length is the visible width of the tab labels.\n\n\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var _selectedLabel$elemen = selectedLabel.elementRef.nativeElement,\n            offsetLeft = _selectedLabel$elemen.offsetLeft,\n            offsetWidth = _selectedLabel$elemen.offsetWidth;\n        var labelBeforePos, labelAfterPos;\n\n        if (this._getLayoutDirection() == 'ltr') {\n          labelBeforePos = offsetLeft;\n          labelAfterPos = labelBeforePos + offsetWidth;\n        } else {\n          labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n          labelBeforePos = labelAfterPos - offsetWidth;\n        }\n\n        var beforeVisiblePos = this.scrollDistance;\n        var afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n          // Scroll header to move label to the before direction\n          this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n          // Scroll header to move label to the after direction\n          this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n      }\n      /**\n       * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n       * tab list is wider than the size of the header container, then the pagination controls should\n       * be shown.\n       *\n       * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n       * should be called sparingly.\n       */\n\n    }, {\n      key: \"_checkPaginationEnabled\",\n      value: function _checkPaginationEnabled() {\n        if (this.disablePagination) {\n          this._showPaginationControls = false;\n        } else {\n          var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n          if (!isEnabled) {\n            this.scrollDistance = 0;\n          }\n\n          if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n          }\n\n          this._showPaginationControls = isEnabled;\n        }\n      }\n      /**\n       * Evaluate whether the before and after controls should be enabled or disabled.\n       * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n       * before button. If the header is at the end of the list (scroll distance is equal to the\n       * maximum distance we can scroll), then disable the after button.\n       *\n       * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n       * should be called sparingly.\n       */\n\n    }, {\n      key: \"_checkScrollingControls\",\n      value: function _checkScrollingControls() {\n        if (this.disablePagination) {\n          this._disableScrollAfter = this._disableScrollBefore = true;\n        } else {\n          // Check if the pagination arrows should be activated.\n          this._disableScrollBefore = this.scrollDistance == 0;\n          this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n      /**\n       * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n       * is equal to the difference in width between the tab list container and tab header container.\n       *\n       * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n       * should be called sparingly.\n       */\n\n    }, {\n      key: \"_getMaxScrollDistance\",\n      value: function _getMaxScrollDistance() {\n        var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n      }\n      /** Tells the ink-bar to align itself to the current label wrapper */\n\n    }, {\n      key: \"_alignInkBarToSelectedTab\",\n      value: function _alignInkBarToSelectedTab() {\n        var selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n        if (selectedLabelWrapper) {\n          this._inkBar.alignToElement(selectedLabelWrapper);\n        } else {\n          this._inkBar.hide();\n        }\n      }\n      /** Stops the currently-running paginator interval.  */\n\n    }, {\n      key: \"_stopInterval\",\n      value: function _stopInterval() {\n        this._stopScrolling.next();\n      }\n      /**\n       * Handles the user pressing down on one of the paginators.\n       * Starts scrolling the header after a certain amount of time.\n       * @param direction In which direction the paginator should be scrolled.\n       */\n\n    }, {\n      key: \"_handlePaginatorPress\",\n      value: function _handlePaginatorPress(direction, mouseEvent) {\n        var _this16 = this;\n\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n          return;\n        } // Avoid overlapping timers.\n\n\n        this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n        .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(function () {\n          var _this16$_scrollHeader = _this16._scrollHeader(direction),\n              maxScrollDistance = _this16$_scrollHeader.maxScrollDistance,\n              distance = _this16$_scrollHeader.distance; // Stop the timer if we've reached the start or the end.\n\n\n          if (distance === 0 || distance >= maxScrollDistance) {\n            _this16._stopInterval();\n          }\n        });\n      }\n      /**\n       * Scrolls the header to a given position.\n       * @param position Position to which to scroll.\n       * @returns Information on the current scroll distance and the maximum.\n       */\n\n    }, {\n      key: \"_scrollTo\",\n      value: function _scrollTo(position) {\n        if (this.disablePagination) {\n          return {\n            maxScrollDistance: 0,\n            distance: 0\n          };\n        }\n\n        var maxScrollDistance = this._getMaxScrollDistance();\n\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n\n        this._scrollDistanceChanged = true;\n\n        this._checkScrollingControls();\n\n        return {\n          maxScrollDistance: maxScrollDistance,\n          distance: this._scrollDistance\n        };\n      }\n    }]);\n\n    return MatPaginatedTabHeader;\n  }();\n\n  MatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n    return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatPaginatedTabHeader.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatPaginatedTabHeader,\n    inputs: {\n      disablePagination: \"disablePagination\"\n    }\n  });\n  return MatPaginatedTabHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n\n\nvar _MatTabHeaderBase = /*#__PURE__*/(function () {\n  var _MatTabHeaderBase = /*#__PURE__*/function (_MatPaginatedTabHeade) {\n    _inherits(_MatTabHeaderBase, _MatPaginatedTabHeade);\n\n    var _super8 = _createSuper(_MatTabHeaderBase);\n\n    function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      var _this17;\n\n      _classCallCheck(this, _MatTabHeaderBase);\n\n      _this17 = _super8.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      _this17._disableRipple = false;\n      return _this17;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    _createClass(_MatTabHeaderBase, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }, {\n      key: \"_itemSelected\",\n      value: function _itemSelected(event) {\n        event.preventDefault();\n      }\n    }]);\n\n    return _MatTabHeaderBase;\n  }(MatPaginatedTabHeader);\n\n  _MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n    return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabHeaderBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabHeaderBase,\n    inputs: {\n      disableRipple: \"disableRipple\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabHeaderBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n\n\nvar MatTabHeader = /*#__PURE__*/(function () {\n  var MatTabHeader = /*#__PURE__*/function (_MatTabHeaderBase2) {\n    _inherits(MatTabHeader, _MatTabHeaderBase2);\n\n    var _super9 = _createSuper(MatTabHeader);\n\n    function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      _classCallCheck(this, MatTabHeader);\n\n      return _super9.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n\n    return _createClass(MatTabHeader);\n  }(_MatTabHeaderBase);\n\n  MatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n    return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabHeader,\n    selectors: [[\"mat-tab-header\"]],\n    contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabHeader_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-header\"],\n    hostVars: 4,\n    hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n      }\n    },\n    inputs: {\n      selectedIndex: \"selectedIndex\"\n    },\n    outputs: {\n      selectFocusedIndex: \"selectFocusedIndex\",\n      indexFocused: \"indexFocused\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 8,\n    consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n    template: function MatTabHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n          return ctx._handlePaginatorClick(\"before\");\n        })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n          return ctx._handlePaginatorPress(\"before\", $event);\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n          return ctx._handleKeydown($event);\n        });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n          return ctx._onContentChanges();\n        });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n          return ctx._handlePaginatorPress(\"after\", $event);\n        })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n          return ctx._handlePaginatorClick(\"after\");\n        })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n\n\nvar _MatTabNavBase = /*#__PURE__*/(function () {\n  var _MatTabNavBase = /*#__PURE__*/function (_MatPaginatedTabHeade2) {\n    _inherits(_MatTabNavBase, _MatPaginatedTabHeade2);\n\n    var _super10 = _createSuper(_MatTabNavBase);\n\n    function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n      var _this18;\n\n      _classCallCheck(this, _MatTabNavBase);\n\n      _this18 = _super10.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      _this18._disableRipple = false;\n      /** Theme color of the nav bar. */\n\n      _this18.color = 'primary';\n      return _this18;\n    }\n    /** Background color of the tab nav. */\n\n\n    _createClass(_MatTabNavBase, [{\n      key: \"backgroundColor\",\n      get: function get() {\n        return this._backgroundColor;\n      },\n      set: function set(value) {\n        var classList = this._elementRef.nativeElement.classList;\n        classList.remove(\"mat-background-\".concat(this.backgroundColor));\n\n        if (value) {\n          classList.add(\"mat-background-\".concat(value));\n        }\n\n        this._backgroundColor = value;\n      }\n      /** Whether the ripple effect is disabled or not. */\n\n    }, {\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }, {\n      key: \"_itemSelected\",\n      value: function _itemSelected() {// noop\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this19 = this;\n\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(function () {\n          _this19.updateActiveLink();\n        });\n\n        _get(_getPrototypeOf(_MatTabNavBase.prototype), \"ngAfterContentInit\", this).call(this);\n      }\n      /** Notifies the component that the active link has been changed. */\n\n    }, {\n      key: \"updateActiveLink\",\n      value: function updateActiveLink() {\n        if (!this._items) {\n          return;\n        }\n\n        var items = this._items.toArray();\n\n        for (var i = 0; i < items.length; i++) {\n          if (items[i].active) {\n            this.selectedIndex = i;\n\n            this._changeDetectorRef.markForCheck();\n\n            return;\n          }\n        } // The ink bar should hide itself if no items are active.\n\n\n        this.selectedIndex = -1;\n\n        this._inkBar.hide();\n      }\n    }]);\n\n    return _MatTabNavBase;\n  }(MatPaginatedTabHeader);\n\n  _MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n    return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabNavBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabNavBase,\n    inputs: {\n      color: \"color\",\n      backgroundColor: \"backgroundColor\",\n      disableRipple: \"disableRipple\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabNavBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nvar MatTabNav = /*#__PURE__*/(function () {\n  var MatTabNav = /*#__PURE__*/function (_MatTabNavBase2) {\n    _inherits(MatTabNav, _MatTabNavBase2);\n\n    var _super11 = _createSuper(MatTabNav);\n\n    function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n      _classCallCheck(this, MatTabNav);\n\n      return _super11.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n\n    return _createClass(MatTabNav);\n  }(_MatTabNavBase);\n\n  MatTabNav.ɵfac = function MatTabNav_Factory(t) {\n    return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabNav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatTabNav,\n    selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n    contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    viewQuery: function MatTabNav_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n    hostVars: 10,\n    hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matTabNavBar\", \"matTabNav\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c9,\n    ngContentSelectors: _c0,\n    decls: 13,\n    vars: 8,\n    consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n    template: function MatTabNav_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n          return ctx._handlePaginatorClick(\"before\");\n        })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n          return ctx._handlePaginatorPress(\"before\", $event);\n        })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n          return ctx._handleKeydown($event);\n        });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n          return ctx._onContentChanges();\n        });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n          return ctx._handlePaginatorPress(\"after\", $event);\n        })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n          return ctx._handlePaginatorClick(\"after\");\n        })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n          return ctx._stopInterval();\n        });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n      }\n    },\n    directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n    encapsulation: 2\n  });\n  return MatTabNav;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nvar _MatTabLinkMixinBase = /*#__PURE__*/mixinTabIndex( /*#__PURE__*/mixinDisableRipple( /*#__PURE__*/mixinDisabled( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  return _createClass(_class4);\n}())));\n/** Base class with all of the `MatTabLink` functionality. */\n\n\nvar _MatTabLinkBase = /*#__PURE__*/(function () {\n  var _MatTabLinkBase = /*#__PURE__*/function (_MatTabLinkMixinBase2) {\n    _inherits(_MatTabLinkBase, _MatTabLinkMixinBase2);\n\n    var _super12 = _createSuper(_MatTabLinkBase);\n\n    function _MatTabLinkBase(_tabNavBar,\n    /** @docs-private */\n    elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n      var _this20;\n\n      _classCallCheck(this, _MatTabLinkBase);\n\n      _this20 = _super12.call(this);\n      _this20._tabNavBar = _tabNavBar;\n      _this20.elementRef = elementRef;\n      _this20._focusMonitor = _focusMonitor;\n      /** Whether the tab link is active or not. */\n\n      _this20._isActive = false;\n      _this20.rippleConfig = globalRippleOptions || {};\n      _this20.tabIndex = parseInt(tabIndex) || 0;\n\n      if (animationMode === 'NoopAnimations') {\n        _this20.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n\n      return _this20;\n    }\n    /** Whether the link is active. */\n\n\n    _createClass(_MatTabLinkBase, [{\n      key: \"active\",\n      get: function get() {\n        return this._isActive;\n      },\n      set: function set(value) {\n        var newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._isActive) {\n          this._isActive = value;\n\n          this._tabNavBar.updateActiveLink();\n        }\n      }\n      /**\n       * Whether ripples are disabled on interaction.\n       * @docs-private\n       */\n\n    }, {\n      key: \"rippleDisabled\",\n      get: function get() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n      }\n      /** Focuses the tab link. */\n\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        this.elementRef.nativeElement.focus();\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n      }\n    }, {\n      key: \"_handleFocus\",\n      value: function _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n      }\n    }]);\n\n    return _MatTabLinkBase;\n  }(_MatTabLinkMixinBase);\n\n  _MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n    return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  _MatTabLinkBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: _MatTabLinkBase,\n    inputs: {\n      active: \"active\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatTabLinkBase;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nvar MatTabLink = /*#__PURE__*/(function () {\n  var MatTabLink = /*#__PURE__*/function (_MatTabLinkBase2) {\n    _inherits(MatTabLink, _MatTabLinkBase2);\n\n    var _super13 = _createSuper(MatTabLink);\n\n    function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n      var _this21;\n\n      _classCallCheck(this, MatTabLink);\n\n      _this21 = _super13.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n      _this21._tabLinkRipple = new RippleRenderer(_assertThisInitialized(_this21), ngZone, elementRef, platform);\n\n      _this21._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n\n      return _this21;\n    }\n\n    _createClass(MatTabLink, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        _get(_getPrototypeOf(MatTabLink.prototype), \"ngOnDestroy\", this).call(this);\n\n        this._tabLinkRipple._removeTriggerEvents();\n      }\n    }]);\n\n    return MatTabLink;\n  }(_MatTabLinkBase);\n\n  MatTabLink.ɵfac = function MatTabLink_Factory(t) {\n    return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatTabLink.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MatTabLink,\n    selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n    hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n    hostVars: 7,\n    hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\"\n    },\n    exportAs: [\"matTabLink\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return MatTabLink;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatTabsModule = /*#__PURE__*/(function () {\n  var MatTabsModule = /*#__PURE__*/_createClass(function MatTabsModule() {\n    _classCallCheck(this, MatTabsModule);\n  });\n\n  MatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n    return new (t || MatTabsModule)();\n  };\n\n  MatTabsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatTabsModule\n  });\n  MatTabsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n  });\n  return MatTabsModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, {\n    declarations: function declarations() {\n      return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };","map":{"version":3,"names":["FocusKeyManager","FocusMonitor","A11yModule","ObserversModule","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","DOCUMENT","CommonModule","InjectionToken","Directive","ElementRef","NgZone","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewContainerRef","ContentChild","ViewChild","Input","ComponentFactoryResolver","forwardRef","EventEmitter","ChangeDetectorRef","Output","QueryList","ContentChildren","Attribute","NgModule","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","Subject","Subscription","merge","fromEvent","of","timer","Directionality","trigger","state","style","transition","animate","startWith","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceNumberProperty","ViewportRuler","normalizePassiveListenerOptions","Platform","hasModifierKey","SPACE","ENTER","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","$implicit","ɵɵproperty","templateLabel","MatTabGroup_div_2_ng_template_3_Template","ɵɵtext","ɵɵtextInterpolate","textLabel","MatTabGroup_div_2_Template","_r12","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatTabGroup_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","i_r5","index","ctx_r11","_r0","ɵɵreference","_handleClick","MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener","$event","ctx_r13","_tabFocusChanged","ɵɵelementEnd","ctx_r1","ɵɵclassProp","selectedIndex","_getTabLabelId","disabled","disableRipple","ɵɵattribute","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","ɵɵadvance","MatTabGroup_mat_tab_body_5_Template","_r17","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","ctx_r16","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","ctx_r18","_setTabBodyWrapperHeight","tab_r14","i_r15","ctx_r3","content","position","origin","contentTabIndex","_c5","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","visibility","positions","inkBar","ɵfac","MatInkBar_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatInkBar_HostBindings","ngDevMode","MAT_TAB_CONTENT","MatTabContent","template","MatTabContent_Factory","features","ɵɵProvidersFeature","provide","useExisting","MAT_TAB_LABEL","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabLabel_Factory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","_templateLabel","_setTemplateLabelInput","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","MatTab_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatTab_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatTab_Query","ɵɵviewQuery","inputs","exportAs","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","MatTab_Template","ɵɵprojectionDef","encapsulation","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBodyPortal_Factory","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_MatTabBodyBase_Factory","outputs","elementRef","MatTabBody_Factory","MatTabBody_Query","_portalHost","consts","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","_onTranslateTabStarted","MatTabBody_Template_div_animation_translateTab_done_0_listener","ɵɵpureFunction2","ɵɵpureFunction1","directives","styles","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_a","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","_animationDuration","test","_contentTabIndex","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","Promise","resolve","then","forEach","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","header","focusIndex","map","Math","min","max","tabHeight","height","offsetHeight","tabHeader","idx","focusOrigin","_MatTabGroupBase_Factory","MatTabGroup","animationMode","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","color","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","_focusChanged","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","MatTabHeader","NgForOf","MatTabLabelWrapper","MatRipple","CdkMonitorFocus","NgIf","_MatTabLabelWrapperBase","focus","MatTabLabelWrapper_Factory","MatTabLabelWrapper_HostBindings","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_keyManager","updateActiveItem","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","viewLength","scrollAmount","_scrollHeader","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","MatPaginatedTabHeader_Factory","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","_MatTabHeaderBase_Factory","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_div_click_0_listener","_handlePaginatorClick","MatTabHeader_Template_div_mousedown_0_listener","MatTabHeader_Template_div_touchend_0_listener","ɵɵelement","MatTabHeader_Template_div_keydown_3_listener","_handleKeydown","MatTabHeader_Template_div_cdkObserveContent_5_listener","_onContentChanges","MatTabHeader_Template_div_mousedown_10_listener","MatTabHeader_Template_div_click_10_listener","MatTabHeader_Template_div_touchend_10_listener","CdkObserveContent","_MatTabNavBase","updateActiveLink","items","active","_MatTabNavBase_Factory","MatTabNav","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","MatTabNav_HostBindings","attrs","MatTabNav_Template","MatTabNav_Template_div_click_0_listener","MatTabNav_Template_div_mousedown_0_listener","MatTabNav_Template_div_touchend_0_listener","MatTabNav_Template_div_keydown_3_listener","MatTabNav_Template_div_cdkObserveContent_5_listener","MatTabNav_Template_div_mousedown_10_listener","MatTabNav_Template_div_click_10_listener","MatTabNav_Template_div_touchend_10_listener","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","enterDuration","exitDuration","newValue","monitor","stopMonitoring","indexOf","_MatTabLinkBase_Factory","ɵɵinjectAttribute","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabLink_Factory","MatTabLink_HostBindings","MatTabLink_focus_HostBindingHandler","_handleFocus","MatTabsModule","MatTabsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵangular_material_src_material_tabs_tabs_a","ɵangular_material_src_material_tabs_tabs_b","ɵangular_material_src_material_tabs_tabs_c","ɵangular_material_src_material_tabs_tabs_d"],"sources":["C:/Users/sonkh/2/node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js"],"sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }, { type: Optional }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }, {\n                type: Optional\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() { return this._contentTabIndex; }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", contentTabIndex: \"contentTabIndex\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    contentTabIndex: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], contentTabIndex: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() { return ctx._handleFocus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                    '(focus)': '_handleFocus()'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}