{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { CentreService } from \"../../services/centre.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/centre.service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport var CentreDialogComponent = /*#__PURE__*/(function () {\n  var CentreDialogComponent = /*#__PURE__*/function () {\n    function CentreDialogComponent(dialog, fb, dialogRef, data, centreService) {\n      _classCallCheck(this, CentreDialogComponent);\n\n      this.dialog = dialog;\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.centreService = centreService;\n    }\n\n    _createClass(CentreDialogComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var edit = this.data.edit;\n        console.log(this.data);\n        this.formCentre = this.fb.group({\n          CentreName: [\"\", Validators.required],\n          CentreLocation: [\"\", Validators.required]\n        });\n        edit == true ? this.populateForm(this.data.centre) : \"\";\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        var _this = this;\n\n        console.log(this.formCentre.valid);\n\n        if (this.formCentre.valid) {\n          if (this.data.edit == true) {\n            this.centreService.updateCentre(this.formCentre.value, this.data.centre.CentreId).subscribe(function (data) {\n              _this.Close();\n            });\n          } else {\n            this.centreService.AddCentre(this.formCentre.value).subscribe(function (data) {\n              _this.Close();\n            });\n          }\n        }\n      }\n    }, {\n      key: \"populateForm\",\n      value: function populateForm(data) {\n        this.formCentre.patchValue({\n          CentreLocation: data.CentreLocation,\n          CentreName: data.CentreName\n        });\n      }\n    }, {\n      key: \"Close\",\n      value: function Close() {\n        this.dialog.closeAll();\n      }\n    }]);\n\n    return CentreDialogComponent;\n  }();\n\n  CentreDialogComponent.ɵfac = function CentreDialogComponent_Factory(t) {\n    return new (t || CentreDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.CentreService));\n  };\n\n  CentreDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CentreDialogComponent,\n    selectors: [[\"app-centre-dialog\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[\"mat-dialog-title\", \"\", \"align\", \"center\"], [\"autocomplete\", \"off\", 1, \"example-form\", 3, \"formGroup\", \"submit\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"ex. Midrand c\", \"formControlName\", \"CentreName\"], [\"matInput\", \"\", \"placeholder\", \"\", \"formControlName\", \"CentreLocation\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function CentreDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \" Centre \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function CentreDialogComponent_Template_form_submit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Centre Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Centre Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"button\", 7);\n        i0.ɵɵtext(15, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CentreDialogComponent_Template_button_click_16_listener() {\n          return ctx.Close();\n        });\n        i0.ɵɵtext(17, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formCentre);\n      }\n    },\n    directives: [i1.MatDialogTitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatDialogContent, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i1.MatDialogActions, i6.MatButton],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjZW50cmUtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"]\n  });\n  return CentreDialogComponent;\n})();","map":{"version":3,"mappings":";;AACA,SAASA,WAAT,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,eAHF,QAIO,0BAJP;AAKA,SAASC,aAAT,QAA8B,+BAA9B;;;;;;;;AAOA,WAAaC,qBAAb;EAAA,IAAaA,qBAAb;IAEE,+BACSC,MADT,EAEUC,EAFV,EAGUC,SAHV,EAImCC,IAJnC,EAKUC,aALV,EAKsC;MAAA;;MAJ7B;MACC;MACA;MACyB;MACzB;IACN;;IARN;MAAA;MAAA,OAUE,oBAAQ;QACN,IAAMC,IAAI,GAAG,KAAKF,IAAL,CAAUE,IAAvB;QACAC,OAAO,CAACC,GAAR,CAAY,KAAKJ,IAAjB;QACA,KAAKK,UAAL,GAAkB,KAAKP,EAAL,CAAQQ,KAAR,CAAc;UAC9BC,UAAU,EAAE,CAAC,EAAD,EAAKhB,UAAU,CAACiB,QAAhB,CADkB;UAE9BC,cAAc,EAAE,CAAC,EAAD,EAAKlB,UAAU,CAACiB,QAAhB;QAFc,CAAd,CAAlB;QAKAN,IAAI,IAAI,IAAR,GAAe,KAAKQ,YAAL,CAAkB,KAAKV,IAAL,CAAUW,MAA5B,CAAf,GAAqD,EAArD;MACD;IAnBH;MAAA;MAAA,OAqBE,oBAAQ;QAAA;;QACNR,OAAO,CAACC,GAAR,CAAY,KAAKC,UAAL,CAAgBO,KAA5B;;QAEA,IAAG,KAAKP,UAAL,CAAgBO,KAAnB,EAA0B;UACxB,IAAG,KAAKZ,IAAL,CAAUE,IAAV,IAAkB,IAArB,EAA2B;YACzB,KAAKD,aAAL,CAAmBY,YAAnB,CAAgC,KAAKR,UAAL,CAAgBS,KAAhD,EAAuD,KAAKd,IAAL,CAAUW,MAAV,CAAiBI,QAAxE,EAAkFC,SAAlF,CAA4F,cAAI,EAAG;cACjG,KAAI,CAACC,KAAL;YACD,CAFD;UAGD,CAJD,MAIO;YACL,KAAKhB,aAAL,CAAmBiB,SAAnB,CAA6B,KAAKb,UAAL,CAAgBS,KAA7C,EAAoDE,SAApD,CAA8D,cAAI,EAAG;cACnE,KAAI,CAACC,KAAL;YACD,CAFD;UAGD;QAEF;MAEF;IArCH;MAAA;MAAA,OAuCE,sBAAajB,IAAb,EAAiB;QACf,KAAKK,UAAL,CAAgBc,UAAhB,CAA2B;UACzBV,cAAc,EAAET,IAAI,CAACS,cADI;UAEzBF,UAAU,EAAEP,IAAI,CAACO;QAFQ,CAA3B;MAID;IA5CH;MAAA;MAAA,OA6CE,iBAAK;QACH,KAAKV,MAAL,CAAYuB,QAAZ;MACD;IA/CH;;IAAA;EAAA;;;qBAAaxB,uBAAqByB,sIAMtB3B,eANsB,GAMP2B;EAAA;;;UANdzB;IAAqB0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCdlCL;QAAqCA;QAAOA;QAC5CA;QAAuEA;UAAA,OAAUM,cAAV;QAAoB,CAApB;QACvEN;QACAA,+BAAwB,CAAxB,EAAwB,gBAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,WAAxB;QAGuBA;QAAWA;QACtBA;QACJA;QAEAA,0CAA6D,EAA7D,EAA6D,WAA7D;QACeA;QAAeA;QAC1BA;QAEJA;QAGRA,gCAAoC,EAApC,EAAoC,QAApC,EAAoC,CAApC;QAC6CA;QAAOA;QAChDA;QAA0BA;UAAA,OAASM,WAAT;QAAgB,CAAhB;QAA+BN;QAAMA;;;;QAlBxCA;QAAAA;;;;;;EDa3B,OAAazB,qBAAb;AAAA","names":["FormBuilder","Validators","MatDialog","MatDialogRef","MAT_DIALOG_DATA","CentreService","CentreDialogComponent","dialog","fb","dialogRef","data","centreService","edit","console","log","formCentre","group","CentreName","required","CentreLocation","populateForm","centre","valid","updateCentre","value","CentreId","subscribe","Close","AddCentre","patchValue","closeAll","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sonkh\\2\\src\\app\\layouts\\admin-layout\\diallogs\\centre-dialog\\centre-dialog.component.ts","C:\\Users\\sonkh\\2\\src\\app\\layouts\\admin-layout\\diallogs\\centre-dialog\\centre-dialog.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { CentreService } from \"../../services/centre.service\";\r\n\r\n@Component({\r\n  selector: \"app-centre-dialog\",\r\n  templateUrl: \"./centre-dialog.component.html\",\r\n  styleUrls: [\"./centre-dialog.component.scss\"],\r\n})\r\nexport class CentreDialogComponent implements OnInit {\r\n  formCentre: FormGroup;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CentreDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private centreService: CentreService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const edit = this.data.edit;\r\n    console.log(this.data);\r\n    this.formCentre = this.fb.group({\r\n      CentreName: [\"\", Validators.required],\r\n      CentreLocation: [\"\", Validators.required],\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.centre) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formCentre.valid)\r\n\r\n    if(this.formCentre.valid) {\r\n      if(this.data.edit == true) {\r\n        this.centreService.updateCentre(this.formCentre.value, this.data.centre.CentreId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.centreService.AddCentre(this.formCentre.value).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  populateForm(data) {\r\n    this.formCentre.patchValue({\r\n      CentreLocation: data.CentreLocation,\r\n      CentreName: data.CentreName,\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n","<h3 mat-dialog-title align=\"center\"> Centre </h3>\r\n<form class=\"example-form\" [formGroup]=\"formCentre\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Centre Name</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"CentreName\" >\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Centre Location</mat-label>\r\n            <input matInput placeholder=\"\" formControlName=\"CentreLocation\" >\r\n\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>"]},"metadata":{},"sourceType":"module"}