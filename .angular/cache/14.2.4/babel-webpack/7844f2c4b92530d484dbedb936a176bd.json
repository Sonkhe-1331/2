{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport var Observable = /*#__PURE__*/(function () {\n  var Observable = /*#__PURE__*/function () {\n    function Observable(subscribe) {\n      _classCallCheck(this, Observable);\n\n      this._isScalar = false;\n\n      if (subscribe) {\n        this._subscribe = subscribe;\n      }\n    }\n\n    _createClass(Observable, [{\n      key: \"lift\",\n      value: function lift(operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n\n        if (operator) {\n          sink.add(operator.call(sink, this.source));\n        } else {\n          sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n\n            if (sink.syncErrorThrown) {\n              throw sink.syncErrorValue;\n            }\n          }\n        }\n\n        return sink;\n      }\n    }, {\n      key: \"_trySubscribe\",\n      value: function _trySubscribe(sink) {\n        try {\n          return this._subscribe(sink);\n        } catch (err) {\n          if (config.useDeprecatedSynchronousErrorHandling) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n          }\n\n          if (canReportError(sink)) {\n            sink.error(err);\n          } else {\n            console.warn(err);\n          }\n        }\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(next, promiseCtor) {\n        var _this = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var subscription;\n          subscription = _this.subscribe(function (value) {\n            try {\n              next(value);\n            } catch (err) {\n              reject(err);\n\n              if (subscription) {\n                subscription.unsubscribe();\n              }\n            }\n          }, reject, resolve);\n        });\n      }\n    }, {\n      key: \"_subscribe\",\n      value: function _subscribe(subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n      }\n    }, {\n      key: Symbol_observable,\n      value: function value() {\n        return this;\n      }\n    }, {\n      key: \"pipe\",\n      value: function pipe() {\n        for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n          operations[_key] = arguments[_key];\n        }\n\n        if (operations.length === 0) {\n          return this;\n        }\n\n        return pipeFromArray(operations)(this);\n      }\n    }, {\n      key: \"toPromise\",\n      value: function toPromise(promiseCtor) {\n        var _this2 = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var value;\n\n          _this2.subscribe(function (x) {\n            return value = x;\n          }, function (err) {\n            return reject(err);\n          }, function () {\n            return resolve(value);\n          });\n        });\n      }\n    }]);\n\n    return Observable;\n  }();\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n})();\n\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}","map":{"version":3,"names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","config","Observable","subscribe","_isScalar","_subscribe","operator","source","observerOrNext","error","complete","sink","add","call","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","console","warn","next","promiseCtor","getPromiseCtor","resolve","reject","subscription","value","unsubscribe","subscriber","operations","length","x","create","Promise","Error"],"sources":["C:/Users/sonkh/2/node_modules/rxjs/_esm2015/internal/Observable.js"],"sourcesContent":["import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}