{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SubjectsService } from '../../services/subjects.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/subjects.service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport var SubjectDialogComponent = /*#__PURE__*/(function () {\n  var SubjectDialogComponent = /*#__PURE__*/function () {\n    function SubjectDialogComponent(dialog, fb, dialogRef, data, subjectService) {\n      _classCallCheck(this, SubjectDialogComponent);\n\n      this.dialog = dialog;\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.subjectService = subjectService;\n    }\n\n    _createClass(SubjectDialogComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var edit = this.data.edit;\n        console.log(this.data);\n        this.formSubject = this.fb.group({\n          SubjectDesc: [\"\", Validators.required]\n        });\n        edit == true ? this.populateForm(this.data.subject) : \"\";\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        var _this = this;\n\n        console.log(this.formSubject.valid);\n\n        if (this.formSubject.valid) {\n          if (this.data.edit == true) {\n            this.subjectService.updateSubject(this.formSubject.value, this.data.subject.SubjectId).subscribe(function (data) {\n              _this.Close();\n            });\n          } else {\n            this.subjectService.AddSubject(this.formSubject.value).subscribe(function (data) {\n              _this.Close();\n            });\n          }\n        }\n      }\n    }, {\n      key: \"populateForm\",\n      value: function populateForm(data) {\n        this.formSubject.patchValue({\n          SubjectDesc: data.SubjectDesc\n        });\n      }\n    }, {\n      key: \"Close\",\n      value: function Close() {\n        this.dialog.closeAll();\n      }\n    }]);\n\n    return SubjectDialogComponent;\n  }();\n\n  SubjectDialogComponent.ɵfac = function SubjectDialogComponent_Factory(t) {\n    return new (t || SubjectDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.SubjectsService));\n  };\n\n  SubjectDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubjectDialogComponent,\n    selectors: [[\"app-subject-dialog\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"mat-dialog-title\", \"\", \"align\", \"center\"], [\"autocomplete\", \"off\", 1, \"example-form\", 3, \"formGroup\", \"submit\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"ex. Midrand c\", \"formControlName\", \"SubjectDesc\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function SubjectDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \" Subject\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function SubjectDialogComponent_Template_form_submit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Subject Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function SubjectDialogComponent_Template_button_click_12_listener() {\n          return ctx.Close();\n        });\n        i0.ɵɵtext(13, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formSubject);\n      }\n    },\n    directives: [i1.MatDialogTitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatDialogContent, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i1.MatDialogActions, i6.MatButton],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdWJqZWN0LWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"]\n  });\n  return SubjectDialogComponent;\n})();","map":{"version":3,"mappings":";;AACA,SAASA,WAAT,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,eAAlC,QAAyD,0BAAzD;AACA,SAASC,eAAT,QAAgC,iCAAhC;;;;;;;;AAOA,WAAaC,sBAAb;EAAA,IAAaA,sBAAb;IAGE,gCACSC,MADT,EAEUC,EAFV,EAGUC,SAHV,EAImCC,IAJnC,EAKUC,cALV,EAKyC;MAAA;;MAJhC;MACC;MACA;MACyB;MACzB;IACN;;IATN;MAAA;MAAA,OAWE,oBAAQ;QACN,IAAMC,IAAI,GAAG,KAAKF,IAAL,CAAUE,IAAvB;QACAC,OAAO,CAACC,GAAR,CAAY,KAAKJ,IAAjB;QACA,KAAKK,WAAL,GAAmB,KAAKP,EAAL,CAAQQ,KAAR,CAAc;UAC/BC,WAAW,EAAE,CAAC,EAAD,EAAKhB,UAAU,CAACiB,QAAhB;QADkB,CAAd,CAAnB;QAIAN,IAAI,IAAI,IAAR,GAAe,KAAKO,YAAL,CAAkB,KAAKT,IAAL,CAAUU,OAA5B,CAAf,GAAsD,EAAtD;MACD;IAnBH;MAAA;MAAA,OAqBE,oBAAQ;QAAA;;QACNP,OAAO,CAACC,GAAR,CAAY,KAAKC,WAAL,CAAiBM,KAA7B;;QAEA,IAAG,KAAKN,WAAL,CAAiBM,KAApB,EAA2B;UACzB,IAAG,KAAKX,IAAL,CAAUE,IAAV,IAAkB,IAArB,EAA2B;YACzB,KAAKD,cAAL,CAAoBW,aAApB,CAAkC,KAAKP,WAAL,CAAiBQ,KAAnD,EAA0D,KAAKb,IAAL,CAAUU,OAAV,CAAkBI,SAA5E,EAAuFC,SAAvF,CAAiG,cAAI,EAAG;cACtG,KAAI,CAACC,KAAL;YACD,CAFD;UAGD,CAJD,MAIO;YACL,KAAKf,cAAL,CAAoBgB,UAApB,CAA+B,KAAKZ,WAAL,CAAiBQ,KAAhD,EAAuDE,SAAvD,CAAiE,cAAI,EAAG;cACtE,KAAI,CAACC,KAAL;YACD,CAFD;UAGD;QAEF;MAEF;IArCH;MAAA;MAAA,OAuCE,sBAAahB,IAAb,EAAiB;QACf,KAAKK,WAAL,CAAiBa,UAAjB,CAA4B;UAC1BX,WAAW,EAAEP,IAAI,CAACO;QADQ,CAA5B;MAGD;IA3CH;MAAA;MAAA,OA4CE,iBAAK;QACH,KAAKV,MAAL,CAAYsB,QAAZ;MACD;IA9CH;;IAAA;EAAA;;;qBAAavB,wBAAsBwB,sIAOvB1B,eAPuB,GAOR0B;EAAA;;;UAPdxB;IAAsByB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVnCL;QAAqCA;QAAOA;QAC5CA;QAAwEA;UAAA,OAAUM,cAAV;QAAoB,CAApB;QACxEN;QACAA,+BAAwB,CAAxB,EAAwB,gBAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,WAAxB;QAGuBA;QAAYA;QACvBA;QACJA;QAGRA,+BAAoC,EAApC,EAAoC,QAApC,EAAoC,CAApC;QAC6CA;QAAOA;QAChDA;QAA0BA;UAAA,OAASM,WAAT;QAAgB,CAAhB;QAA+BN;QAAMA;;;;QAZxCA;QAAAA;;;;;;EDS3B,OAAaxB,sBAAb;AAAA","names":["FormBuilder","Validators","MatDialog","MatDialogRef","MAT_DIALOG_DATA","SubjectsService","SubjectDialogComponent","dialog","fb","dialogRef","data","subjectService","edit","console","log","formSubject","group","SubjectDesc","required","populateForm","subject","valid","updateSubject","value","SubjectId","subscribe","Close","AddSubject","patchValue","closeAll","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sonkh\\2\\src\\app\\layouts\\admin-layout\\diallogs\\subject-dialog\\subject-dialog.component.ts","C:\\Users\\sonkh\\2\\src\\app\\layouts\\admin-layout\\diallogs\\subject-dialog\\subject-dialog.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SubjectsService } from '../../services/subjects.service';\r\n\r\n@Component({\r\n  selector: 'app-subject-dialog',\r\n  templateUrl: './subject-dialog.component.html',\r\n  styleUrls: ['./subject-dialog.component.scss']\r\n})\r\nexport class SubjectDialogComponent implements OnInit {\r\n\r\n  formSubject: FormGroup;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<SubjectDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private subjectService: SubjectsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const edit = this.data.edit;\r\n    console.log(this.data);\r\n    this.formSubject = this.fb.group({\r\n      SubjectDesc: [\"\", Validators.required],\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.subject) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formSubject.valid)\r\n\r\n    if(this.formSubject.valid) {\r\n      if(this.data.edit == true) {\r\n        this.subjectService.updateSubject(this.formSubject.value, this.data.subject.SubjectId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.subjectService.AddSubject(this.formSubject.value).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  populateForm(data) {\r\n    this.formSubject.patchValue({\r\n      SubjectDesc: data.SubjectDesc,\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}","<h3 mat-dialog-title align=\"center\"> Subject</h3>\r\n<form class=\"example-form\" [formGroup]=\"formSubject\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Subject Name</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"SubjectDesc\" >\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>"]},"metadata":{},"sourceType":"module"}