{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var AuthService = /*#__PURE__*/function () {\n  function AuthService(http, router) {\n    _classCallCheck(this, AuthService);\n\n    this.http = http;\n    this.router = router;\n    this.isloggedin$ = new BehaviorSubject(false);\n    this.BaseURI = 'https://localhost:44318/api/Access';\n  }\n\n  _createClass(AuthService, [{\n    key: \"register\",\n    value: function register(formData) {\n      var body = {\n        FirstName: formData.FirstName,\n        Email: formData.Email,\n        Username: formData.Email,\n        Name: formData.Name,\n        Surname: formData.Surname,\n        Password: formData.Passwords.Password,\n        isGuest: true,\n        IdNumber: formData.IdNumber\n      };\n      console.log(body);\n      return this.http.post(this.BaseURI + '/Register/1', body);\n    }\n  }, {\n    key: \"login\",\n    value: function login(formData) {\n      console.log(\"login\");\n      return this.http.post(this.BaseURI + '/Login/', formData);\n    }\n  }, {\n    key: \"setLoggedin\",\n    value: function setLoggedin(object) {\n      this.isloggedin$.next(object);\n    }\n  }, {\n    key: \"isLoggedIn\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"Logout\",\n    value: function Logout() {\n      sessionStorage.removeItem('id');\n      sessionStorage.removeItem('rle');\n      sessionStorage.removeItem('typ');\n      this.setLoggedin(false);\n      this.router.navigateByUrl('/login');\n    }\n  }, {\n    key: \"setUserID\",\n    value: function setUserID(userID) {\n      sessionStorage.setItem('id', userID.toString());\n    }\n  }, {\n    key: \"getUserID\",\n    get: function get() {\n      var id = Number(sessionStorage.getItem('id'));\n      return id;\n    }\n  }, {\n    key: \"setUserRole\",\n    value: function setUserRole(role) {\n      sessionStorage.setItem('rle', role.toString());\n    }\n  }, {\n    key: \"setUserType\",\n    value: function setUserType(type) {\n      sessionStorage.setItem('typ', type.toString());\n    }\n  }, {\n    key: \"getUserType\",\n    get: function get() {\n      var id = Number(sessionStorage.getItem('typ'));\n      return id;\n    }\n  }, {\n    key: \"getUserRole\",\n    get: function get() {\n      var id = Number(sessionStorage.getItem('rle'));\n      return id;\n    }\n  }, {\n    key: \"getTypes\",\n    value: function getTypes() {\n      return this.http.get('https://localhost:44318/api/Users/getUserTypes');\n    }\n  }]);\n\n  return AuthService;\n}();\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}