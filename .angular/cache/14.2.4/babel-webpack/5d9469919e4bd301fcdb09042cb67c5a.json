{"ast":null,"code":"import _inherits from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"sliderWrapper\"];\nvar activeEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\n\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\n\nvar DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\n\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\n\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\n\nvar MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(function () {\n    return MatSlider;\n  }),\n  multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\n\nvar MatSliderChange = /*#__PURE__*/_createClass(function MatSliderChange() {\n  _classCallCheck(this, MatSliderChange);\n}); // Boilerplate for applying mixins to MatSlider.\n\n/** @docs-private */\n\n\nvar _MatSliderBase = /*#__PURE__*/mixinTabIndex( /*#__PURE__*/mixinColor( /*#__PURE__*/mixinDisabled( /*#__PURE__*/function () {\n  function _class(_elementRef) {\n    _classCallCheck(this, _class);\n\n    this._elementRef = _elementRef;\n  }\n\n  return _createClass(_class);\n}()), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nvar MatSlider = /*#__PURE__*/(function () {\n  var MatSlider = /*#__PURE__*/function (_MatSliderBase2) {\n    _inherits(MatSlider, _MatSliderBase2);\n\n    var _super = _createSuper(MatSlider);\n\n    function MatSlider(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n      var _this;\n\n      _classCallCheck(this, MatSlider);\n\n      _this = _super.call(this, elementRef);\n      _this._focusMonitor = _focusMonitor;\n      _this._changeDetectorRef = _changeDetectorRef;\n      _this._dir = _dir;\n      _this._ngZone = _ngZone;\n      _this._animationMode = _animationMode;\n      _this._invert = false;\n      _this._max = 100;\n      _this._min = 0;\n      _this._step = 1;\n      _this._thumbLabel = false;\n      _this._tickInterval = 0;\n      _this._value = null;\n      _this._vertical = false;\n      /** Event emitted when the slider value has changed. */\n\n      _this.change = new EventEmitter();\n      /** Event emitted when the slider thumb moves. */\n\n      _this.input = new EventEmitter();\n      /**\n       * Emits when the raw value of the slider changes. This is here primarily\n       * to facilitate the two-way binding for the `value` input.\n       * @docs-private\n       */\n\n      _this.valueChange = new EventEmitter();\n      /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\n      _this.onTouched = function () {};\n\n      _this._percent = 0;\n      /**\n       * Whether or not the thumb is sliding and what the user is using to slide it with.\n       * Used to determine if there should be a transition for the thumb and fill track.\n       */\n\n      _this._isSliding = null;\n      /**\n       * Whether or not the slider is active (clicked or sliding).\n       * Used to shrink and grow the thumb as according to the Material Design spec.\n       */\n\n      _this._isActive = false;\n      /** The size of a tick interval as a percentage of the size of the track. */\n\n      _this._tickIntervalPercent = 0;\n      /** The dimensions of the slider. */\n\n      _this._sliderDimensions = null;\n\n      _this._controlValueAccessorChangeFn = function () {};\n      /** Subscription to the Directionality change EventEmitter. */\n\n\n      _this._dirChangeSubscription = Subscription.EMPTY;\n      /** Called when the user has put their pointer down on the slider. */\n\n      _this._pointerDown = function (event) {\n        // Don't do anything if the slider is disabled or the\n        // user is using anything other than the main mouse button.\n        if (_this.disabled || _this._isSliding || !isTouchEvent(event) && event.button !== 0) {\n          return;\n        }\n\n        _this._ngZone.run(function () {\n          _this._touchId = isTouchEvent(event) ? getTouchIdForSlider(event, _this._elementRef.nativeElement) : undefined;\n          var pointerPosition = getPointerPositionOnPage(event, _this._touchId);\n\n          if (pointerPosition) {\n            var oldValue = _this.value;\n            _this._isSliding = 'pointer';\n            _this._lastPointerEvent = event;\n            event.preventDefault();\n\n            _this._focusHostElement();\n\n            _this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n\n\n            _this._bindGlobalEvents(event);\n\n            _this._focusHostElement();\n\n            _this._updateValueFromPosition(pointerPosition);\n\n            _this._valueOnSlideStart = oldValue; // Emit a change and input event if the value changed.\n\n            if (oldValue != _this.value) {\n              _this._emitInputEvent();\n            }\n          }\n        });\n      };\n      /**\n       * Called when the user has moved their pointer after\n       * starting to drag. Bound on the document level.\n       */\n\n\n      _this._pointerMove = function (event) {\n        if (_this._isSliding === 'pointer') {\n          var pointerPosition = getPointerPositionOnPage(event, _this._touchId);\n\n          if (pointerPosition) {\n            // Prevent the slide from selecting anything else.\n            event.preventDefault();\n            var oldValue = _this.value;\n            _this._lastPointerEvent = event;\n\n            _this._updateValueFromPosition(pointerPosition); // Native range elements always emit `input` events when the value changed while sliding.\n\n\n            if (oldValue != _this.value) {\n              _this._emitInputEvent();\n            }\n          }\n        }\n      };\n      /** Called when the user has lifted their pointer. Bound on the document level. */\n\n\n      _this._pointerUp = function (event) {\n        if (_this._isSliding === 'pointer') {\n          if (!isTouchEvent(event) || typeof _this._touchId !== 'number' || // Note that we use `changedTouches`, rather than `touches` because it\n          // seems like in most cases `touches` is empty for `touchend` events.\n          findMatchingTouch(event.changedTouches, _this._touchId)) {\n            event.preventDefault();\n\n            _this._removeGlobalEvents();\n\n            _this._isSliding = null;\n            _this._touchId = undefined;\n\n            if (_this._valueOnSlideStart != _this.value && !_this.disabled) {\n              _this._emitChangeEvent();\n            }\n\n            _this._valueOnSlideStart = _this._lastPointerEvent = null;\n          }\n        }\n      };\n      /** Called when the window has lost focus. */\n\n\n      _this._windowBlur = function () {\n        // If the window is blurred while dragging we need to stop dragging because the\n        // browser won't dispatch the `mouseup` and `touchend` events anymore.\n        if (_this._lastPointerEvent) {\n          _this._pointerUp(_this._lastPointerEvent);\n        }\n      };\n\n      _this._document = _document;\n      _this.tabIndex = parseInt(tabIndex) || 0;\n\n      _ngZone.runOutsideAngular(function () {\n        var element = elementRef.nativeElement;\n        element.addEventListener('mousedown', _this._pointerDown, activeEventOptions);\n        element.addEventListener('touchstart', _this._pointerDown, activeEventOptions);\n      });\n\n      return _this;\n    }\n    /** Whether the slider is inverted. */\n\n\n    _createClass(MatSlider, [{\n      key: \"invert\",\n      get: function get() {\n        return this._invert;\n      },\n      set: function set(value) {\n        this._invert = coerceBooleanProperty(value);\n      }\n      /** The maximum value that the slider can have. */\n\n    }, {\n      key: \"max\",\n      get: function get() {\n        return this._max;\n      },\n      set: function set(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n        this._changeDetectorRef.markForCheck();\n      }\n      /** The minimum value that the slider can have. */\n\n    }, {\n      key: \"min\",\n      get: function get() {\n        return this._min;\n      },\n      set: function set(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n        this._changeDetectorRef.markForCheck();\n      }\n      /** The values at which the thumb will snap. */\n\n    }, {\n      key: \"step\",\n      get: function get() {\n        return this._step;\n      },\n      set: function set(v) {\n        this._step = coerceNumberProperty(v, this._step);\n\n        if (this._step % 1 !== 0) {\n          this._roundToDecimal = this._step.toString().split('.').pop().length;\n        } // Since this could modify the label, we need to notify the change detection.\n\n\n        this._changeDetectorRef.markForCheck();\n      }\n      /** Whether or not to show the thumb label. */\n\n    }, {\n      key: \"thumbLabel\",\n      get: function get() {\n        return this._thumbLabel;\n      },\n      set: function set(value) {\n        this._thumbLabel = coerceBooleanProperty(value);\n      }\n      /**\n       * How often to show ticks. Relative to the step so that a tick always appears on a step.\n       * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n       */\n\n    }, {\n      key: \"tickInterval\",\n      get: function get() {\n        return this._tickInterval;\n      },\n      set: function set(value) {\n        if (value === 'auto') {\n          this._tickInterval = 'auto';\n        } else if (typeof value === 'number' || typeof value === 'string') {\n          this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        } else {\n          this._tickInterval = 0;\n        }\n      }\n      /** Value of the slider. */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n          this.value = this._min;\n        }\n\n        return this._value;\n      },\n      set: function set(v) {\n        if (v !== this._value) {\n          var value = coerceNumberProperty(v, 0); // While incrementing by a decimal we can end up with values like 33.300000000000004.\n          // Truncate it to ensure that it matches the label and to make it easier to work with.\n\n          if (this._roundToDecimal && value !== this.min && value !== this.max) {\n            value = parseFloat(value.toFixed(this._roundToDecimal));\n          }\n\n          this._value = value;\n          this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n      /** Whether the slider is vertical. */\n\n    }, {\n      key: \"vertical\",\n      get: function get() {\n        return this._vertical;\n      },\n      set: function set(value) {\n        this._vertical = coerceBooleanProperty(value);\n      }\n      /** The value to be used for display purposes. */\n\n    }, {\n      key: \"displayValue\",\n      get: function get() {\n        if (this.displayWith) {\n          // Value is never null but since setters and getters cannot have\n          // different types, the value getter is also typed to return null.\n          return this.displayWith(this.value);\n        } // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n\n\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n          return this.value.toFixed(this._roundToDecimal);\n        }\n\n        return this.value || 0;\n      }\n      /** set focus to the host element */\n\n    }, {\n      key: \"focus\",\n      value: function focus(options) {\n        this._focusHostElement(options);\n      }\n      /** blur the host element */\n\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this._blurHostElement();\n      }\n      /** The percentage of the slider that coincides with the value. */\n\n    }, {\n      key: \"percent\",\n      get: function get() {\n        return this._clamp(this._percent);\n      }\n      /**\n       * Whether the axis of the slider is inverted.\n       * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n       */\n\n    }, {\n      key: \"_shouldInvertAxis\",\n      value: function _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n      }\n      /** Whether the slider is at its minimum value. */\n\n    }, {\n      key: \"_isMinValue\",\n      value: function _isMinValue() {\n        return this.percent === 0;\n      }\n      /**\n       * The amount of space to leave between the slider thumb and the track fill & track background\n       * elements.\n       */\n\n    }, {\n      key: \"_getThumbGap\",\n      value: function _getThumbGap() {\n        if (this.disabled) {\n          return DISABLED_THUMB_GAP;\n        }\n\n        if (this._isMinValue() && !this.thumbLabel) {\n          return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n\n        return 0;\n      }\n      /** CSS styles for the track background element. */\n\n    }, {\n      key: \"_getTrackBackgroundStyles\",\n      value: function _getTrackBackgroundStyles() {\n        var axis = this.vertical ? 'Y' : 'X';\n        var scale = this.vertical ? \"1, \".concat(1 - this.percent, \", 1\") : \"\".concat(1 - this.percent, \", 1, 1\");\n        var sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n          // scale3d avoids some rendering issues in Chrome. See #12071.\n          transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._getThumbGap(), \"px) scale3d(\").concat(scale, \")\")\n        };\n      }\n      /** CSS styles for the track fill element. */\n\n    }, {\n      key: \"_getTrackFillStyles\",\n      value: function _getTrackFillStyles() {\n        var percent = this.percent;\n        var axis = this.vertical ? 'Y' : 'X';\n        var scale = this.vertical ? \"1, \".concat(percent, \", 1\") : \"\".concat(percent, \", 1, 1\");\n        var sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n          // scale3d avoids some rendering issues in Chrome. See #12071.\n          transform: \"translate\".concat(axis, \"(\").concat(sign).concat(this._getThumbGap(), \"px) scale3d(\").concat(scale, \")\"),\n          // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n          // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n          // the value of the slider is 0, we can easily get into this situation. We force a\n          // recalculation by changing the element's `display` when it goes from 0 to any other value.\n          display: percent === 0 ? 'none' : ''\n        };\n      }\n      /** CSS styles for the ticks container element. */\n\n    }, {\n      key: \"_getTicksContainerStyles\",\n      value: function _getTicksContainerStyles() {\n        var axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n        var sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        var offset = this._tickIntervalPercent / 2 * 100;\n        return {\n          'transform': \"translate\".concat(axis, \"(\").concat(sign).concat(offset, \"%)\")\n        };\n      }\n      /** CSS styles for the ticks element. */\n\n    }, {\n      key: \"_getTicksStyles\",\n      value: function _getTicksStyles() {\n        var tickSize = this._tickIntervalPercent * 100;\n        var backgroundSize = this.vertical ? \"2px \".concat(tickSize, \"%\") : \"\".concat(tickSize, \"% 2px\");\n        var axis = this.vertical ? 'Y' : 'X'; // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n\n        var sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        var rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        var styles = {\n          'backgroundSize': backgroundSize,\n          // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n          'transform': \"translateZ(0) translate\".concat(axis, \"(\").concat(sign).concat(tickSize / 2, \"%)\").concat(rotate)\n        };\n\n        if (this._isMinValue() && this._getThumbGap()) {\n          var shouldInvertAxis = this._shouldInvertAxis();\n\n          var side;\n\n          if (this.vertical) {\n            side = shouldInvertAxis ? 'Bottom' : 'Top';\n          } else {\n            side = shouldInvertAxis ? 'Right' : 'Left';\n          }\n\n          styles[\"padding\".concat(side)] = \"\".concat(this._getThumbGap(), \"px\");\n        }\n\n        return styles;\n      }\n    }, {\n      key: \"_getThumbContainerStyles\",\n      value: function _getThumbContainerStyles() {\n        var shouldInvertAxis = this._shouldInvertAxis();\n\n        var axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n        var invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n        var offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n          'transform': \"translate\".concat(axis, \"(-\").concat(offset, \"%)\")\n        };\n      }\n      /**\n       * Whether mouse events should be converted to a slider position by calculating their distance\n       * from the right or bottom edge of the slider as opposed to the top or left.\n       */\n\n    }, {\n      key: \"_shouldInvertMouseCoords\",\n      value: function _shouldInvertMouseCoords() {\n        var shouldInvertAxis = this._shouldInvertAxis();\n\n        return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n      }\n      /** The language direction for this slider element. */\n\n    }, {\n      key: \"_getDirection\",\n      value: function _getDirection() {\n        return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        var _this2 = this;\n\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(function (origin) {\n          _this2._isActive = !!origin && origin !== 'keyboard';\n\n          _this2._changeDetectorRef.detectChanges();\n        });\n\n        if (this._dir) {\n          this._dirChangeSubscription = this._dir.change.subscribe(function () {\n            _this2._changeDetectorRef.markForCheck();\n          });\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        var element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n\n        this._removeGlobalEvents();\n\n        this._focusMonitor.stopMonitoring(this._elementRef);\n\n        this._dirChangeSubscription.unsubscribe();\n      }\n    }, {\n      key: \"_onMouseenter\",\n      value: function _onMouseenter() {\n        if (this.disabled) {\n          return;\n        } // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n\n\n        this._sliderDimensions = this._getSliderDimensions();\n\n        this._updateTickIntervalPercent();\n      }\n    }, {\n      key: \"_onFocus\",\n      value: function _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n\n        this._updateTickIntervalPercent();\n      }\n    }, {\n      key: \"_onBlur\",\n      value: function _onBlur() {\n        this.onTouched();\n      }\n    }, {\n      key: \"_onKeydown\",\n      value: function _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event) || this._isSliding && this._isSliding !== 'keyboard') {\n          return;\n        }\n\n        var oldValue = this.value;\n\n        switch (event.keyCode) {\n          case PAGE_UP:\n            this._increment(10);\n\n            break;\n\n          case PAGE_DOWN:\n            this._increment(-10);\n\n            break;\n\n          case END:\n            this.value = this.max;\n            break;\n\n          case HOME:\n            this.value = this.min;\n            break;\n\n          case LEFT_ARROW:\n            // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n            // inverted slider the thumb moves in that direction. However for a blind user, nothing\n            // about the slider indicates that it is inverted. They will expect left to be decrement,\n            // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n            // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n            // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n            // sighted users, therefore we do not swap the meaning.\n            this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n\n            break;\n\n          case UP_ARROW:\n            this._increment(1);\n\n            break;\n\n          case RIGHT_ARROW:\n            // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n            this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n\n            break;\n\n          case DOWN_ARROW:\n            this._increment(-1);\n\n            break;\n\n          default:\n            // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n            // it.\n            return;\n        }\n\n        if (oldValue != this.value) {\n          this._emitInputEvent();\n\n          this._emitChangeEvent();\n        }\n\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n      }\n    }, {\n      key: \"_onKeyup\",\n      value: function _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n          this._isSliding = null;\n        }\n      }\n      /** Use defaultView of injected document if available or fallback to global window reference */\n\n    }, {\n      key: \"_getWindow\",\n      value: function _getWindow() {\n        return this._document.defaultView || window;\n      }\n      /**\n       * Binds our global move and end events. They're bound at the document level and only while\n       * dragging so that the user doesn't have to keep their pointer exactly over the slider\n       * as they're swiping across the screen.\n       */\n\n    }, {\n      key: \"_bindGlobalEvents\",\n      value: function _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        var document = this._document;\n        var isTouch = isTouchEvent(triggerEvent);\n        var moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        var endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n        if (isTouch) {\n          document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n\n        var window = this._getWindow();\n\n        if (typeof window !== 'undefined' && window) {\n          window.addEventListener('blur', this._windowBlur);\n        }\n      }\n      /** Removes any global event listeners that we may have added. */\n\n    }, {\n      key: \"_removeGlobalEvents\",\n      value: function _removeGlobalEvents() {\n        var document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n        var window = this._getWindow();\n\n        if (typeof window !== 'undefined' && window) {\n          window.removeEventListener('blur', this._windowBlur);\n        }\n      }\n      /** Increments the slider by the given number of steps (negative number decrements). */\n\n    }, {\n      key: \"_increment\",\n      value: function _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n      }\n      /** Calculate the new value from the new physical location. The value will always be snapped. */\n\n    }, {\n      key: \"_updateValueFromPosition\",\n      value: function _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n          return;\n        }\n\n        var offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        var size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        var posComponent = this.vertical ? pos.y : pos.x; // The exact value is calculated from the event and used to find the closest snap value.\n\n        var percent = this._clamp((posComponent - offset) / size);\n\n        if (this._shouldInvertMouseCoords()) {\n          percent = 1 - percent;\n        } // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n\n\n        if (percent === 0) {\n          this.value = this.min;\n        } else if (percent === 1) {\n          this.value = this.max;\n        } else {\n          var exactValue = this._calculateValue(percent); // This calculation finds the closest step by finding the closest\n          // whole number divisible by the step relative to the min.\n\n\n          var closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min; // The value needs to snap to the min and max.\n\n          this.value = this._clamp(closestValue, this.min, this.max);\n        }\n      }\n      /** Emits a change event if the current value is different from the last emitted value. */\n\n    }, {\n      key: \"_emitChangeEvent\",\n      value: function _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n      }\n      /** Emits an input event when the current value is different from the last emitted value. */\n\n    }, {\n      key: \"_emitInputEvent\",\n      value: function _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n      }\n      /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n\n    }, {\n      key: \"_updateTickIntervalPercent\",\n      value: function _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n          return;\n        }\n\n        if (this.tickInterval == 'auto') {\n          var trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n          var pixelsPerStep = trackSize * this.step / (this.max - this.min);\n          var stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n          var pixelsPerTick = stepsPerTick * this.step;\n          this._tickIntervalPercent = pixelsPerTick / trackSize;\n        } else {\n          this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n      }\n      /** Creates a slider change object from the specified value. */\n\n    }, {\n      key: \"_createChangeEvent\",\n      value: function _createChangeEvent() {\n        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n        var event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n      }\n      /** Calculates the percentage of the slider that a value is. */\n\n    }, {\n      key: \"_calculatePercentage\",\n      value: function _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n      }\n      /** Calculates the value a percentage of the slider corresponds to. */\n\n    }, {\n      key: \"_calculateValue\",\n      value: function _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n      }\n      /** Return a number between two numbers. */\n\n    }, {\n      key: \"_clamp\",\n      value: function _clamp(value) {\n        var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        return Math.max(min, Math.min(value, max));\n      }\n      /**\n       * Get the bounding client rect of the slider track element.\n       * The track is used rather than the native element to ignore the extra space that the thumb can\n       * take up.\n       */\n\n    }, {\n      key: \"_getSliderDimensions\",\n      value: function _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n      }\n      /**\n       * Focuses the native element.\n       * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n       */\n\n    }, {\n      key: \"_focusHostElement\",\n      value: function _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n      }\n      /** Blurs the native element. */\n\n    }, {\n      key: \"_blurHostElement\",\n      value: function _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n      }\n      /**\n       * Sets the model value. Implemented as part of ControlValueAccessor.\n       * @param value\n       */\n\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.value = value;\n      }\n      /**\n       * Registers a callback to be triggered when the value has changed.\n       * Implemented as part of ControlValueAccessor.\n       * @param fn Callback to be registered.\n       */\n\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n      }\n      /**\n       * Registers a callback to be triggered when the component is touched.\n       * Implemented as part of ControlValueAccessor.\n       * @param fn Callback to be registered.\n       */\n\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouched = fn;\n      }\n      /**\n       * Sets whether the component should be disabled.\n       * Implemented as part of ControlValueAccessor.\n       * @param isDisabled\n       */\n\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n      }\n    }]);\n\n    return MatSlider;\n  }(_MatSliderBase);\n\n  MatSlider.ɵfac = function MatSlider_Factory(t) {\n    return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatSlider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatSlider,\n    selectors: [[\"mat-slider\"]],\n    viewQuery: function MatSlider_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"],\n    hostVars: 29,\n    hostBindings: function MatSlider_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n          return ctx._onKeyup();\n        })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n          return ctx._onMouseenter();\n        })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) {\n          return $event.preventDefault();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      color: \"color\",\n      tabIndex: \"tabIndex\",\n      invert: \"invert\",\n      max: \"max\",\n      min: \"min\",\n      step: \"step\",\n      thumbLabel: \"thumbLabel\",\n      tickInterval: \"tickInterval\",\n      value: \"value\",\n      vertical: \"vertical\",\n      displayWith: \"displayWith\",\n      valueText: \"valueText\"\n    },\n    outputs: {\n      change: \"change\",\n      input: \"input\",\n      valueChange: \"valueChange\"\n    },\n    exportAs: [\"matSlider\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 13,\n    vars: 6,\n    consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n    template: function MatSlider_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n      }\n    },\n    directives: [ɵngcc3.NgStyle],\n    styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatSlider;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Returns whether an event is a touch event. */\n\n\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\n\n\nfunction getPointerPositionOnPage(event, id) {\n  var point;\n\n  if (isTouchEvent(event)) {\n    // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n    // If that's the case, attribute the first touch to all active sliders. This should still cover\n    // the most common case while only breaking multi-touch.\n    if (typeof id === 'number') {\n      point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n    } else {\n      // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n\n  return point ? {\n    x: point.clientX,\n    y: point.clientY\n  } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\n\n\nfunction findMatchingTouch(touches, id) {\n  for (var i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n\n  return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\n\n\nfunction getTouchIdForSlider(event, sliderHost) {\n  for (var i = 0; i < event.touches.length; i++) {\n    var target = event.touches[i].target;\n\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n\n  return undefined;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatSliderModule = /*#__PURE__*/(function () {\n  var MatSliderModule = /*#__PURE__*/_createClass(function MatSliderModule() {\n    _classCallCheck(this, MatSliderModule);\n  });\n\n  MatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n    return new (t || MatSliderModule)();\n  };\n\n  MatSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatSliderModule\n  });\n  MatSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatCommonModule], MatCommonModule]\n  });\n  return MatSliderModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function declarations() {\n      return [MatSlider];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };","map":{"version":3,"names":["DOCUMENT","CommonModule","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","ChangeDetectorRef","Optional","Attribute","NgZone","Inject","Input","Output","ViewChild","NgModule","mixinTabIndex","mixinColor","mixinDisabled","MatCommonModule","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","normalizePassiveListenerOptions","Subscription","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","_MatSliderBase","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","run","_touchId","getTouchIdForSlider","nativeElement","undefined","pointerPosition","getPointerPositionOnPage","oldValue","value","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","addEventListener","v","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","min","max","parseFloat","toFixed","displayWith","options","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","subscribe","origin","detectChanges","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","keyCode","_increment","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","_getWindow","numSteps","step","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","focus","blur","fn","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","$event","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","valueText","displayValue","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","ɵɵtextInterpolate","directives","NgStyle","encapsulation","changeDetection","ngDevMode","id","point","touches","clientX","clientY","i","identifier","sliderHost","target","contains","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"sources":["C:/Users/sonkh/2/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event) ?\n                    getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}