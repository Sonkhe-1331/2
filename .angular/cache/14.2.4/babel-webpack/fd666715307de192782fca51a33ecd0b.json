{"ast":null,"code":"import _classCallCheck from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/sonkh/2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { CourseService } from \"../../services/course.service\";\nimport { SubjectsService } from \"../../services/subjects.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/course.service\";\nimport * as i4 from \"../../services/subjects.service\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction CourseDialogComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1.SubjectId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.SubjectDesc, \" \");\n  }\n}\n\nexport var CourseDialogComponent = /*#__PURE__*/function () {\n  function CourseDialogComponent(dialog, fb, dialogRef, data, courseService, subjectsService) {\n    _classCallCheck(this, CourseDialogComponent);\n\n    this.dialog = dialog;\n    this.fb = fb;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.courseService = courseService;\n    this.subjectsService = subjectsService;\n    this.subjects = [];\n  }\n\n  _createClass(CourseDialogComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.getSubjects();\n      var edit = this.data.edit;\n      this.formCentre = this.fb.group({\n        CourseDesc: [\"\", Validators.required],\n        SubjectId: [\"\", Validators.required]\n      });\n      edit == true ? this.populateForm(this.data.course) : \"\";\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this = this;\n\n      console.log(this.formCentre.valid);\n\n      if (this.formCentre.valid) {\n        if (this.data.edit == true) {\n          this.courseService.updateCourse(this.formCentre.value, this.data.course.CourseId).subscribe(function (data) {\n            _this.Close();\n          });\n        } else {\n          this.courseService.AddCourse(this.formCentre.value).subscribe(function (data) {\n            _this.Close();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"populateForm\",\n    value: function populateForm(data) {\n      this.formCentre.patchValue({\n        CourseDesc: data.CourseDesc,\n        SubjectId: data.SubjectId\n      });\n    }\n  }, {\n    key: \"Close\",\n    value: function Close() {\n      this.dialog.closeAll();\n    }\n  }, {\n    key: \"getSubjects\",\n    value: function getSubjects() {\n      var _this2 = this;\n\n      this.subjectsService.getSubjects().subscribe(function (res) {\n        _this2.subjects = res;\n      });\n    }\n  }]);\n\n  return CourseDialogComponent;\n}();\n\nCourseDialogComponent.ɵfac = function CourseDialogComponent_Factory(t) {\n  return new (t || CourseDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.CourseService), i0.ɵɵdirectiveInject(i4.SubjectsService));\n};\n\nCourseDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CourseDialogComponent,\n  selectors: [[\"app-course-dialog\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[\"mat-dialog-title\", \"\", \"align\", \"center\"], [\"autocomplete\", \"off\", 1, \"example-form\", 3, \"formGroup\", \"submit\"], [\"mat-dialog-content\", \"\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"ex. Midrand c\", \"formControlName\", \"CourseDesc\"], [\"formControlName\", \"SubjectId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\"], [\"mat-stroked-button\", \"\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"value\"]],\n  template: function CourseDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \" Centre \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function CourseDialogComponent_Template_form_submit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Course Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Student Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-select\", 5);\n      i0.ɵɵtemplate(13, CourseDialogComponent_mat_option_13_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"button\", 8);\n      i0.ɵɵtext(16, \"Confirm\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function CourseDialogComponent_Template_button_click_17_listener() {\n        return ctx.Close();\n      });\n      i0.ɵɵtext(18, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formCentre);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n    }\n  },\n  directives: [i1.MatDialogTitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatDialogContent, i5.MatFormField, i5.MatLabel, i6.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i7.MatSelect, i8.NgForOf, i9.MatOption, i1.MatDialogActions, i10.MatButton],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"module"}